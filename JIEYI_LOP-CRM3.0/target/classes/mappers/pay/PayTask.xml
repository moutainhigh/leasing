<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
		PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
		"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="PayTask">

	<select id="getAllPayTask" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT *
		FROM (
			SELECT CC.*,ROWNUM ROWNO
			FROM (
				SELECT frph.ID,
					frph.STATUS,
					TSD.FLAG STATUS_NAME,
					TYW.FLAG PLATFORM_NAME,
					fph.ID PROJECT_ID,
					fcc.NAME RENTER_NAME,
					fcc.TYPE CUST_TYPE,
					fph.Clerk_Name CLERK_NAME,
					fph.PRO_CODE PRO_CODE,
					fph.LEASE_CODE LEASE_CODE,
					fph.CLIENT_ID CLIENT_ID,
					frph.PAYLIST_CODE,
					frph.ZQX_PARENT_ID,
					frph.VERSION_CODE,
					TO_CHAR(frph.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
					TO_CHAR(frph.START_DATE, 'YYYY-MM-DD') START_DATE,
					tv.STATUS P_STATUS,
					CASE WHEN frph.ZRZ_STATUS ='1' THEN '未融资' else '已融资' end ZRZ_STATUS,
					tv.LEASE_TERM,
					tv.PAY_MONEY,tv.PAY_PERIOD,
					CASE WHEN tv.IS_DUN_FLAG ='0' THEN '未逾期' else '已逾期' end IS_DUN_FLAG,
					PE.SCHEME_ID, PE.SCHEME_ROW_NUM
				FROM
				<if test="PLANFLAG=='ALL'">FIL_RENT_PLAN_HEAD frph</if>
				<if test="PLANFLAG !='ALL'">FIL_RENT_PLAN_HEAD_MAX_V frph</if>
				left join FIL_PROJECT_HEAD fph on frph.PROJECT_ID = fph.ID
				left join FIL_CUST_CLIENT fcc on fph.CLIENT_ID = fcc.ID
				left join (SELECT TT.FLAG, TT.CODE
							FROM T_SYS_DATA_DICTIONARY TT
							WHERE TT.TYPE = #{TYPE_}
							AND TT.STATUS = 0) TSD on frph.STATUS = TSD.CODE
				left join (SELECT TTT.FLAG, TTT.CODE
							FROM T_SYS_SITE_DICTIONARY TTT
							WHERE TTT.TYPE = #{TYPE1_}
							AND TTT.STATUS = 0) TYW	on fph.PLATFORM_TYPE = TYW.CODE
				left join fil_rent_plan_head_max_v tv on frph.paylist_code = tv.PAYLIST_CODE
				LEFT JOIN (SELECT DISTINCT E.PAYLIST_CODE,
							E.SCHEME_ID_ACTUAL SCHEME_ID,
							E.SCHEME_ROW_NUM
							FROM FIL_PROJECT_EQUIPMENT E) PE ON frph.PAYLIST_CODE = PE.PAYLIST_CODE
				<where>
					fph.LEASE_CODE is not null AND frph.STATUS in (0,3,33,6,66,4,7,8,9,22)
					<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[frph.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
					<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[frph.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
					<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND fph.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
					<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND fph.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
					<if test="DATE_STATUS!=null and DATE_STATUS!=''">AND frph.STATUS=#{DATE_STATUS}</if>
					<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND frph.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
					<if test="RENTER_NAME!=null and RENTER_NAME!=''">AND fcc.NAME LIKE '%'||#{RENTER_NAME}||'%'</if>
					<if test="PLATFORM_TYPE!=null and PLATFORM_TYPE!=''">AND fph.PLATFORM_TYPE =#{PLATFORM_TYPE}</if>
					<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND fph.CLERK_ID IN ${SYS_CLERK_ID_} </if>
					<if test="SYS_REGIONAL !=null and SYS_REGIONAL !=''">AND fph.ORD_ID IN ${SYS_REGIONAL} </if>
					<if test="SYS_PROVINCE !=null and SYS_PROVINCE !=''">AND fph.ORD_ID IN ${SYS_PROVINCE} </if>
					<if test="SYS_SUPPLIER !=null and SYS_SUPPLIER !=''">AND fph.ORD_ID IN ${SYS_SUPPLIER} </if>
					<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND fph.ORD_ID IN (
						select so1.id
						from secu_org so1
						start with so1.id = (
						SELECT SO123.id
						from
						(
						SELECT SO.ID as ID
						FROM SECU_ORG SO
						WHERE SO.TYPE = 5
						START WITH	SO.ID = #{ORD_ID}
						CONNECT BY PRIOR SO.PARENT_ID = SO.ID
						) SO123
						where rownum = 1
						)
						connect by prior so1.id = so1.parent_id
						)
					</if>
				</where>
			) CC
			ORDER BY abs(CC.VERSION_CODE),CC.CREATE_DATE DESC
		) CCC
		WHERE CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>

	<select id="getAllPayTask_count" parameterType="java.util.Map"
			resultType="int">
		SELECT count(0)
		FROM
		<if test="PLANFLAG=='ALL'">FIL_RENT_PLAN_HEAD frph</if>
		<if test="PLANFLAG !='ALL'">FIL_RENT_PLAN_HEAD_MAX_V frph</if>
		left join FIL_PROJECT_HEAD fph on frph.PROJECT_ID = fph.ID
		left join FIL_CUST_CLIENT fcc on fph.CLIENT_ID = fcc.ID
		left join (SELECT TT.FLAG, TT.CODE
		FROM T_SYS_DATA_DICTIONARY TT
		WHERE TT.TYPE =#{TYPE_} AND TT.STATUS = 0) TSD	on frph.STATUS = TSD.CODE
		left join (SELECT TTT.FLAG, TTT.CODE
		FROM T_SYS_SITE_DICTIONARY TTT
		WHERE TTT.TYPE =#{TYPE1_} AND TTT.STATUS = 0) TYW on fph.PLATFORM_TYPE = TYW.CODE
		left join fil_rent_plan_head_max_v tv on frph.paylist_code = tv.PAYLIST_CODE
		<where>
			fph.LEASE_CODE is not null AND frph.STATUS in (0,3,33,6,66,4,7,8,9,22)
			<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[frph.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
			<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[frph.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
			<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND fph.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
			<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND fph.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
			<if test="DATE_STATUS!=null and DATE_STATUS!=''">AND frph.STATUS=#{DATE_STATUS}</if>
			<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND frph.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="RENTER_NAME!=null and RENTER_NAME!=''">AND fcc.NAME LIKE '%'||#{RENTER_NAME}||'%'</if>
			<if test="PLATFORM_TYPE!=null and PLATFORM_TYPE!=''">AND fph.PLATFORM_TYPE =#{PLATFORM_TYPE}</if>
			<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND fph.CLERK_ID IN ${SYS_CLERK_ID_} </if>
			<if test="SYS_REGIONAL !=null and SYS_REGIONAL !=''">AND fph.ORD_ID IN ${SYS_REGIONAL} </if>
			<if test="SYS_PROVINCE !=null and SYS_PROVINCE !=''">AND fph.ORD_ID IN ${SYS_PROVINCE} </if>
			<if test="SYS_SUPPLIER !=null and SYS_SUPPLIER !=''">AND fph.ORD_ID IN ${SYS_SUPPLIER} </if>
			<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND fph.ORD_ID IN (
				select so1.id from secu_org so1
				start
				with so1.id = (
				SELECT SO123.id from
				(
				SELECT SO.ID as ID
				FROM SECU_ORG SO
				WHERE SO.TYPE = 5
				START
				WITH
				SO.ID = #{ORD_ID}
				CONNECT BY PRIOR SO.PARENT_ID = SO.ID
				)SO123
				where rownum =1
				)
				connect
				by prior so1.id = so1.parent_id
				)
			</if>
		</where>
	</select>

	<select id="queryStatusForName"  resultType="Map">
		<![CDATA[
			SELECT T.DATA_ID,T.CODE,T.FLAG,T.SHORTNAME
			from T_SYS_DATA_DICTIONARY T
			WHERE T.TYPE='还款计划状态' AND T.CODE in (0,3,33,6,66,4,7,8,9) AND T.STATUS = 0
			ORDER BY T.LEVEL_NUM,T.CODE
		]]>
	</select>

	<select id="getAllPayTask_stuts" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT *
		FROM (
			SELECT CC.*,ROWNUM ROWNO
			FROM (
				SELECT frph.ID,
					frph.STATUS,
					TSD.FLAG STATUS_NAME,
					fph.ID PROJECT_ID,
					fcc.NAME RENTER_NAME,
					fph.Clerk_Name CLERK_NAME,
					fph.LEASE_CODE,
					frph.PAYLIST_CODE,
					frph.VERSION_CODE,
					TO_CHAR(frph.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
					TO_CHAR(frph.START_DATE, 'YYYY-MM-DD') START_DATE,
					frph.STATUS P_STATUS
				FROM fil_rent_plan_head frph
				left join FIL_PROJECT_HEAD fph on frph.PROJECT_ID = fph.ID
				left join FIL_CUST_CLIENT fcc on fph.CLIENT_ID = fcc.ID
				left join (SELECT TT.FLAG, TT.CODE
				FROM T_SYS_DATA_DICTIONARY TT
				WHERE TT.TYPE ='还款计划状态'
				AND TT.STATUS = 0) TSD
				on frph.STATUS = TSD.CODE
				<where>
					<if test="STATUS==1">AND fph.STATUS>=20</if>
					<if test="STATUS!='' and STATUS==0">AND fph.STATUS &lt; 20</if>
					<if test="B_CREATE_DATE!=null and B_CREATE_DATE!=''">AND <![CDATA[frph.CREATE_DATE>=TO_DATE(#{B_CREATE_DATE},'YYYY-MM-DD')]]></if>
					<if test="E_CREATE_DATE!=null and E_CREATE_DATE!=''">AND <![CDATA[frph.CREATE_DATE<=TO_DATE(#{E_CREATE_DATE},'YYYY-MM-DD')]]></if>
					<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[frph.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
					<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[frph.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
					<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND fph.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
					<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND fph.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
					<if test="DATE_STATUS!=null and DATE_STATUS!=''">AND frph.STATUS=#{DATE_STATUS}</if>
					<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND frph.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
					<if test="P_STATUS!=null and P_STATUS!=''">AND frph.STATUS in ${P_STATUS}</if>
					<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND fph.ORD_ID IN ${SYS_ORGIDS_} </if>
					<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND fph.CLERK_ID = #{SYS_CLERK_ID_} </if>
				</where>
			) CC
			ORDER BY CC.CREATE_DATE DESC
		) CCC
		WHERE CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>

	<select id="getAllPayTask_count_stuts" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(1) from (
		SELECT frph.ID,
			frph.STATUS,
			TSD.FLAG STATUS_NAME,
			fph.ID PROJECT_ID,
			fcc.NAME RENTER_NAME,
			fph.Clerk_Name CLERK_NAME,
			fph.LEASE_CODE,
			frph.PAYLIST_CODE,
			frph.VERSION_CODE,
			TO_CHAR(frph.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
			TO_CHAR(frph.START_DATE, 'YYYY-MM-DD') START_DATE,
			frph.STATUS P_STATUS
		FROM fil_rent_plan_head frph
		left join FIL_PROJECT_HEAD fph on frph.PROJECT_ID = fph.ID
		left join FIL_CUST_CLIENT fcc on fph.CLIENT_ID = fcc.ID
		left join (SELECT TT.FLAG, TT.CODE
		FROM T_SYS_DATA_DICTIONARY TT
		WHERE TT.TYPE ='还款计划状态'
		AND TT.STATUS = 0) TSD
		on frph.STATUS = TSD.CODE
		<where>
			<if test="STATUS==1">AND fph.STATUS>=20</if>
			<if test="STATUS!='' and STATUS==0">AND fph.STATUS &lt; 20</if>
			<if test="B_CREATE_DATE!=null and B_CREATE_DATE!=''">AND <![CDATA[frph.CREATE_DATE>=TO_DATE(#{B_CREATE_DATE},'YYYY-MM-DD')]]></if>
			<if test="E_CREATE_DATE!=null and E_CREATE_DATE!=''">AND <![CDATA[frph.CREATE_DATE<=TO_DATE(#{E_CREATE_DATE},'YYYY-MM-DD')]]></if>
			<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[frph.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
			<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[frph.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
			<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND fph.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
			<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND fph.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
			<if test="DATE_STATUS!=null and DATE_STATUS!=''">AND frph.STATUS=#{DATE_STATUS}</if>
			<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND frph.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="P_STATUS!=null and P_STATUS!=''">AND frph.STATUS in ${P_STATUS}</if>
			<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND fph.ORD_ID IN ${SYS_ORGIDS_} </if>
			<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND fph.CLERK_ID = #{SYS_CLERK_ID_} </if>
		</where>
		)
	</select>

	<select id="queryPay" parameterType="map" resultType="map">
		SELECT	t.id, t.paylist_code,t.year_interest,t.pay_way,t.lease_period
		FROM fil_rent_plan_head_max_v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="queryPay_PROJECT_ID" parameterType="map" resultType="int">
		SELECT t.PROJECT_ID
		FROM fil_rent_plan_head_bas_max__v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="queryPayByID" parameterType="map" resultType="map">
		SELECT	t.id, t.paylist_code,t.year_interest,t.pay_way,t.lease_period,t.CALCULATE_WAY
		FROM fil_rent_plan_head t
		where t.ID = #{ID}
	</select>

	<select id="queryMinRentListByID" parameterType="map" resultType="int">
		SELECT min(PERIOD_NUM) PERIOD_NUM
		FROM FIL_RENT_PLAN_DETAIL t
		where t.pay_id=#{ID}
	</select>

	<select id="payDetail" parameterType="map" resultType="map">
		SELECT to_char(t.pay_date,'yyyy-mm-dd')pay_date,t.period_num,t.item_name,round(nvl(t.item_money,0),2) ITEM_MONEY
		FROM fil_rent_plan_detail t
		where t.pay_id=#{ID} and t.item_flag=2
			and t.period_num &lt;>0 order by t.period_num
	</select>

	<select id="queryNewRate" parameterType="java.util.Map"	resultType="java.util.Map">
		SELECT	T.ADJUST_TIME,T.SIX_MONTHS,T.ONE_YEAR,T.ONE_THREE_YEARS,
			T.THREE_FIVE_YEARS,T.OVER_FIVE_YEARS,T.REMARK
		FROM T_SYS_RATE T
		WHERE T.ADJUST_TIME=(SELECT MAX(ADJUST_TIME) FROM T_SYS_RATE)
	</select>

	<insert id="upgrade_payplan" parameterType="Map">
		<selectKey resultType="int" order="BEFORE" keyProperty="NEWID">
			SELECT seq_fil_rent_plan_head.NEXTVAL FROM DUAL
		</selectKey>
		insert into fil_rent_plan_head
		(
			ID,
			PAYLIST_CODE,LEASE_TOPRIC,DEPOSIT_RATE,
			DEPOSIT_VALUE,POUNDAGE_RATE,POUNDAGE_VALUE,FIRSTRENT_RATE,FIRSTRENT_VALUE,DAY_PUACCRATE_RATE,
			INTER_UPRATE,YEAR_INTEREST,TOPRIC_SUBFIRENT,LEASE_TERM,PROJECT_ID,LEASE_PERIOD,CREATE_DATE,START_DATE,
			STATUS,CREATE_PERSON,LEAD_PERSON,PAY_WAY,
			VERSION_CODE,
			END_DATE,
			CHANGE_START_FLAG,
			BANK_ID,
			BANK_FLAG,
			EX_STATUS,
			EX_REMARK,
			NOSTART_STATUS,
			NOSTART_REMARK,
			LEGAL_STATUS,
			PAY_STATUS,
			YEAR_TYPE,
			RENT_CHARGE_RATE,
			MANAGEMENT_FEETYPE,
			COMPANY_PERCENT,
			COMPANY_FEE,
			CALCULATE_WAY,
			PAY_TYPE,
			CHANGE_TYPE,
			UPDATE_STATUS,
			FIRST_PAYMENT_TIME,
			START_CONFIRM_DATE,
			FIRST_MONEY_ALL,
			MONEY_ALL,
			POUNDAGE_PRICE,
			SCHEME_CLOB,
			FIRSTPAYDATE,
			REPAYMENT_DATE,
			POUNDAGE_WAY,
			PLATFORM_TYPE,
			ZRZ_STATUS,
			ZQX_PARENT_ID,
			EQINVOICE_LEGER_NO,
			EQINVOICE_EXPORT_LEGER,
			PAY_PERIOD,
			PAY_MONEY,
			IS_DUN_FLAG,
			DEPOSIT_STATUS,
			DEPOSIT_SY,
			ZQX_MONEY
		)
		select #{NEWID}, paylist_code, lease_topric, deposit_rate,
		deposit_value, poundage_rate, poundage_value, firstrent_rate, firstrent_value,
		day_puaccrate_rate, inter_uprate, YEAR_INTEREST,
		topric_subfirent,lease_term,
		PROJECT_ID, lease_period, create_date, start_date, status, create_person,
		lead_person, pay_way, version_code+1, end_date, change_start_flag,
		bank_id, bank_flag,
		ex_status, ex_remark, nostart_status, nostart_remark, legal_status, pay_status,
		year_type, rent_charge_rate, management_feetype, company_percent,
		company_fee,
		calculate_way, pay_type, change_type,
		update_status,FIRST_PAYMENT_TIME,START_CONFIRM_DATE,FIRST_MONEY_ALL,MONEY_ALL,
		POUNDAGE_PRICE,SCHEME_CLOB,FIRSTPAYDATE,REPAYMENT_DATE,
		POUNDAGE_WAY,
		PLATFORM_TYPE,
		ZRZ_STATUS,
		ZQX_PARENT_ID,
		EQINVOICE_LEGER_NO,
		EQINVOICE_EXPORT_LEGER,
		PAY_PERIOD,
		PAY_MONEY,
		IS_DUN_FLAG,
		DEPOSIT_STATUS,
		DEPOSIT_SY,
		ZQX_MONEY
		from fil_rent_plan_head_max_v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</insert>

	<insert id="upgrade_payplan_change" parameterType="Map">
		<selectKey resultType="int" order="BEFORE" keyProperty="NEWID">
			SELECT seq_fil_rent_plan_head.NEXTVAL FROM DUAL
		</selectKey>
		insert into fil_rent_plan_head (ID,
		PAYLIST_CODE,LEASE_TOPRIC,DEPOSIT_RATE,
		DEPOSIT_VALUE,POUNDAGE_RATE,POUNDAGE_VALUE,FIRSTRENT_RATE,FIRSTRENT_VALUE,DAY_PUACCRATE_RATE,
		INTER_UPRATE,YEAR_INTEREST,TOPRIC_SUBFIRENT,LEASE_TERM,PROJECT_ID,LEASE_PERIOD,CREATE_DATE,START_DATE,
		STATUS,CREATE_PERSON,LEAD_PERSON,PAY_WAY,
		VERSION_CODE,
		END_DATE,
		CHANGE_START_FLAG,
		BANK_ID,
		BANK_FLAG,
		EX_STATUS,
		EX_REMARK,
		NOSTART_STATUS,
		NOSTART_REMARK,
		LEGAL_STATUS,
		PAY_STATUS,
		YEAR_TYPE,
		RENT_CHARGE_RATE,
		MANAGEMENT_FEETYPE,
		COMPANY_PERCENT,
		COMPANY_FEE,
		CALCULATE_WAY,
		PAY_TYPE,
		CHANGE_TYPE,
		UPDATE_STATUS,
		FIRST_PAYMENT_TIME,
		START_CONFIRM_DATE,
		FIRST_MONEY_ALL,
		MONEY_ALL)
		select #{NEWID}, paylist_code, lease_topric, deposit_rate,
		deposit_value, poundage_rate, poundage_value, firstrent_rate, firstrent_value,
		day_puaccrate_rate, inter_uprate, YEAR_INTEREST, topric_subfirent,
		<if test="code_ !=null and code_ !='' and code_ ==4">lease_term - #{lease_term},</if>
		<if test="code_ !=null and code_ !='' and code_ ==7">lease_term + #{lease_term},</if>
		<if test="code_ !=null and code_ !='' and code_ ==8">lease_term,</if>
		PROJECT_ID, lease_period, create_date, start_date, status, create_person,
		lead_person, pay_way, version_code+1, end_date, change_start_flag,
		bank_id, bank_flag,
		ex_status, ex_remark, nostart_status, nostart_remark, legal_status, pay_status,
		year_type, rent_charge_rate, management_feetype, company_percent,
		company_fee,
		calculate_way, pay_type, change_type,
		update_status,FIRST_PAYMENT_TIME,START_CONFIRM_DATE,FIRST_MONEY_ALL,MONEY_ALL
		from fil_rent_plan_head_max_v t where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</insert>
	<insert id="payplan_detail" parameterType="Map">
		insert into fil_rent_plan_detail t (t.id
		<if test="PAY_DATE !=null and PAY_DATE !='' and PAY_DATE !='null'">,PAY_DATE</if>
		<if test="PERIOD_NUM !=null and PERIOD_NUM !=''">,PERIOD_NUM</if>
		<if test="ITEM_NAME !=null and ITEM_NAME !=''">,ITEM_NAME</if>
		<if test="ITEM_MONEY !=null and ITEM_MONEY !=''">,ITEM_MONEY</if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,ITEM_FLAG</if>
		<if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
		<if test="LOCKED_FLAG !=null and LOCKED_FLAG !=''">,LOCKED_FLAG</if>
		<if test="FLAG_TYPE !=null and FLAG_TYPE !=''">,FLAG_TYPE</if>
		<if test="IS_COLLECTING !=null and IS_COLLECTING !=''">,IS_COLLECTING</if>
		) values (SEQ_fil_rent_plan_detail.nextval
		<if test="PAY_DATE !=null and PAY_DATE !='' and PAY_DATE !='null'">,to_date(#{PAY_DATE},'yyyy-mm-dd')</if>
		<if test="PERIOD_NUM !=null and PERIOD_NUM !=''">,#{PERIOD_NUM}</if>
		<if test="ITEM_NAME !=null and ITEM_NAME !=''">,#{ITEM_NAME}</if>
		<if test="ITEM_MONEY !=null and ITEM_MONEY !=''">,ROUND(NVL(to_number(#{ITEM_MONEY}),0),2)</if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,#{ITEM_FLAG}</if>
		<if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
		<if test="LOCKED_FLAG !=null and LOCKED_FLAG !=''">,#{LOCKED_FLAG}</if>
		<if test="FLAG_TYPE !=null and FLAG_TYPE !=''">,#{FLAG_TYPE}</if>
		<if test="IS_COLLECTING !=null and IS_COLLECTING !=''">,#{IS_COLLECTING}</if>
		)
	</insert>


	<delete id="del_payplan_detailSCHEME" parameterType="map">
		delete from FIL_RENT_PLAN_DETAIL_SCHEME where PAY_ID = #{PAY_ID}
	</delete>
	<insert id="payplan_detailSCHEME" parameterType="Map">
		insert into FIL_RENT_PLAN_DETAIL_SCHEME t (t.id
		<if test="PAY_DATE !=null and PAY_DATE !='' and PAY_DATE !='null'">,PAY_DATE</if>
		<if test="PERIOD_NUM !=null and PERIOD_NUM !=''">,PERIOD_NUM</if>
		<if test="ITEM_NAME !=null and ITEM_NAME !=''">,ITEM_NAME</if>
		<if test="ITEM_MONEY !=null and ITEM_MONEY !=''">,ITEM_MONEY</if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,ITEM_FLAG</if>
		<if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
		<if test="LOCKED_FLAG !=null and LOCKED_FLAG !=''">,LOCKED_FLAG</if>
		) values (SEQ_fil_rent_plan_detail.nextval
		<if test="PAY_DATE !=null and PAY_DATE !='' and PAY_DATE !='null'">,to_date(#{PAY_DATE},'yyyy-mm-dd')</if>
		<if test="PERIOD_NUM !=null and PERIOD_NUM !=''">,#{PERIOD_NUM}</if>
		<if test="ITEM_NAME !=null and ITEM_NAME !=''">,#{ITEM_NAME}</if>
		<if test="ITEM_MONEY !=null and ITEM_MONEY !=''">,#{ITEM_MONEY}</if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,#{ITEM_FLAG}</if>
		<if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
		<if test="LOCKED_FLAG !=null and LOCKED_FLAG !=''">,#{LOCKED_FLAG}</if>
		)
	</insert>

	<insert id="insert_r_beginning" parameterType="Map">
		insert into fi_r_beginning t (t.beginning_id
		<if test="BEGINNING_RECEIVE_DATA !=null and BEGINNING_RECEIVE_DATA !=''">,BEGINNING_RECEIVE_DATA</if>
		<if test="BEGINNING_NUM !=null and BEGINNING_NUM !=''">,BEGINNING_NUM</if>
		<if test="BEGINNING_NAME !=null and BEGINNING_NAME !=''">,BEGINNING_NAME</if>
		<if test="BEGINNING_MONEY !=null and BEGINNING_MONEY !=''">,BEGINNING_MONEY</if>
		<if test="BEGINNING_FLAG !=null and BEGINNING_FLAG !=''">,BEGINNING_FLAG</if>
		<if test="CREATE_ID !=null and CREATE_ID !=''">,CREATE_ID</if>
		<if test="CREATE_TIME !=null and CREATE_TIME !=''">,CREATE_TIME</if>
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,PAYLIST_CODE</if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,ITEM_FLAG</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID</if>
		<if test="IS_COLLECTING !=null and IS_COLLECTING !=''">,IS_DIFFERENCE</if>
		) values (seq_fi_r_beginning.nextval
		<if test="BEGINNING_RECEIVE_DATA !=null and BEGINNING_RECEIVE_DATA !=''">,to_date(#{BEGINNING_RECEIVE_DATA},'yyyy-mm-dd')</if>
		<if test="BEGINNING_NUM !=null and BEGINNING_NUM !=''">,#{BEGINNING_NUM}</if>
		<if test="BEGINNING_NAME !=null and BEGINNING_NAME !=''">,#{BEGINNING_NAME}</if>
		<if test="BEGINNING_MONEY !=null and BEGINNING_MONEY !=''">,#{BEGINNING_MONEY}</if>
		<if test="BEGINNING_FLAG !=null and BEGINNING_FLAG !=''">,#{BEGINNING_FLAG}</if>
		<if test="CREATE_ID !=null and CREATE_ID !=''">,#{CREATE_ID}</if>
		<if test="CREATE_TIME !=null and CREATE_TIME !=''">,to_date(#{CREATE_TIME},'yyyy-mm-dd')</if>
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,#{PAYLIST_CODE}</if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,#{ITEM_FLAG}</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,#{PROJECT_ID}</if>
		<if test="IS_COLLECTING !=null and IS_COLLECTING !=''">,#{IS_COLLECTING}</if>
		)
	</insert>
	<insert id="insert_payplan" parameterType="Map">
		<selectKey resultType="int" order="BEFORE" keyProperty="NEWID">
			SELECT seq_fil_rent_plan_head.NEXTVAL FROM DUAL
		</selectKey>
		insert into fil_rent_plan_head t (id,CREATE_DATE
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,PAYLIST_CODE</if>
		<if test="LEASE_TOPRIC !=null and LEASE_TOPRIC !=''">,LEASE_TOPRIC</if>
		<if test="DEPOSIT_RATE !=null and DEPOSIT_RATE !=''">,DEPOSIT_RATE</if>
		<if test="DEPOSIT_VALUE !=null and DEPOSIT_VALUE !=''">,DEPOSIT_VALUE</if>
		<if test="POUNDAGE_RATE !=null and POUNDAGE_RATE !=''">,POUNDAGE_RATE</if>
		<if test="POUNDAGE_VALUE !=null and POUNDAGE_VALUE !=''">,POUNDAGE_VALUE</if>
		<if test="FIRSTRENT_RATE !=null and FIRSTRENT_RATE !=''">,FIRSTRENT_RATE</if>
		<if test="FIRSTRENT_VALUE !=null and FIRSTRENT_VALUE !=''">,FIRSTRENT_VALUE</if>
		<if test="DAY_PUACCRATE_RATE !=null and DAY_PUACCRATE_RATE !=''">,DAY_PUACCRATE_RATE</if>
		<if test="INTER_UPRATE !=null and INTER_UPRATE !=''">,INTER_UPRATE</if>
		<if test="YEAR_INTEREST !=null and YEAR_INTEREST !=''">,YEAR_INTEREST</if>
		<if test="TOPRIC_SUBFIRENT !=null and TOPRIC_SUBFIRENT !=''">,TOPRIC_SUBFIRENT</if>
		<if test="LEASE_TERM !=null and LEASE_TERM !=''">,LEASE_TERM</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID</if>
		<if test="LEASE_PERIOD !=null and LEASE_PERIOD !=''">,LEASE_PERIOD</if>
		<if test="START_DATE !=null and START_DATE !=''">,START_DATE</if>
		<if test="STATUS !=null and STATUS !=''">,STATUS</if>
		<if test="CREATE_PERSON !=null and CREATE_PERSON !=''">,CREATE_PERSON</if>
		<if test="LEAD_PERSON !=null and LEAD_PERSON !=''">,LEAD_PERSON</if>
		<if test="PAY_WAY !=null and PAY_WAY !=''">,PAY_WAY</if>
		<if test="VERSION_CODE !=null and VERSION_CODE !=''">,VERSION_CODE</if>
		<if test="END_DATE !=null and END_DATE !=''">,END_DATE</if>
		<if test="CHANGE_START_FLAG !=null and CHANGE_START_FLAG !=''">,CHANGE_START_FLAG</if>
		<if test="BANK_BANK_ID !=null and BANK_ID !=BANK_FLAG">,BANK_ID</if>
		<if test="BANK_FLAG !=null and BANK_FLAG !=''">,BANK_FLAG</if>
		<if test="EX_STATUS !=null and EX_STATUS !=''">,EX_STATUS</if>
		<if test="EX_REMARK !=null and EX_REMARK !=''">,EX_REMARK</if>
		<if test="NOSTART_STATUS !=null and NOSTART_STATUS !=''">,NOSTART_STATUS</if>
		<if test="NOSTART_REMARK !=null and NOSTART_REMARK !=''">,NOSTART_REMARK</if>
		<if test="LEGAL_STATUS !=null and LEGAL_STATUS !=''">,LEGAL_STATUS</if>
		<if test="PAY_STATUS !=null and PAY_STATUS !=''">,PAY_STATUS</if>
		<if test="YEAR_TYPE !=null and YEAR_TYPE !=''">,YEAR_TYPE</if>
		<if test="RENT_CHARGE_RATE !=null and RENT_CHARGE_RATE !=''">,RENT_CHARGE_RATE</if>
		<if test="MANAGEMENT_FEETYPE !=null and MANAGEMENT_FEETYPE !=''">,MANAGEMENT_FEETYPE</if>
		<if test="COMPANY_PERCENT !=null and COMPANY_PERCENT !=''">,COMPANY_PERCENT</if>
		<if test="COMPANY_FEE !=null and COMPANY_FEE !=''">,COMPANY_FEE</if>
		<if test="CALCULATE_WAY !=null and CALCULATE_WAY !=''">,CALCULATE_WAY</if>
		<if test="PAY_TYPE !=null and PAY_TYPE !=''">,PAY_TYPE</if>
		<if test="CHANGE_TYPE !=null and CHANGE_TYPE !=''">,CHANGE_TYPE</if>
		<if test="UPDATE_STATUS !=null and UPDATE_STATUS !=''">,UPDATE_STATUS</if>
		<if test="FIRST_MONEY_ALL !=null and FIRST_MONEY_ALL!=''">,FIRST_MONEY_ALL</if>
		<if test="MONEY_ALL !=null and MONEY_ALL!=''">,MONEY_ALL</if>
		) values(#{NEWID},SYSDATE
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,#{PAYLIST_CODE}</if>
		<if test="LEASE_TOPRIC !=null and LEASE_TOPRIC !=''">,#{LEASE_TOPRIC}</if>
		<if test="DEPOSIT_RATE !=null and DEPOSIT_RATE !=''">,#{DEPOSIT_RATE}</if>
		<if test="DEPOSIT_VALUE !=null and DEPOSIT_VALUE !=''">,#{DEPOSIT_VALUE}</if>
		<if test="POUNDAGE_RATE !=null and POUNDAGE_RATE !=''">,#{POUNDAGE_RATE}</if>
		<if test="POUNDAGE_VALUE !=null and POUNDAGE_VALUE !=''">,#{POUNDAGE_VALUE}</if>
		<if test="FIRSTRENT_RATE !=null and FIRSTRENT_RATE !=''">,#{FIRSTRENT_RATE}</if>
		<if test="FIRSTRENT_VALUE !=null and FIRSTRENT_VALUE !=''">,#{FIRSTRENT_VALUE}</if>
		<if test="DAY_PUACCRATE_RATE !=null and DAY_PUACCRATE_RATE !=''">,#{DAY_PUACCRATE_RATE}</if>
		<if test="INTER_UPRATE !=null and INTER_UPRATE !=''">,#{INTER_UPRATE}</if>
		<if test="YEAR_INTEREST !=null and YEAR_INTEREST !=''">,#{YEAR_INTEREST}</if>
		<if test="TOPRIC_SUBFIRENT !=null and TOPRIC_SUBFIRENT !=''">,#{TOPRIC_SUBFIRENT}</if>
		<if test="LEASE_TERM !=null and LEASE_TERM !=''">,#{LEASE_TERM}</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,#{PROJECT_ID}</if>
		<if test="LEASE_PERIOD !=null and LEASE_PERIOD !=''">,#{LEASE_PERIOD}</if>
		<if test="START_DATE !=null and START_DATE !=''">,to_date(#{START_DATE},'yyyy-mm-dd')</if>
		<if test="STATUS !=null and STATUS !=''">,#{STATUS}</if>
		<if test="CREATE_PERSON !=null and CREATE_PERSON !=''">,#{CREATE_PERSON}</if>
		<if test="LEAD_PERSON !=null and LEAD_PERSON !=''">,#{LEAD_PERSON}</if>
		<if test="PAY_WAY !=null and PAY_WAY !=''">,#{PAY_WAY}</if>
		<if test="VERSION_CODE !=null and VERSION_CODE !=''">,#{VERSION_CODE}</if>
		<if test="END_DATE !=null and END_DATE !=''">,to_date(#{END_DATE},'yyyy-mm-dd')</if>
		<if test="CHANGE_START_FLAG !=null and CHANGE_START_FLAG !=''">,#{CHANGE_START_FLAG}</if>
		<if test="BANK_BANK_ID !=null and BANK_ID !=BANK_FLAG">,#{BANK_ID}</if>
		<if test="BANK_FLAG !=null and BANK_FLAG !=''">,#{BANK_FLAG}</if>
		<if test="EX_STATUS !=null and EX_STATUS !=''">,#{EX_STATUS}</if>
		<if test="EX_REMARK !=null and EX_REMARK !=''">,#{EX_REMARK}</if>
		<if test="NOSTART_STATUS !=null and NOSTART_STATUS !=''">,#{NOSTART_STATUS}</if>
		<if test="NOSTART_REMARK !=null and NOSTART_REMARK !=''">,#{NOSTART_REMARK}</if>
		<if test="LEGAL_STATUS !=null and LEGAL_STATUS !=''">,#{LEGAL_STATUS}</if>
		<if test="PAY_STATUS !=null and PAY_STATUS !=''">,#{PAY_STATUS}</if>
		<if test="YEAR_TYPE !=null and YEAR_TYPE !=''">,#{YEAR_TYPE}</if>
		<if test="RENT_CHARGE_RATE !=null and RENT_CHARGE_RATE !=''">,#{RENT_CHARGE_RATE}</if>
		<if test="MANAGEMENT_FEETYPE !=null and MANAGEMENT_FEETYPE !=''">,#{MANAGEMENT_FEETYPE}</if>
		<if test="COMPANY_PERCENT !=null and COMPANY_PERCENT !=''">,#{COMPANY_PERCENT}</if>
		<if test="COMPANY_FEE !=null and COMPANY_FEE !=''">,#{COMPANY_FEE}</if>
		<if test="CALCULATE_WAY !=null and CALCULATE_WAY !=''">,#{CALCULATE_WAY}</if>
		<if test="PAY_TYPE !=null and PAY_TYPE !=''">,#{PAY_TYPE}</if>
		<if test="CHANGE_TYPE !=null and CHANGE_TYPE !=''">,#{CHANGE_TYPE}</if>
		<if test="UPDATE_STATUS !=null and UPDATE_STATUS !=''">,#{UPDATE_STATUS}</if>
		<if test="FIRST_MONEY_ALL !=null and FIRST_MONEY_ALL!=''">,#{FIRST_MONEY_ALL}</if>
		<if test="MONEY_ALL !=null and MONEY_ALL!=''">,#{MONEY_ALL}</if>
		)
	</insert>

	<insert id="insert_payplanSCHEME" parameterType="Map">
		<selectKey resultType="int" order="BEFORE" keyProperty="NEWID">
			SELECT seq_fil_rent_plan_head.NEXTVAL FROM DUAL
		</selectKey>
		insert into fil_rent_plan_head_Scheme t (id,CREATE_DATE
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,PAYLIST_CODE</if>
		<if test="LEASE_TOPRIC !=null and LEASE_TOPRIC !=''">,LEASE_TOPRIC</if>
		<if test="DEPOSIT_RATE !=null and DEPOSIT_RATE !=''">,DEPOSIT_RATE</if>
		<if test="DEPOSIT_VALUE !=null and DEPOSIT_VALUE !=''">,DEPOSIT_VALUE</if>
		<if test="POUNDAGE_RATE !=null and POUNDAGE_RATE !=''">,POUNDAGE_RATE</if>
		<if test="POUNDAGE_VALUE !=null and POUNDAGE_VALUE !=''">,POUNDAGE_VALUE</if>
		<if test="FIRSTRENT_RATE !=null and FIRSTRENT_RATE !=''">,FIRSTRENT_RATE</if>
		<if test="FIRSTRENT_VALUE !=null and FIRSTRENT_VALUE !=''">,FIRSTRENT_VALUE</if>
		<if test="DAY_PUACCRATE_RATE !=null and DAY_PUACCRATE_RATE !=''">,DAY_PUACCRATE_RATE</if>
		<if test="INTER_UPRATE !=null and INTER_UPRATE !=''">,INTER_UPRATE</if>
		<if test="YEAR_INTEREST !=null and YEAR_INTEREST !=''">,YEAR_INTEREST</if>
		<if test="TOPRIC_SUBFIRENT !=null and TOPRIC_SUBFIRENT !=''">,TOPRIC_SUBFIRENT</if>
		<if test="LEASE_TERM !=null and LEASE_TERM !=''">,LEASE_TERM</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID</if>
		<if test="LEASE_PERIOD !=null and LEASE_PERIOD !=''">,LEASE_PERIOD</if>
		<if test="START_DATE !=null and START_DATE !=''">,START_DATE</if>
		<if test="STATUS !=null and STATUS !=''">,STATUS</if>
		<if test="CREATE_PERSON !=null and CREATE_PERSON !=''">,CREATE_PERSON</if>
		<if test="LEAD_PERSON !=null and LEAD_PERSON !=''">,LEAD_PERSON</if>
		<if test="PAY_WAY !=null and PAY_WAY !=''">,PAY_WAY</if>
		<if test="VERSION_CODE !=null and VERSION_CODE !=''">,VERSION_CODE</if>
		<if test="END_DATE !=null and END_DATE !=''">,END_DATE</if>
		<if test="CHANGE_START_FLAG !=null and CHANGE_START_FLAG !=''">,CHANGE_START_FLAG</if>
		<if test="BANK_BANK_ID !=null and BANK_ID !=BANK_FLAG">,BANK_ID</if>
		<if test="BANK_FLAG !=null and BANK_FLAG !=''">,BANK_FLAG</if>
		<if test="EX_STATUS !=null and EX_STATUS !=''">,EX_STATUS</if>
		<if test="EX_REMARK !=null and EX_REMARK !=''">,EX_REMARK</if>
		<if test="NOSTART_STATUS !=null and NOSTART_STATUS !=''">,NOSTART_STATUS</if>
		<if test="NOSTART_REMARK !=null and NOSTART_REMARK !=''">,NOSTART_REMARK</if>
		<if test="LEGAL_STATUS !=null and LEGAL_STATUS !=''">,LEGAL_STATUS</if>
		<if test="PAY_STATUS !=null and PAY_STATUS !=''">,PAY_STATUS</if>
		<if test="YEAR_TYPE !=null and YEAR_TYPE !=''">,YEAR_TYPE</if>
		<if test="RENT_CHARGE_RATE !=null and RENT_CHARGE_RATE !=''">,RENT_CHARGE_RATE</if>
		<if test="MANAGEMENT_FEETYPE !=null and MANAGEMENT_FEETYPE !=''">,MANAGEMENT_FEETYPE</if>
		<if test="COMPANY_PERCENT !=null and COMPANY_PERCENT !=''">,COMPANY_PERCENT</if>
		<if test="COMPANY_FEE !=null and COMPANY_FEE !=''">,COMPANY_FEE</if>
		<if test="CALCULATE_WAY !=null and CALCULATE_WAY !=''">,CALCULATE_WAY</if>
		<if test="PAY_TYPE !=null and PAY_TYPE !=''">,PAY_TYPE</if>
		<if test="CHANGE_TYPE !=null and CHANGE_TYPE !=''">,CHANGE_TYPE</if>
		<if test="UPDATE_STATUS !=null and UPDATE_STATUS !=''">,UPDATE_STATUS</if>
		<if test="FIRST_MONEY_ALL !=null and FIRST_MONEY_ALL!=''">,FIRST_MONEY_ALL</if>
		<if test="MONEY_ALL !=null and MONEY_ALL!=''">,MONEY_ALL</if>
		<if test="SCHEME_ROW_NUM !=null and SCHEME_ROW_NUM!=''">,SCHEME_ROW_NUM</if>
		) values(#{NEWID},SYSDATE
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,#{PAYLIST_CODE}</if>
		<if test="LEASE_TOPRIC !=null and LEASE_TOPRIC !=''">,#{LEASE_TOPRIC}</if>
		<if test="DEPOSIT_RATE !=null and DEPOSIT_RATE !=''">,#{DEPOSIT_RATE}</if>
		<if test="DEPOSIT_VALUE !=null and DEPOSIT_VALUE !=''">,#{DEPOSIT_VALUE}</if>
		<if test="POUNDAGE_RATE !=null and POUNDAGE_RATE !=''">,#{POUNDAGE_RATE}</if>
		<if test="POUNDAGE_VALUE !=null and POUNDAGE_VALUE !=''">,#{POUNDAGE_VALUE}</if>
		<if test="FIRSTRENT_RATE !=null and FIRSTRENT_RATE !=''">,#{FIRSTRENT_RATE}</if>
		<if test="FIRSTRENT_VALUE !=null and FIRSTRENT_VALUE !=''">,#{FIRSTRENT_VALUE}</if>
		<if test="DAY_PUACCRATE_RATE !=null and DAY_PUACCRATE_RATE !=''">,#{DAY_PUACCRATE_RATE}</if>
		<if test="INTER_UPRATE !=null and INTER_UPRATE !=''">,#{INTER_UPRATE}</if>
		<if test="YEAR_INTEREST !=null and YEAR_INTEREST !=''">,#{YEAR_INTEREST}</if>
		<if test="TOPRIC_SUBFIRENT !=null and TOPRIC_SUBFIRENT !=''">,#{TOPRIC_SUBFIRENT}</if>
		<if test="LEASE_TERM !=null and LEASE_TERM !=''">,#{LEASE_TERM}</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,#{PROJECT_ID}</if>
		<if test="LEASE_PERIOD !=null and LEASE_PERIOD !=''">,#{LEASE_PERIOD}</if>
		<if test="START_DATE !=null and START_DATE !=''">,to_date(#{START_DATE},'yyyy-mm-dd')</if>
		<if test="STATUS !=null and STATUS !=''">,#{STATUS}</if>
		<if test="CREATE_PERSON !=null and CREATE_PERSON !=''">,#{CREATE_PERSON}</if>
		<if test="LEAD_PERSON !=null and LEAD_PERSON !=''">,#{LEAD_PERSON}</if>
		<if test="PAY_WAY !=null and PAY_WAY !=''">,#{PAY_WAY}</if>
		<if test="VERSION_CODE !=null and VERSION_CODE !=''">,#{VERSION_CODE}</if>
		<if test="END_DATE !=null and END_DATE !=''">,to_date(#{END_DATE},'yyyy-mm-dd')</if>
		<if test="CHANGE_START_FLAG !=null and CHANGE_START_FLAG !=''">,#{CHANGE_START_FLAG}</if>
		<if test="BANK_BANK_ID !=null and BANK_ID !=BANK_FLAG">,#{BANK_ID}</if>
		<if test="BANK_FLAG !=null and BANK_FLAG !=''">,#{BANK_FLAG}</if>
		<if test="EX_STATUS !=null and EX_STATUS !=''">,#{EX_STATUS}</if>
		<if test="EX_REMARK !=null and EX_REMARK !=''">,#{EX_REMARK}</if>
		<if test="NOSTART_STATUS !=null and NOSTART_STATUS !=''">,#{NOSTART_STATUS}</if>
		<if test="NOSTART_REMARK !=null and NOSTART_REMARK !=''">,#{NOSTART_REMARK}</if>
		<if test="LEGAL_STATUS !=null and LEGAL_STATUS !=''">,#{LEGAL_STATUS}</if>
		<if test="PAY_STATUS !=null and PAY_STATUS !=''">,#{PAY_STATUS}</if>
		<if test="YEAR_TYPE !=null and YEAR_TYPE !=''">,#{YEAR_TYPE}</if>
		<if test="RENT_CHARGE_RATE !=null and RENT_CHARGE_RATE !=''">,#{RENT_CHARGE_RATE}</if>
		<if test="MANAGEMENT_FEETYPE !=null and MANAGEMENT_FEETYPE !=''">,#{MANAGEMENT_FEETYPE}</if>
		<if test="COMPANY_PERCENT !=null and COMPANY_PERCENT !=''">,#{COMPANY_PERCENT}</if>
		<if test="COMPANY_FEE !=null and COMPANY_FEE !=''">,#{COMPANY_FEE}</if>
		<if test="CALCULATE_WAY !=null and CALCULATE_WAY !=''">,#{CALCULATE_WAY}</if>
		<if test="PAY_TYPE !=null and PAY_TYPE !=''">,#{PAY_TYPE}</if>
		<if test="CHANGE_TYPE !=null and CHANGE_TYPE !=''">,#{CHANGE_TYPE}</if>
		<if test="UPDATE_STATUS !=null and UPDATE_STATUS !=''">,#{UPDATE_STATUS}</if>
		<if test="FIRST_MONEY_ALL !=null and FIRST_MONEY_ALL!=''">,#{FIRST_MONEY_ALL}</if>
		<if test="MONEY_ALL !=null and MONEY_ALL!=''">,#{MONEY_ALL}</if>
		<if test="SCHEME_ROW_NUM !=null and SCHEME_ROW_NUM!=''">,#{SCHEME_ROW_NUM}</if>
		)
	</insert>

	<insert id="payplan_detail_other" parameterType="Map">
		insert into fil_rent_plan_detail(
		ID,
		EQUIPMENT_ID,
		PAY_DATE,
		PERIOD_NUM,
		ITEM_NAME,
		ITEM_MONEY,
		ITEM_FLAG,
		SPLIT_RATE,
		SPLIT_MONEY,
		PAID_MONEY,
		PAY_ID,
		TYPE,
		REMARK,
		ITEM_NAME_EN,
		IRR,
		LOCKED_FLAG
		)
		SELECT
		SEQ_fil_rent_plan_detail.nextval,'',pay_date,period_num,item_name,item_money,
		item_flag, split_rate,split_money, paid_money,
		#{NEWID},type,remark,ITEM_NAME_EN,IRR,LOCKED_FLAG
		FROM
		fil_rent_plan_detail t where t.pay_id = #{ID} and t.item_flag &lt;>2
	</insert>

	<update id="update_payplan_year_interest" parameterType="Map">
		update fil_rent_plan_head t set t.YEAR_INTEREST = #{END_YEAR_INTEREST}
		where t.id = #{NEWID}
	</update>

	<update id="update_IS_END_STATUS" parameterType="Map">
		update
		fil_buy_back t set t.is_end_status=2 where
		t.paylist_code=#{PAYLIST_CODE}
	</update>

	<update id="update_IS_END_STATUS2" parameterType="Map">
		update
		fil_paychange_parameter t
		set t.is_end_status = 2
		where t.pay_id in (SELECT frph.id
		FROM fil_rent_plan_head frph
		where frph.paylist_code = #{PAYLIST_CODE})
		and t.param_name = '提前结清'
	</update>

	<update id="update_detailPayDate" parameterType="Map">
		update
		fil_rent_plan_detail t set t.pay_date =
		to_date(#{PAY_DATE},'yyyy-mm-dd') where t.pay_id =#{PAY_ID} and
		t.period_num=#{PERIOD_NUM} and t.item_flag=2
	</update>

	<update id="update_payplan" parameterType="Map">
		UPDATE fil_rent_plan_head SET ID = #{ID}
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,PAYLIST_CODE = #{PAYLIST_CODE}</if>
		<if test="LEASE_TOPRIC !=null and LEASE_TOPRIC !=''">,LEASE_TOPRIC = #{LEASE_TOPRIC}</if>
		<if test="DEPOSIT_RATE !=null and DEPOSIT_RATE !=''">,DEPOSIT_RATE = #{DEPOSIT_RATE}</if>
		<if test="DEPOSIT_VALUE !=null and DEPOSIT_VALUE !=''">,DEPOSIT_VALUE = #{DEPOSIT_VALUE}</if>
		<if test="POUNDAGE_RATE !=null and POUNDAGE_RATE !=''">,POUNDAGE_RATE = #{POUNDAGE_RATE}</if>
		<if test="POUNDAGE_VALUE !=null and POUNDAGE_VALUE !=''">,POUNDAGE_VALUE = #{POUNDAGE_VALUE}</if>
		<if test="FIRSTRENT_RATE !=null and FIRSTRENT_RATE !=''">,FIRSTRENT_RATE = #{FIRSTRENT_RATE}</if>
		<if test="FIRSTRENT_VALUE !=null and FIRSTRENT_VALUE !=''">,FIRSTRENT_VALUE = #{FIRSTRENT_VALUE}</if>
		<if test="DAY_PUACCRATE_RATE !=null and DAY_PUACCRATE_RATE !=''">,DAY_PUACCRATE_RATE = #{DAY_PUACCRATE_RATE}</if>
		<if test="INTER_UPRATE !=null and INTER_UPRATE !=''">,INTER_UPRATE = #{INTER_UPRATE}</if>
		<if test="YEAR_INTEREST !=null and YEAR_INTEREST !=''">,YEAR_INTEREST = #{YEAR_INTEREST}</if>
		<if test="TOPRIC_SUBFIRENT !=null and TOPRIC_SUBFIRENT !=''">,TOPRIC_SUBFIRENT = #{TOPRIC_SUBFIRENT}</if>
		<if test="LEASE_TERM !=null and LEASE_TERM !=''">,LEASE_TERM = #{LEASE_TERM}</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID = #{PROJECT_ID}</if>
		<if test="LEASE_PERIOD !=null and LEASE_PERIOD !=''">,LEASE_PERIOD = #{LEASE_PERIOD}</if>
		<if test="START_DATE !=null and START_DATE !=''">,START_DATE = to_date(#{START_DATE},'yyyy-mm-dd')</if>
		<if test="STATUS !=null and STATUS !=''">,STATUS = #{STATUS}</if>
		<if test="CREATE_PERSON !=null and CREATE_PERSON !=''">,CREATE_PERSON = #{CREATE_PERSON}</if>
		<if test="LEAD_PERSON !=null and LEAD_PERSON !=''">,LEAD_PERSON = #{LEAD_PERSON}</if>
		<if test="PAY_WAY !=null and PAY_WAY !=''">,PAY_WAY = #{PAY_WAY}</if>
		<if test="VERSION_CODE !=null and VERSION_CODE !=''">,VERSION_CODE = #{VERSION_CODE}</if>
		<if test="END_DATE !=null and END_DATE !=''">,END_DATE = to_date(#{END_DATE},'yyyy-mm-dd')</if>
		<if test="CHANGE_START_FLAG !=null and CHANGE_START_FLAG !=''">,CHANGE_START_FLAG = #{CHANGE_START_FLAG}</if>
		<if test="BANK_BANK_ID !=null and BANK_ID !=BANK_FLAG">,BANK_ID = #{BANK_ID}</if>
		<if test="BANK_FLAG !=null and BANK_FLAG !=''">,BANK_FLAG = #{BANK_FLAG}</if>
		<if test="EX_STATUS !=null and EX_STATUS !=''">,EX_STATUS = #{EX_STATUS}</if>
		<if test="EX_REMARK !=null and EX_REMARK !=''">,EX_REMARK = #{EX_REMARK}</if>
		<if test="NOSTART_STATUS !=null and NOSTART_STATUS !=''">,NOSTART_STATUS = #{NOSTART_STATUS}</if>
		<if test="NOSTART_REMARK !=null and NOSTART_REMARK !=''">,NOSTART_REMARK = #{NOSTART_REMARK}</if>
		<if test="LEGAL_STATUS !=null and LEGAL_STATUS !=''">,LEGAL_STATUS = #{LEGAL_STATUS}</if>
		<if test="PAY_STATUS !=null and PAY_STATUS !=''">,PAY_STATUS = #{PAY_STATUS}</if>
		<if test="YEAR_TYPE !=null and YEAR_TYPE !=''">,YEAR_TYPE = #{YEAR_TYPE}</if>
		<if test="RENT_CHARGE_RATE !=null and RENT_CHARGE_RATE !=''">,RENT_CHARGE_RATE = #{RENT_CHARGE_RATE}</if>
		<if test="MANAGEMENT_FEETYPE !=null and MANAGEMENT_FEETYPE !=''">,MANAGEMENT_FEETYPE = #{MANAGEMENT_FEETYPE}</if>
		<if test="COMPANY_PERCENT !=null and COMPANY_PERCENT !=''">,COMPANY_PERCENT = #{COMPANY_PERCENT}</if>
		<if test="COMPANY_FEE !=null and COMPANY_FEE !=''">,COMPANY_FEE = #{COMPANY_FEE}</if>
		<if test="CALCULATE_WAY !=null and CALCULATE_WAY !=''">,CALCULATE_WAY = #{CALCULATE_WAY}</if>
		<if test="PAY_TYPE !=null and PAY_TYPE !=''">,PAY_TYPE = #{PAY_TYPE}</if>
		<if test="CHANGE_TYPE !=null and CHANGE_TYPE !=''">,CHANGE_TYPE = #{CHANGE_TYPE}</if>
		<if test="UPDATE_STATUS !=null and UPDATE_STATUS !=''">,UPDATE_STATUS = #{UPDATE_STATUS}</if>
		<if test="FIRST_MONEY_ALL !=null and FIRST_MONEY_ALL !=''">,FIRST_MONEY_ALL = #{FIRST_MONEY_ALL}</if>
		<if test="MONEY_ALL !=null and MONEY_ALL!=''">,MONEY_ALL = #{MONEY_ALL}</if>
		where ID = #{ID}
	</update>

	<select id="queryPayBycode" parameterType="map" resultType="map">
		SELECT t.id,t.version_code FROM fil_rent_plan_head t where
		t.paylist_code=#{PAYLIST_CODE}
	</select>

	<select id="queryPayMinVersion_code" parameterType="map" resultType="map">
		SELECT	T.ID,T.PROJECT_ID,T.VERSION_CODE,t.STATUS,t.PLATFORM_TYPE
		FROM FIL_RENT_PLAN_HEAD_MAX_V T
		WHERE T.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="queryPayMinVersion_code2" parameterType="map"
			resultType="map">
		SELECT T.ID,T.PROJECT_ID,T.VERSION_CODE,t.STATUS FROM
		FIL_RENT_PLAN_HEAD_MAX_V T WHERE T.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="queryPayMinVersion_code3" parameterType="map" resultType="map">
		SELECT T.ID,T.PROJECT_ID,T.VERSION_CODE,t.STATUS FROM
		FIL_RENT_PLAN_HEAD_BAS_MAX__V T WHERE T.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="queryProject_status" parameterType="map" resultType="map">
		SELECT fph.status ,f.STATUS plan_status
		FROM fil_project_head fph,fil_rent_plan_head_max_v f
		where f.project_id = t.id and f.paylist_code=#{PAYLIST_CODE}
	</select>

	<update id="updateProject_status" parameterType="map">
		update	fil_project_head fph
		set fph.status = 30,fph.end_status = 30
		where fph.id = (SELECT f.PROJECT_ID
		FROM fil_rent_plan_head_max_v f
		where f.PAYLIST_CODE=#{PAYLIST_CODE} )
	</update>

	<delete id="deletePay" parameterType="Map">
		delete fil_rent_plan_head
		where id = #{ID}
	</delete>

	<delete id="delete_paychange_parameter" parameterType="Map">
		delete
		fil_paychange_parameter t where t.pay_id in (SELECT t.id FROM
		fil_rent_plan_head t where t.paylist_code=#{PAYLIST_CODE})
	</delete>

	<delete id="deletePayDetail" parameterType="Map">
		delete
		fil_rent_plan_detail t where t.pay_id = #{ID}
	</delete>

	<delete id="deletePayBeginning" parameterType="Map">
		delete
		fi_r_beginning t where t.item_flag=4 and t.beginning_name like '%新增%'
		and t.paylist_code= #{PAYLIST_CODE}
	</delete>

	<delete id="deleteBeginning" parameterType="Map">
		delete fi_r_beginning
		t where nvl(t.BEGINNING_PAID,0)=0 and t.BEGINNING_STATUS=0 and
		t.paylist_code= #{PAYLIST_CODE}
	</delete>

	<insert id="synchronizationBeginning" parameterType="Map">
		INSERT INTO FI_R_BEGINNING F
		(BEGINNING_ID,
		BEGINNING_RECEIVE_DATA,
		BEGINNING_NUM,
		BEGINNING_NAME,
		BEGINNING_MONEY,
		CREATE_TIME,
		MODIFY_TIME,
		PAYLIST_CODE,
		ITEM_FLAG,
		BEGINNING_FLAG,
		PROJECT_ID)
		SELECT SEQ_FI_R_BEGINNING.NEXTVAL,
		TT.PAY_DATE,
		TT.PERIOD_NUM,
		TT.ITEM_NAME,
		NVL(TT.ITEM_MONEY,0),
		TT.CREATE_TIME,
		TT.MODIFY_TIME,
		TT.PAYLIST_CODE,
		TT.ITEM_FLAG,
		CASE WHEN NVL(TT.ITEM_MONEY,0)=0 THEN 1 ELSE 0 END,
		TT.PROJECT_ID
		FROM (SELECT T.PAY_DATE,
		T.PERIOD_NUM,
		T.ITEM_NAME,
		T.ITEM_MONEY,
		SYSDATE CREATE_TIME,
		SYSDATE MODIFY_TIME,
		TH.PAYLIST_CODE,
		T.ITEM_FLAG,
		TH.PROJECT_ID
		FROM FIL_RENT_PLAN_DETAIL T, FIL_RENT_PLAN_HEAD_BAS_MAX__V TH
		WHERE T.ITEM_NAME NOT IN (#{PMT}, #{ZJ}, #{SYBJ})
		AND T.PAY_ID = TH.ID
		AND TH.PAYLIST_CODE = #{PAYLIST_CODE}
		AND #{D} || T.PERIOD_NUM || #{QI} || T.ITEM_NAME NOT IN
		(SELECT #{D} || FF.BEGINNING_NUM || #{QI} || FF.BEGINNING_NAME
		FROM FI_R_BEGINNING FF
		WHERE FF.PAYLIST_CODE = #{PAYLIST_CODE} and nvl(FF.BEGINNING_PAID,0)&lt;>0
		union
		SELECT #{D} || FF.BEGINNING_NUM || #{QI} || FF.BEGINNING_NAME
		FROM FI_R_BEGINNING FF
		WHERE FF.PAYLIST_CODE = #{PAYLIST_CODE} and ff.beginning_status=1
		)
		ORDER BY T.PERIOD_NUM ASC, T.ITEM_NAME ASC) TT
	</insert>

	<insert id="insert_paychange_parameter" parameterType="Map">
		insert into fil_paychange_parameter (id
		<if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
		<if test="PARAM_NAME !=null and PARAM_NAME !=''">,PARAM_NAME</if>
		<if test="PARAM_VALUE !=null and PARAM_VALUE !=''">,PARAM_VALUE</if>
		) values
		( SEQ_FIL_PAYCHANGE_PARAMETER.Nextval
		<if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
		<if test="PARAM_NAME !=null and PARAM_NAME !=''">,#{PARAM_NAME}</if>
		<if test="PARAM_VALUE !=null and PARAM_VALUE !=''">,#{PARAM_VALUE}</if>
		)
	</insert>

	<insert id="insert_paychange_parameter_all" parameterType="Map">
		insert into fil_paychange_parameter
		(
		id
		<if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
		<if test="PARAM_NAME !=null and PARAM_NAME !=''">,PARAM_NAME</if>
		<if test="PARAM_VALUE !=null and PARAM_VALUE !=''">,PARAM_VALUE</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID</if>
		<if test="ACCOUNT_DATE !=null and ACCOUNT_DATE !=''">,ACCOUNT_DATE</if>
		<if test="HIRE_BANK !=null and HIRE_BANK !=''">,HIRE_BANK</if>
		<if test="RENT_TOTAL !=null and RENT_TOTAL !=''">,RENT_TOTAL</if>
		<if test="RENT_PAID !=null and RENT_PAID !=''">,RENT_PAID</if>
		<if test="RENT_LEFT !=null and RENT_LEFT !=''">,RENT_LEFT</if>
		<if test="PENALTY_AMT !=null and PENALTY_AMT !=''">,PENALTY_AMT</if>
		<if test="INTEREST_UNDO !=null and INTEREST_UNDO !=''">,INTEREST_UNDO</if>
		<if test="CORPUS_UNDO !=null and CORPUS_UNDO !=''">,CORPUS_UNDO</if>
		<if test="SUM_AMT_AHEAD !=null and SUM_AMT_AHEAD !=''">,SUM_AMT_AHEAD</if>
		<if test="CAUTION_DK !=null and CAUTION_DK !=''">,CAUTION_DK</if>
		<if test="IS_END_STATUS !=null and IS_END_STATUS !=''">,IS_END_STATUS</if>
		<if test="OTHER_SHOULD_PAY !=null and OTHER_SHOULD_PAY !=''">,OTHER_SHOULD_PAY</if>
		<if test="RENT_LEFT_NEW !=null and RENT_LEFT_NEW !=''">,RENT_LEFT_NEW</if>
		<if test="START_PERIOD !=null and START_PERIOD !=''">,START_PERIOD</if>
		<if test="INTEREST_LEFT !=null and INTEREST_LEFT !=''">,INTEREST_LEFT</if>
		<if test="INTEREST_LEFT_NEW !=null and INTEREST_LEFT_NEW !=''">,INTEREST_LEFT_NEW</if>
		)
		values
		(
		SEQ_FIL_PAYCHANGE_PARAMETER.Nextval
		<if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
		<if test="PARAM_NAME !=null and PARAM_NAME !=''">,#{PARAM_NAME}</if>
		<if test="PARAM_VALUE !=null and PARAM_VALUE !=''">,#{PARAM_VALUE}</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">,#{PROJECT_ID}</if>
		<if test="ACCOUNT_DATE !=null and ACCOUNT_DATE !=''">,to_date(#{ACCOUNT_DATE},'yyyy-mm-dd')</if>
		<if test="HIRE_BANK !=null and HIRE_BANK !=''">,#{HIRE_BANK}</if>
		<if test="RENT_TOTAL !=null and RENT_TOTAL !=''">,#{RENT_TOTAL}</if>
		<if test="RENT_PAID !=null and RENT_PAID !=''">,#{RENT_PAID}</if>
		<if test="RENT_LEFT !=null and RENT_LEFT !=''">,#{RENT_LEFT}</if>
		<if test="PENALTY_AMT !=null and PENALTY_AMT !=''">,#{PENALTY_AMT}</if>
		<if test="INTEREST_UNDO !=null and INTEREST_UNDO !=''">,#{INTEREST_UNDO}</if>
		<if test="CORPUS_UNDO !=null and CORPUS_UNDO !=''">,#{CORPUS_UNDO}</if>
		<if test="SUM_AMT_AHEAD !=null and SUM_AMT_AHEAD !=''">,#{SUM_AMT_AHEAD}</if>
		<if test="CAUTION_DK !=null and CAUTION_DK !=''">,#{CAUTION_DK}</if>
		<if test="IS_END_STATUS !=null and IS_END_STATUS !=''">,#{IS_END_STATUS}</if>
		<if test="OTHER_SHOULD_PAY !=null and OTHER_SHOULD_PAY !=''">,#{OTHER_SHOULD_PAY}</if>
		<if test="RENT_LEFT_NEW !=null and RENT_LEFT_NEW !=''">,#{RENT_LEFT_NEW}</if>
		<if test="START_PERIOD !=null and START_PERIOD !=''">,#{START_PERIOD}</if>
		<if test="INTEREST_LEFT !=null and INTEREST_LEFT !=''">,#{INTEREST_LEFT}</if>
		<if test="INTEREST_LEFT_NEW !=null and INTEREST_LEFT_NEW !=''">,#{INTEREST_LEFT_NEW}</if>
		)
	</insert>

	<select id="forwardRepaymentShow1" parameterType="Map"	resultType="map">
		SELECT fph.id project_id, fcc.id client_id,	frph.paylist_code, fph.pro_code, fcc.name, frph.ID
		FROM fil_rent_plan_head frph,fil_project_head fph,FIL_CUST_CLIENT fcc
		where frph.PROJECT_ID = fph.id and fph.client_id = fcc.id
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">and frph.paylist_code=#{PAYLIST_CODE}</if>
		<if test="PAY_ID !=null and PAY_ID !=''">and frph.id=#{PAY_ID}</if>
		<if test="PROJECT_ID!=null and PROJECT_ID!=''">and fph.id=#{PROJECT_ID}</if>
	</select>

	<select id="forwardRepaymentShow2" parameterType="Map" resultType="map">
		SELECT *
		FROM fil_paychange_parameter t
		where t.pay_id=#{PAY_ID}
	</select>

	<select id="queryIdByProjectId" parameterType="String"	resultType="int">
		SELECT min(t.id) pay_id
		FROM fil_rent_plan_head_max_v t
		where t.PROJECT_ID = #{ProjectId}
	</select>

	<select id="doShowRentPlanDetail" parameterType="map" resultType="map">
		SELECT T.PAY_ID, T.PAYLIST_CODE, T.PERIOD_NUM, T.PAY_DATE, T.VERSION_CODE, ROUND(T.ZJ, 2) ZJ,
		ROUND(T.BJ, 2) BJ, ROUND(T.LX, 2) LX, ROUND(T.SXF, 2) SXF, ROUND(T.GLF, 2) GLF, ROUND(T.SYBJ, 2) SYBJ,
		ROUND(T.PMTZJ, 2) PMTZJ, ROUND(NVL(T.LXZZS, 0), 2) LXZZS, ROUND(SUM(NVL(frb.BEGINNING_PAID, 0)), 2) YSZJ,
		case when DUN_MONEY > 0.00005 then 1 else 0 END DUN_FLAG,
		case when DUN_MONEY > 0.00005 then '是' else '否' END DUN_FLAG_NAME
		FROM V_FIL_RENT_PLAN_DETAIL_RTC T
		left join fi_r_beginning frb on T.PAYLIST_CODE = frb.paylist_code and frb.beginning_num is not null and T.PERIOD_NUM = frb.beginning_num
		left join (select fo.Pay_Code, fo.period, ROUND(NVL(FO.PENALTY_RECE,0) - NVL(FO.PENALTY_PAID, 0), 2) DUN_MONEY
		from fi_overdue fo
		where TRUNC(FO.CREATE_DATE) = TRUNC(SYSDATE) and NVL(FO.PENALTY_RECE, 0) - NVL(FO.PENALTY_PAID, 0) > 0.00005) FO
		on FO.PAY_CODE = T.PAYLIST_CODE and FO.Period = T.PERIOD_NUM
		WHERE T.PAY_ID = #{ID}
		group by T.PAY_ID, T.PAYLIST_CODE, T.PERIOD_NUM, T.PAY_DATE, T.VERSION_CODE, T.ZJ,
		T.BJ, T.LX, T.SXF, T.GLF, T.SYBJ, T.PMTZJ, t.LXZZS, FO.DUN_MONEY
		order by T.PERIOD_NUM
	</select>

	<select id="doShowRentPlanDetailScheme" parameterType="map"
			resultType="map">
		SELECT PAY_ID,
		PERIOD_NUM,
		PAY_DATE,
		ZJ,
		BJ,
		LX,
		SXF,
		GLF,
		SYBJ,
		PMTZJ,
		LXZZS
		FROM V_FIL_RENT_PLAN_DETAIL_SCHEME T
		WHERE T.PAY_ID = #{ID}
	</select>

	<select id="queryRentHead" parameterType="map" resultType="map">
		SELECT FCC.NAME,
		FRPH.LEASE_TOPRIC,
		FRPH.PAYLIST_CODE,
		FRPH.TOPRIC_SUBFIRENT,
		ROUND(NVL(FRPH.YEAR_INTEREST,0),4) YEAR_INTEREST,
		FRPH.YEAR_TYPE,
		FPH.FEES,
		FPH.POB_ID,
		FPH.PRO_CODE,
		FPH.PRO_NAME,
		TO_CHAR(FRPH.START_DATE, 'YYYY-MM-DD') START_DATE,
		FRPH.LEASE_TERM,
		TDD.FLAG LEASE_PERIOD,
		FRPH.CALCULATE_WAY
		FROM FIL_RENT_PLAN_HEAD FRPH,
		FIL_PROJECT_HEAD FPH,
		FIL_CUST_CLIENT FCC,
		(SELECT TSDD.FLAG, TSDD.CODE
		FROM T_SYS_SITE_DICTIONARY TSDD
		WHERE TSDD.TYPE = #{_TYPE}
		AND TSDD.STATUS = 0) TDD
		WHERE FRPH.PROJECT_ID = FPH.ID
		AND FPH.CLIENT_ID=FCC.ID
		AND FRPH.LEASE_PERIOD = TDD.CODE(+)
		AND FRPH.ID=#{ID}
	</select>

	<select id="doShowRentDetailOtherFeeListByPayId" parameterType="map" resultType="map">
		SELECT FRPD.ITEM_NAME,
		FRPD.ITEM_MONEY,
		TO_CHAR(FRPD.PAY_DATE, 'YYYY-MM-DD') PAY_DATE,
		TDD.FLAG ITEM_FLAG,
		ROUND(NVL(frb.beginning_paid,0),2) beginning_paid
		FROM FIL_RENT_PLAN_DETAIL FRPD
		LEFT JOIN FIL_RENT_PLAN_HEAD FRPH ON FRPH.ID=FRPD.PAY_ID
		LEFT JOIN (SELECT TSDD.FLAG, TSDD.CODE FROM t_sys_data_dictionary TSDD WHERE TSDD.TYPE = '应收项目类型') TDD ON FRPD.ITEM_FLAG = TDD.CODE
		LEFT JOIN fi_r_beginning frb on frb.ITEM_FLAG !=2 and frb.Paylist_Code=FRPH.Paylist_Code and  FRPD.ITEM_NAME=frb.BEGINNING_NAME
		WHERE FRPD.ITEM_FLAG != 2
		AND FRPD.PAY_ID =#{PAY_ID} and NVL(frb.beginning_money,0)>0.000001
		ORDER BY FRPD.ITEM_FLAG,FRPD.ID
	</select>

	<select id="doShowProjSchemeInfoByProjectId" parameterType="String"	resultType="map">
		SELECT FPS.PROJECT_ID,
		FPS.KEY_NAME_ZN,
		FPS.KEY_NAME_EN,
		(CASE
		WHEN FPS.KEY_NAME_EN LIKE '%PERCENT%' THEN
		NVL(FPS.VALUE_STR, '0') || '%'
		ELSE
		NVL((SELECT T.FLAG
		FROM T_SYS_DATA_DICTIONARY T
		WHERE T.TYPE = FPS.KEY_NAME_ZN
		AND T.CODE = FPS.VALUE_STR),
		FPS.VALUE_STR)
		END) VALUE_STR
		FROM FIL_PROJECT_SCHEME FPS, FIL_PROJECT_HEAD FPH
		WHERE FPS.KEY_NAME_EN NOT LIKE '%MONEY%'
		AND FPS.STATUS = 0
		AND FPS.PROJECT_ID = FPH.ID
		AND FPS.PROJECT_ID =#{PROJECT_ID}
		ORDER BY TO_NUMBER(FPS.ROW_NUM) ASC
	</select>

	<select id="doShowMaxPayDateByPayCode" parameterType="string" resultType="map">
		SELECT
			FRPD.PAY_ID,
			MAX(TO_CHAR(FRPD.PAY_DATE,'YYYY-MM-DD')) PAY_DATE
		FROM FIL_RENT_PLAN_DETAIL FRPD, FIL_RENT_PLAN_HEAD_MAX_V FRHMV
		WHERE FRPD.PAY_ID = FRHMV.ID(+) AND FRHMV.PAYLIST_CODE = #{PAYLIST_CODE}
		GROUP BY FRPD.PAY_ID
	</select>

	<update id="updatePayDateByPaylistCode" parameterType="map">
		UPDATE FI_FUND_PAYMENT_DETAIL
		SET	RESERVE_DATE=TO_DATE(#{RESERVE_DATE},'YYYY-MM-DD')
			<if test="START_DATE != null and START_DATE != ''">
				,START_DATE=TO_DATE(#{START_DATE},'YYYY-MM-DD')
			</if>
			<if test="ACCEPTANCE_DATE != null and ACCEPTANCE_DATE != ''">
				,ACCEPTANCE_DATE=TO_DATE(#{ACCEPTANCE_DATE},'YYYY-MM-DD')
			</if>
		WHERE PROJECT_CODE=#{PROJECT_CODE} AND PAY_TYPE=#{PAY_TYPE}
	</update>

	<select id="doShowSupplierNamesByProjectCode" parameterType="string" resultType="string">
		SELECT *
		FROM (SELECT SO.NAME
			FROM SECU_ORG SO
			WHERE SO.TYPE=2
			START WITH	SO.ID=(
								SELECT F.ORD_ID
								FROM FIL_PROJECT_HEAD F
								WHERE F.PRO_CODE = #{PROJECT_CODE}
							)
			CONNECT BY PRIOR SO.PARENT_ID=SO.ID)
		WHERE ROWNUM = 1
	</select>

	<select id="doShowPayDateByPayStartDateWithJbpm" parameterType="string"	resultType="map">
		SELECT *
		FROM (
			SELECT F.PAYLIST_CODE,
				TO_CHAR(F.START_DATE, 'YYYY-MM-DD') START_DATE,
				F.LEASE_PERIOD,
				F.PAY_WAY,
				FR.PAY_DATE
			FROM FIL_RENT_PLAN_HEAD_MAX_V F,
				(SELECT to_char(FRP.PAY_DATE,'YYYY-MM-DD') PAY_DATE,FRP.PAY_ID,FRP.PERIOD_NUM
				FROM FIL_RENT_PLAN_DETAIL FRP WHERE FRP.ITEM_NAME='租金') FR,
				(SELECT T.CODE,T.FLAG FROM T_SYS_DATA_DICTIONARY T WHERE T.TYPE ='还款政策') TTD
			WHERE
				F.ID=FR.PAY_ID(+)
				AND F.LEASE_TERM=FR.PERIOD_NUM
				AND F.PAY_WAY=TTD.CODE
				AND F.PROJECT_ID = #{PROJECT_ID}
		)
		WHERE ROWNUM = 1
	</select>

	<update id="updateRentHeadStartConfirmDateByPayCode" parameterType="map">
		UPDATE FIL_RENT_PLAN_HEAD F
		SET	F.START_CONFIRM_DATE = TO_DATE(#{START_CONFIRM_DATE},'YYYY-MM-DD')
		WHERE F.PAYLIST_CODE = #{PAYLIST_CODE}
	</update>

	<update id="update_fil_paychange_parameter_IS_END_STATUS" parameterType="map">
		update fil_paychange_parameter t
		set	t.account_date = sysdate,t.is_end_status = 2
		where t.paylist_code = #{PAYLIST_CODE}
	</update>

	<update id="updatePayEndDate" parameterType="map">
		UPDATE	FIL_RENT_PLAN_HEAD F
		SET F.END_DATE = TO_DATE(#{END_DATE},'YYYY-MM-DD')
		WHERE F.PAYLIST_CODE=#{PAY_CODE}
	</update>

	<select id="query_project_info" parameterType="string"	resultType="map">
		SELECT
			(SELECT NVL(MAX(FRB.BEGINNING_NUM),0)
		 	FROM FI_R_BEGINNING FRB
			WHERE FRB.ITEM_FLAG = 2 AND FRB.PAYLIST_CODE = t.PAYLIST_CODE
			  	AND FRB.BEGINNING_MONEY &lt;= FRB.BEGINNING_PAID
				AND FRB.BEGINNING_MONEY > 0) BEGINNING_NUM,
			FH.PRO_CODE,FC.NAME,T.YEAR_INTEREST,
			T.LEASE_TOPRIC,
			T.PAYLIST_CODE,FH.LEASE_CODE
		FROM FIL_RENT_PLAN_HEAD T,FIL_PROJECT_HEAD FH,FIL_CUST_CLIENT FC
		WHERE T.PROJECT_ID = FH.ID AND FH.CLIENT_ID = FC.ID AND T.ID = #{ID}
	</select>

	<select id="query_maxVersion_stauts" parameterType="map" resultType="map">
		SELECT T.STATUS
		FROM FIL_RENT_PLAN_HEAD_MAX_V T
		WHERE T.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="query_SUPPLIER_ID" parameterType="map" resultType="String">
		select fpe.suppliers_id sup_id
		from fil_project_equipment fpe
		where fpe.pay_id = #{PAY_ID} and rownum = 1
	</select>

	<select id="changeToShowMan" parameterType="map" resultType="map">
		SELECT * FROM fil_project_head t where t.pro_code=#{PRO_CODE}
	</select>

	<select id="changeToShowManPay" parameterType="map" resultType="map">
		SELECT t.ID PAY_ID FROM fil_rent_plan_head_bas_max__v t where t.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="whetherChangeCost" parameterType="map" resultType="int">
		SELECT max(t.beginning_id) beginning_id
		FROM fi_r_beginning t
		where t.paylist_code=#{PAYLIST_CODE} and t.item_flag=4 and t.beginning_name like '%新增%'
	</select>

	<select id="check_other_rent" parameterType="map" resultType="double">
		SELECT sum(nvl(t.beginning_money, 0)) - sum(nvl(t.beginning_paid, 0)) money
		FROM fi_r_beginning t
		where t.beginning_name like '%新增%' and t.item_flag = 4 and t.paylist_code = #{PAYLIST_CODE}
	</select>

	<select id="DOSSIER_APPLY_ID" parameterType="map" resultType="int">
		SELECT max(fda.id) DOSSIER_APPLY_ID
		FROM fil_dossier_apply fda, fil_project_head fph, fil_rent_plan_head frh
		where frh.project_id = fph.id and fda.project_code = fph.pro_code and frh.paylist_code = #{PAYLIST_CODE}
	</select>

	<select id="settleInfo" parameterType="map" resultType="map">
		SELECT (
			SELECT round(sum(nvl(f.beginning_money, 0)), 2)
			FROM fi_r_beginning f
			where f.paylist_code = t.paylist_code and f.item_flag = 2) total_zj, --租金总计
			fph.id project_id,
			fph.pro_code,
			fph.Lease_Code,
			t.paylist_code,
			fcc.id CUST_ID,
			fcc.name CUST_NAME,
			round(t.lease_topric, 2) LEASE_TOPRIC, --设备金额
			t.lease_term * t.lease_period lease_term, --租赁期限
			to_char(t.start_date, 'yyyy-mm-dd') start_date, --起租日
			(SELECT NVL(MAX(FRB.BEGINNING_NUM), 0)
			FROM FI_R_BEGINNING FRB
			WHERE FRB.ITEM_FLAG = 2
				AND FRB.PAYLIST_CODE = t.paylist_code
				AND FRB.BEGINNING_MONEY >= FRB.BEGINNING_PAID
				AND FRB.BEGINNING_MONEY > 0) BEGINNING_NUM, --已还的最大期次
			(SELECT round(sum(nvl(f.beginning_money, 0)), 2)
			FROM fi_r_beginning f
			where f.paylist_code = t.paylist_code and f.item_flag = 1) start_money, --首期款
			(SELECT round(sum(nvl(f.beginning_paid, 0)), 2)
			FROM fi_r_beginning f
			where f.paylist_code = t.paylist_code and f.item_flag = 2) received_rent, --已收租金
			(SELECT round(sum(nvl(f.beginning_money, 0)-nvl(f.beginning_paid, 0)), 2)
			FROM fi_r_beginning f
			where f.paylist_code = t.paylist_code and f.item_flag = 2) no_received_rent, --剩余未收租金
			(SELECT round(sum(o.penalty_rece - o.penalty_paid), 2)
			FROM fi_overdue o
			where trunc(o.create_date) = trunc(sysdate) and o.pay_code = t.paylist_code) penalty_rece, --罚息
			--(
			--	select round(nvl(f.CANUSE_MONEY, 0), 2) from FI_DEPOSIT_POOL f
			--	where f.paylist_code = t.paylist_code and f.TYPE=4
			--) deposit,
			round(nvl(t.DEPOSIT_SY, 0), 2) DEPOSIT,
			(SELECT round(sum(nvl(f.ITEM_MONEY, 0)), 2)
			FROM fil_rent_plan_detail f
			where f.PAY_ID = t.id and f.item_name like '留购价%') LGJ,
			(SELECT round(sum(nvl(ff.FUND_RECEIVE_MONEY, 0)), 2)
			FROM fi_fund ff
			where ff.fund_client_id = fcc.ID and ff.FUND_STATUS = 0) FUND_RECEIVE_MONEY
		FROM fil_rent_plan_head_max_v t
		left join fil_project_head fph on t.project_id = fph.id
		left join fil_cust_client fcc on fph.client_id = fcc.id
		where t.id = #{ID}
	</select>

	<select id="queryPeroidList" parameterType="map" resultType="map">
		select distinct frb.beginning_num period_num
		from fi_r_beginning frb
		left join fil_rent_plan_head frp on frb.paylist_code = frp.paylist_code
		where frp.id = #{ID} and frb.beginning_receive_data >= to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')
			and frb.item_flag = 2 and round(nvl(frb.beginning_money,0),2) - round(nvl(frb.BEGINNING_PAID, 0), 2) > 0.00005
		order by frb.beginning_num
	</select>

	<select id="queryPeroidListEnd" parameterType="map" resultType="map">
		select max(frb.beginning_num) PERIOD,max(to_char(frb.beginning_receive_data,'yyyy-MM-dd')) MAX_DATA,frb.paylist_code
		from fi_r_beginning frb
		left join fil_rent_plan_head frp on frb.paylist_code=frp.paylist_code
		where frp.id = #{ID} and frb.item_flag = 2
		group by frb.paylist_code
	</select>

	<update id="updateBeginning" parameterType="map">
		UPDATE	FI_R_BEGINNING F
		SET F.PROJECT_ID = #{PROJECT_ID}
		WHERE F.PAYLIST_CODE = #{PAYLIST_CODE}
	</update>

	<update id="update_equipment_paylist_code" parameterType="map">
		update fil_project_equipment t
		set t.paylist_code = #{PAYLIST_CODE}
		where t.id in (${edsArray})
	</update>

	<select id="querCustInfo" parameterType="map" resultType="map">
		SELECT
			FCC.NAME 承租人,
			FCC.CUST_ID 客户编号,
			FPH.PRO_CODE 项目编号,
			FPH.SUP_SHORTNAME 供应商,
			FPH.LEASE_TOPRIC 租赁物购买价款,
			NVL(FP.SZZJ,0) 起租租金,
			NVL(FP.BZJ,0) 保证金,
			NVL(FP.DYQZJ,0) "第(1)期租金",
			NVL(FP.BXF,0) 保险费,
			NVL(FP.DBF,0) 担保费,
			NVL(FP.SXF,0) 手续费,
			NVL(FP.LGY,0) 留购价,
			FPH.LEASE_TERM 租赁期限,
			FPS.起租比例,
			CASE WHEN fph.lease_period = 1 THEN '月' ELSE '季度' END 租金支付周期,
			FPH.FINANCE_TOPRIC 融资金额,
			CASE WHEN FRPH.PAY_WAY IN (2, 3) THEN	'不规则' ELSE '规则' END 是否规则付款,
			FPH.YEAR_INTEREST * 100 租赁年利率,
			FPH.PRODUCT_NAME 租赁物名称,
			FPS.保险费率,
			FPH.AMOUNT 租赁物数量,
			FPH.FEES 手续费率,
			CASE WHEN FRPH.PAY_WAY IN (1, 3, 5) THEN '期末支付' ELSE '期初支付' END 租金付款方式,
			TO_CHAR(FRPH.START_DATE, 'YYYY-MM-DD') 起租日期,
			TO_CHAR(FRPH.START_CONFIRM_DATE, 'YYYY-MM-DD') 起租确认日期,
			FRPH.MONEY_ALL 租金总额,
			FRPH.FIRST_MONEY_ALL 首期付款合计
		FROM FIL_PROJECT_HEAD FPH,
			FIL_CUST_CLIENT FCC,
			(SELECT S.PROJECT_ID,
			MAX(DECODE(S.KEY_NAME_EN, 'START_PERCENT', S.VALUE_STR)) 起租比例,
			MAX(DECODE(S.KEY_NAME_EN, 'INSURANCE_PERCENT', S.VALUE_STR)) 保险费率
			FROM FIL_SCHEME_CLOB S
			WHERE S.PROJECT_ID=#{PROJECT_ID}
			GROUP BY S.PROJECT_ID) FPS,
			FIL_RENT_PLAN_HEAD_MAX_V FRPH,
			(SELECT F.PAY_ID,
			SUM(DECODE(F.ITEM_NAME, '起租租金', NVL(F.ITEM_MONEY, 0))) SZZJ,
			SUM(DECODE(F.ITEM_NAME, '保证金', NVL(F.ITEM_MONEY, 0))) BZJ,
			SUM(DECODE(F.ITEM_NAME, '租金', NVL(F.ITEM_MONEY, 0))) DYQZJ,
			SUM(DECODE(F.ITEM_NAME, '保险费', NVL(F.ITEM_MONEY, 0))) BXF,
			SUM(DECODE(F.ITEM_NAME, '担保费', NVL(F.ITEM_MONEY, 0))) DBF,
			SUM(DECODE(F.ITEM_NAME, '手续费', NVL(F.ITEM_MONEY, 0))) SXF,
			SUM(DECODE(F.ITEM_NAME, '留购价款', NVL(F.ITEM_MONEY, 0))) LGY
			FROM FIL_RENT_PLAN_DETAIL F
			WHERE F.ITEM_FLAG != 2
			OR (F.ITEM_NAME = '租金' AND F.PERIOD_NUM = 1)
			GROUP BY F.PAY_ID) FP
		WHERE FPH.CLIENT_ID = FCC.ID
			AND FPS.PROJECT_ID = FPH.ID
			AND FPH.ID = FRPH.PROJECT_ID
			AND FRPH.ID = FP.PAY_ID
			AND FPH.ID=#{PROJECT_ID}
	</select>

	<select id="doShowRentList" parameterType="map" resultType="map">
		SELECT	D.PERIOD_NUM 序号, --租金明细期次
			TO_CHAR(D.PAY_DATE, 'YYYY-MM-DD') 租金支付日期, --还款计划约定日期
			MAX(DECODE(D.ITEM_NAME, '租金', D.ITEM_MONEY)) 租金, --租金
			MAX(DECODE(D.ITEM_NAME, '本金', D.ITEM_MONEY)) 本金, --本金
			MAX(DECODE(D.ITEM_NAME, '利息', D.ITEM_MONEY)) 利息, --利息
			MAX(DECODE(D.ITEM_NAME, '剩余本金', D.ITEM_MONEY)) 未偿还本金 --剩余本金
		FROM FIL_RENT_PLAN_DETAIL D, FIL_RENT_PLAN_HEAD_MAX_V H
		WHERE D.PAY_ID = H.ID AND D.ITEM_FLAG = 2 AND H.PROJECT_ID=#{PROJECT_ID}
		GROUP BY D.PAY_ID,
			D.PERIOD_NUM,
			D.PAY_DATE,
			H.VERSION_CODE
		ORDER BY D.PERIOD_NUM
	</select>

	<select id="sel_PROEQULIST" parameterType="map" resultType="map">
		SELECT ID ,PRODUCT_NAME,SPEC_NAME,WHOLE_ENGINE_CODE,UNIT_PRICE
		FROM FIL_PROJECT_EQUIPMENT FPE
		where fpe.paylist_code=#{PAYLIST_CODE}
	</select>

	<select id="sel_PROEQULIST2" parameterType="map" resultType="map">
		SELECT ID ,PRODUCT_NAME,SPEC_NAME,WHOLE_ENGINE_CODE,UNIT_PRICE
		FROM fil_project_equipment t
		where t.paylist_code = (SELECT f.paylist_code
								FROM fil_pay_split f
								where f.paylist_code = #{PAYLIST_CODE})
		union all
		SELECT ID ,PRODUCT_NAME,SPEC_NAME,WHOLE_ENGINE_CODE,UNIT_PRICE
		FROM fil_project_equipment t
		where t.paylist_code= (SELECT f.new_code
								FROM fil_pay_split f
								where f.paylist_code =#{PAYLIST_CODE})
	</select>

	<select id="sel_YH_BEGINNING_NUM" parameterType="map" resultType="int">
		SELECT NVL(MAX(FRB.BEGINNING_NUM), 0) yh_BEGINNING_NUM
		FROM FI_R_BEGINNING FRB
		WHERE FRB.ITEM_FLAG = 2
			AND FRB.BEGINNING_MONEY &lt;= FRB.BEGINNING_PAID
			AND FRB.BEGINNING_MONEY > 0
			AND FRB.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="sel_MAX_BEGINNING_NUM" parameterType="map"	resultType="int">
		SELECT MAX(T.BEGINNING_NUM) MAX_BEGINNING_NUM
		FROM FI_R_BEGINNING T
		WHERE T.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="PAY_MAX_ID" parameterType="map" resultType="int">
		SELECT	T.ID
		FROM FIL_RENT_PLAN_HEAD_BAS_MAX__V T
		WHERE T.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="surplusBJbyQC" parameterType="map" resultType="double">
		SELECT t.item_money
		FROM fil_rent_plan_head_bas_max__v	f, fil_rent_plan_detail t
		where t.pay_id = f.id and t.period_num = ${SPLIT_PERIOD}-1
			and t.item_name='剩余本金' and f.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<select id="disconnectCalculateData" parameterType="map" resultType="map">
		SELECT
			(SELECT max(f.period_num)
			FROM fil_rent_plan_detail f
			where f.pay_id = t.ID and f.item_flag=2 ) lease_term,--总期次
			t.CALCULATE_WAY,
			t.YEAR_INTEREST annualRate,--年率
			(SELECT to_char(f.pay_date,'yyyy-mm-dd')
			FROM fil_rent_plan_detail f
			where f.pay_id = t.ID and f.item_flag=2
				and f.item_name='本金' and f.period_num = ${SPLIT_PERIOD}) pay_date--支付时间
		FROM fil_rent_plan_head_bas_max__v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="query_lease_topric" parameterType="map" resultType="double">
		SELECT t.lease_topric
		FROM fil_rent_plan_head_max_v t
		where t.paylist_code = #{PAYLIST_CODE}
	</select>

	<select id="queryJBPMmap" parameterType="String" resultType="map">
		SELECT t.id PROJECT_ID,t.sup_id,t.client_id,t.pro_code,f.PAYLIST_CODE
		FROM fil_rent_plan_head_max_v f,fil_project_head t
		where f.PROJECT_ID=t.id and f.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>

	<insert id="insert_fil_pay_split" parameterType="Map">
		insert into fil_pay_split t
		(
			t.id
			<if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
			<if test="PARAM_NAME !=null and PARAM_NAME !=''">,PARAM_NAME</if>
			<if test="SPLIT_RATIO !=null and SPLIT_RATIO !=''">,SPLIT_RATIO</if>
			<if test="SPLIT_PERIOD !=null and SPLIT_PERIOD !=''">,SPLIT_PERIOD</if>
			<if test="EDSARRAY !=null and EDSARRAY !=''">,EDSARRAY</if>
			<if test="IDS !=null and IDS !=''">,IDS</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,PAYLIST_CODE</if>
			<if test="NEW_CODE !=null and NEW_CODE !=''">,NEW_CODE</if>
			<if test="PARAM_VALUE !=null and PARAM_VALUE !=''">,PARAM_VALUE</if>
			<if test="LEASE_TOPRIC1 !=null and LEASE_TOPRIC1 !=''">,LEASE_TOPRIC1</if>
			<if test="LEASE_TOPRIC2 !=null and LEASE_TOPRIC2 !=''">,LEASE_TOPRIC2</if>
		)
		values
		(
			SEQ_fil_pay_split.nextval
			<if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
			<if test="PARAM_NAME !=null and PARAM_NAME !=''">,#{PARAM_NAME}</if>
			<if test="SPLIT_RATIO !=null and SPLIT_RATIO !=''">,#{SPLIT_RATIO}</if>
			<if test="SPLIT_PERIOD !=null and SPLIT_PERIOD !=''">,#{SPLIT_PERIOD}</if>
			<if test="EDSARRAY !=null and EDSARRAY !=''">,#{EDSARRAY}</if>
			<if test="IDS !=null and IDS !=''">,#{IDS}</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,#{PAYLIST_CODE}</if>
			<if test="NEW_CODE !=null and NEW_CODE !=''">,#{NEW_CODE}</if>
			<if test="PARAM_VALUE !=null and PARAM_VALUE !=''">,#{PARAM_VALUE}</if>
			<if test="LEASE_TOPRIC1 !=null and LEASE_TOPRIC1 !=''">,#{LEASE_TOPRIC1}</if>
			<if test="LEASE_TOPRIC2 !=null and LEASE_TOPRIC2 !=''">,#{LEASE_TOPRIC2}</if>
		)
	</insert>

	<select id="queryMaxId" parameterType="String" resultType="int">
		SELECT t.id
		FROM fil_rent_plan_head_max_v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="query_fil_pay_split" parameterType="String"	resultType="map">
		SELECT *
		FROM fil_pay_split t
		where t.paylist_code = #{PAYLIST_CODE}
	</select>

	<select id="query_split_pay_id" parameterType="String" resultType="int">
		SELECT t.id
		FROM fil_rent_plan_head_bas_max__v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<update id="disconnectSucceed" parameterType="Map">
		update	fil_rent_plan_head t
		set t.version_code = t.version_code * -1
		where t.paylist_code like #{PRO_CODE}||'%' and t.version_code &lt; 0
	</update>

	<update id="update_fil_paychange_parameter" parameterType="Map">
		merge into fil_paychange_parameter t1
		USING (
		SELECT t.ID,
		getdictdatabycode('还款计划状态',t.status)||'变更' PARAM_NAME,
		(SELECT sum(d.item_money)
		FROM fil_rent_plan_detail d
		where	((d.item_name = '租金' and d.item_flag = 2)
		or (d.item_flag = 1 and d.item_name = '起租租金'))
		and d.pay_id = t.id) total_zj,--租金总计

		(SELECT sum(d.item_money)
		FROM fil_rent_plan_detail d
		where	((d.item_name = '租金' and d.item_flag = 2)
		or (d.item_flag = 1 and d.item_name = '起租租金')) and d.pay_id = t.id)
		-
		(SELECT sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where	(b.item_flag = 2 or (b.item_flag = 1 and b.beginning_name = '起租租金'))
		and	b.paylist_code=t.PAYLIST_CODE) f_syzj,--变更前剩余租金
		(SELECT sum(nvl(d.item_money,0))
		FROM fil_rent_plan_detail d
		where d.item_name='利息' and d.item_flag=2 and d.pay_id =t.id )
		-
		(SELECT sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where	b.item_flag=2 and b.beginning_name='利息' and b.paylist_code=t.PAYLIST_CODE) f_sylx, -- 不等额变更前剩余利息
		0,
		(SELECT b.beginning_money
		FROM fi_r_beginning b
		where b.item_flag=4 and b.beginning_name like '新增%' and b.paylist_code=t.PAYLIST_CODE)	other_money,--其他费用
		(SELECT sum(b.beginning_money) - sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where b.item_flag = 2 and b.paylist_code = t.PAYLIST_CODE) s_syzj,--变更后剩余租金
		--开始调整期次
		(SELECT sum(b.beginning_money) - sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where b.item_flag=2 and b.beginning_name='利息' and b.paylist_code=t.PAYLIST_CODE) s_sylx,--变更前剩余利息
		t.PAYLIST_CODE
		FROM fil_rent_plan_head_max_v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
		) t2
		on (t1.pay_id = t2.id)
		when matched then
		update set
		t1.Param_Name = t2.PARAM_NAME,t1.RENT_TOTAL = t2.total_zj,t1.RENT_LEFT = t2.f_syzj,t1.INTEREST_LEFT = f_sylx,
		t1.OTHER_SHOULD_PAY = t2.other_money,t1.RENT_LEFT_NEW = t2.s_syzj,t1.INTEREST_LEFT_NEW = t2.s_sylx
	</update>

	<delete id="del_fil_paychange_parameter" parameterType="Map">
		delete	fil_paychange_parameter t
		where t.pay_id = (SELECT id
		FROM fil_rent_plan_head_max_v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE})
	</delete>

	<insert id="inert_fil_paychange_parameter" parameterType="Map">
		insert	into fil_paychange_parameter
		(
		ID, --
		PAY_ID, -- 支付表id t_base_payplan
		PARAM_NAME, -- 支付表变更记录参数名称 '提前还款参数' '不等额变更'
		PARAM_VALUE, -- 支付表变更记录参数值
		PROJECT_ID, -- 项目主表FIL_PROJECT_HEAD 的id
		ACCOUNT_DATE, -- 结算日或者 变更日
		RENT_TOTAL, -- 租金总额（包含起租租金）
		RENT_LEFT, -- 截止到提前还租日期剩余租金金额数 不等额变更前剩余租金
		INTEREST_LEFT, -- 不等额变更前剩余利息
		IS_END_STATUS,
		-- 0 --申请 1 --财务已核销 2 -- 流程已结束
		OTHER_SHOULD_PAY, -- 其他应收款
		RENT_LEFT_NEW, -- 不等额变更后剩余租金
		START_PERIOD, -- 不等额变更开始调整期次
		INTEREST_LEFT_NEW, -- 不等额变更后剩余利息
		PAYLIST_CODE -- 支付表号
		)
		SELECT
		seq_fil_paychange_parameter.nextval,
		t.ID,
		getdictdatabycode('还款计划状态',t.status)||'变更',
		--getdictdatabycode('还款计划状态',(SELECT v.STATUS FROM
		--fil_rent_plan_head_bas_min__v v where v.PAYLIST_CODE=t.PAYLIST_CODE)
		--)||'变更',
		t.PAYLIST_CODE||','||t.VERSION_CODE,
		t.PROJECT_ID,
		sysdate,
		(SELECT sum(d.item_money)
		FROM fil_rent_plan_detail d
		where	((d.item_name = '租金' and d.item_flag = 2) or (d.item_flag = 1 and d.item_name = '租金' and d.PERIOD_NUM = 1))
		and d.pay_id=t.id) total_zj,--租金总计

		(SELECT sum(d.item_money)
		FROM fil_rent_plan_detail d
		where	((d.item_name = '租金' and d.item_flag = 2) or (d.item_flag = 1 and d.item_name = '租金' and d.PERIOD_NUM = 1)) and d.pay_id = t.id)
		-
		(SELECT sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where	(b.item_flag = 2 or (b.item_flag=1 and b.BEGINNING_NUM=1)) and b.paylist_code=t.PAYLIST_CODE) f_syzj,--变更前剩余租金
		(SELECT sum(nvl(d.item_money,0))
		FROM fil_rent_plan_detail d
		where	d.item_name = '利息' and d.item_flag = 2 and d.pay_id = t.id )
		-
		(SELECT sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where b.item_flag = 2 and b.beginning_name = '利息' and b.paylist_code = t.PAYLIST_CODE) f_sylx, -- 不等额变更前剩余利息
		0,
		(SELECT sum(b.beginning_money)
		FROM fi_r_beginning b
		where	b.item_flag=4 and b.beginning_name like '新增%' and b.paylist_code=t.PAYLIST_CODE) other_money,--其他费用
		(SELECT sum(b.beginning_money) - sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where b.item_flag=2 and b.paylist_code=t.PAYLIST_CODE) s_syzj,--变更后剩余租金
		#{changeIssue},--开始调整期次
		(SELECT sum(b.beginning_money) - sum(nvl(b.beginning_paid,0))
		FROM fi_r_beginning b
		where b.item_flag = 2 and b.beginning_name = '利息' and b.paylist_code = t.PAYLIST_CODE )s_sylx,--变更前剩余利息
		t.PAYLIST_CODE
		FROM fil_rent_plan_head_max_v t
		where t.PAYLIST_CODE = #{PAYLIST_CODE}
	</insert>

	<select id="getirrData" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
		SELECT FPH.ID PRO_ID, t.pro_code,t.sup_shortname,round(t.xirr_*100,2)
		xirr_,f.name clerk_name
		FROM fil_project_xirr t
		left join fil_cust_client f on t.clerk_id=f.id
		LEFT JOIN FIL_PROJECT_HEAD	FPH ON FPH.PRO_CODE = T.PRO_CODE
		<where>
			<if test="PRO_CODE!=null and PRO_CODE!=''">AND t.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
			<if test="SUP_SHORTNAME!=null and SUP_SHORTNAME!=''">AND T.SUP_SHORTNAME LIKE '%'||#{SUP_SHORTNAME}||'%'</if>
			<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.NAME LIKE '%'||#{CLERK_NAME}||'%'</if>
		</where>
		) CC ) CCC
		WHERE CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>

	<select id="getirrData_count" parameterType="java.util.Map"	resultType="int">
		SELECT COUNT(1)
		from (
		SELECT t.pro_code, t.sup_shortname, round(t.xirr_*100,2) xirr_, f.name clerk_name
		FROM fil_project_xirr t
		left join fil_cust_client f on t.clerk_id=f.id
		<where>
			<if test="PRO_CODE!=null and PRO_CODE!=''">AND t.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
			<if test="SUP_SHORTNAME!=null and SUP_SHORTNAME!=''">AND T.SUP_SHORTNAME LIKE '%'||#{SUP_SHORTNAME}||'%'</if>
			<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.NAME LIKE '%'||#{CLERK_NAME}||'%'</if>
		</where>
		)
	</select>

	<select id="getirrDataToExcel" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT t.pro_code, t.sup_shortname, round(t.xirr_*100,2) xirr_, f.name	clerk_name
		FROM fil_project_xirr t
		left join fil_cust_client f on t.clerk_id = f.id
		<where>
			<if test="PRO_CODE!=null and PRO_CODE!=''">AND t.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
			<if test="SUP_SHORTNAME!=null and SUP_SHORTNAME!=''">AND T.SUP_SHORTNAME LIKE '%'||#{SUP_SHORTNAME}||'%'</if>
			<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.NAME LIKE '%'||#{CLERK_NAME}||'%'</if>
		</where>
	</select>

	<select id="queryZKL" parameterType="map" resultType="string">
		SELECT F.ZKL
		FROM FIL_PROJECT_HEAD F
		WHERE F.ID = (SELECT H.PROJECT_ID
		FROM FIL_RENT_PLAN_HEAD H
		WHERE H.ID=#{ID})
	</select>

	<select id="getbusiness_sector_byPRO_ID" parameterType="map" resultType="string">
		SELECT	decode(t.business_sector,'CVS','CVP',t.business_sector)	business_sector
		FROM fil_project_head f ,t_sys_company t
		where f.company_id=t.company_id and f.id=#{PRO_ID}
	</select>

	<delete id="deletePayDetailScheme" parameterType="Map">
		delete	fil_rent_plan_detail_scheme t
		where t.pay_id = #{ID}
	</delete>

	<select id="payDetailNew" parameterType="map" resultType="map">
		SELECT	to_char(t.pay_date,'yyyy-mm-dd')pay_date,t.period_num,t.item_name,t.item_money
		FROM fil_rent_plan_detail_scheme t
		where t.pay_id = #{ID} and t.item_flag = 2 and t.period_num &lt;>0 order by t.period_num
	</select>

	<select id="queryPaymentMouldDetailByType" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT DISTINCT PT.ID, PT.FORMLABEL NORM_NAME
		FROM T_SYS_PAYMENT_MOULD T
		JOIN T_SYS_PAYMENT_TERM PT
		ON PT.ID = T.NORM_ID
		WHERE T.FLAG = 0 AND T.CODE = #{PLATFORM_TYPE}
		ORDER BY ID
	</select>

	<select id="queryPaymentByPaylistCode" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT *
		FROM FI_FUND_PAYMENT_DETAIL T
		WHERE T.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="getDateLiXiMoney" parameterType="java.util.Map" resultType="double">
		SELECT
		case when ADD_MONTHS(to_date(#{date1},'yyyy-MM-dd'),-1) >= to_date(#{date},'yyyy-MM-dd')
		then
		round(#{residualPrincipal} * #{annualRate} * (ADD_MONTHS(to_date(#{date1},'yyyy-MM-dd'), -1) -
		to_date(#{date},'yyyy-MM-dd'))/(add_months(to_date(#{date},'yyyy-MM-dd'), 12) -
		to_date(#{date},'yyyy-MM-dd')),2)
		else
		round(#{residualPrincipal} * #{annualRate} * (to_date(#{date1},'yyyy-MM-dd') -
		to_date(#{date},'yyyy-MM-dd'))/(add_months(to_date(#{date},'yyyy-MM-dd'), 12) -
		to_date(#{date},'yyyy-MM-dd')),2)
		end EWLX
		FROM dual
	</select>

	<select id="getDateLiXiMoneyNew" parameterType="java.util.Map" resultType="double">
		select round(#{residualPrincipal} * #{annualRate}
		* (to_date(#{date1},'yyyy-MM-dd') - to_date(#{date},'yyyy-MM-dd')) / (add_months(to_date(#{date},'yyyy-MM-dd'), 12)
		- to_date(#{date},'yyyy-MM-dd')),2)
		from dual
	</select>
	<!-- 财务支付表导出 -->

	<select id="getPayLineBase" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT P.ID,
		C.LEASE_CODE,
		E.NAME RENTER_NAME,
		P.PAYLIST_CODE,
		P.LEASE_TOPRIC,
		P.DEPOSIT_RATE,
		P.DEPOSIT_VALUE,
		P.POUNDAGE_RATE,
		P.POUNDAGE_VALUE,
		P.FIRSTRENT_RATE,
		P.FIRSTRENT_VALUE,
		P.DAY_PUACCRATE_RATE,
		P.INTER_UPRATE,
		P.YEAR_INTEREST,
		P.TOPRIC_SUBFIRENT,
		P.LEASE_TERM,
		P.LEASE_PERIOD,
		TO_CHAR (P.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		TO_CHAR (P.START_DATE, 'YYYY-MM-DD') START_DATE,
		P.STATUS,
		P.CREATE_PERSON,
		P.LEAD_PERSON,
		P.PAY_WAY,
		P.VERSION_CODE,
		TO_CHAR (P.END_DATE, 'YYYY-MM-DD') END_DATE,
		-- P.LAST_PRICE,
		P.CHANGE_START_FLAG,
		P.BANK_ID,
		P.BANK_FLAG,
		P.EX_STATUS,
		P.EX_REMARK,
		P.NOSTART_STATUS,
		P.NOSTART_REMARK,
		P.LEGAL_STATUS,
		P.PAY_STATUS,
		P.COMPANY_PERCENT,
		P.COMPANY_FEE,
		P.MANAGEMENT_FEETYPE,
		P.YEAR_TYPE,
		P.PAY_TYPE,
		P.CHANGE_TYPE,
		P.ID,
		C.ID PROJECT_ID,
		E.ID BECR_ID
		FROM FIL_RENT_PLAN_HEAD P, FIL_PROJECT_HEAD C, FIL_CUST_CLIENT E
		WHERE P.PROJECT_ID = C.ID AND C.CLIENT_ID = E.ID AND P.ID = #{ID}
	</select>

	<select id="getDetail" parameterType="map" resultType="map">
		SELECT PAY_DATE,
		PERIOD_NUM,
		LOCKED_FLAG,
		PAY_ID,
		ITEM_FLAG,
		SPLIT_RATE,
		MAX (DECODE (N, 1, ITEM_MONEY)) MONTHPRICE,
		MAX (DECODE (N, 2, ITEM_MONEY)) OWNPRICE,
		MAX (DECODE (N, 3, ITEM_MONEY)) RENPRICE,
		MAX (DECODE (N, 4, ITEM_MONEY)) LASTPRICE
		FROM (SELECT ID,
		TO_CHAR (PAY_DATE, 'yyyy-mm-dd') PAY_DATE,
		PERIOD_NUM,
		ITEM_NAME,
		ITEM_MONEY,
		ITEM_FLAG,
		SPLIT_RATE,
		SPLIT_MONEY,
		PAID_MONEY,
		LOCKED_FLAG,
		PAY_ID,
		ROW_NUMBER () OVER (PARTITION BY PAY_ID, PAY_DATE, PERIOD_NUM ORDER BY ID)	N
		FROM FIL_RENT_PLAN_DETAIL
		WHERE ITEM_FLAG = 2 AND PAY_ID = #{ID})
		GROUP BY PAY_DATE,
		PERIOD_NUM,
		LOCKED_FLAG,
		PAY_ID,
		ITEM_FLAG,
		SPLIT_RATE
		ORDER BY PERIOD_NUM
	</select>

	<select id="findPayList1" parameterType="map" resultType="map">
		SELECT	T.ID
		FROM FIL_RENT_PLAN_HEAD T
		WHERE T.PAYLIST_CODE = #{PAYLIST_CODE}
		ORDER BY T.VERSION_CODE
	</select>

	<!-- 租前息 -->
	<select id="findPayPayment" parameterType="map" resultType="map">
		SELECT FFPD.PAY_MONEY,
		TO_CHAR (FFPD.RESERVE_DATE, 'yyyy-mm-dd') RESERVE_DATE,
		CASE WHEN FFPD.PAYMENT_HEAD_ID != 0 THEN '1' ELSE '0' END TYPE
		FROM FIL_BUY_CONTRACT FBC, FI_FUND_PAYMENT_DETAIL FFPD
		WHERE FBC.ID = FFPD.BUY_CONTRACT_ID

	</select>
	<insert id="rentbefore_payplan" parameterType="Map">
		<selectKey resultType="int" order="BEFORE" keyProperty="NEWID">
			SELECT seq_fil_rent_plan_head.NEXTVAL FROM DUAL
		</selectKey>
		insert into fil_rent_plan_head
		(
		ID,
		PAYLIST_CODE,
		LEASE_TOPRIC,
		DEPOSIT_RATE,DEPOSIT_VALUE,POUNDAGE_RATE,POUNDAGE_VALUE,FIRSTRENT_RATE,FIRSTRENT_VALUE,
		DAY_PUACCRATE_RATE,
		--INTER_UPRATE,
		YEAR_INTEREST,
		TOPRIC_SUBFIRENT,
		LEASE_TERM,
		PROJECT_ID,
		LEASE_PERIOD,
		CREATE_DATE,
		START_DATE,
		STATUS,
		CREATE_PERSON,
		--LEAD_PERSON,
		PAY_WAY,
		VERSION_CODE,
		END_DATE,
		REPAYMENT_DATE,
		ZQX_PARENT_ID
		)
		SELECT
		#{NEWID},
		#{PAYLIST_CODE_ZQX},
		#{LEASE_TOPRIC},
		0,0,0,0,0,0,
		DAY_PUACCRATE_RATE,
		--INTER_UPRATE,
		#{YEAR_INTEREST},
		#{LEASE_TOPRIC},
		#{LEASE_TERM},
		PROJECT_ID,
		#{LEASE_PERIOD},
		SYSDATE,
		TO_DATE(#{START_DATE},'YYYY-MM-DD'),
		'0',
		#{USERNAME},
		--LEAD_PERSON,
		'1',
		1,
		TO_DATE(#{END_DATE},'YYYY-MM-DD'),
		TO_DATE(#{H_START_DATE},'YYYY-MM-DD'),
		#{ID}
		from fil_rent_plan_head t
		where t.ID = #{ID}
	</insert>

	<!--租前息支付表管理 -->
	<select id="getAllPayRentBefore" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
		SELECT T.ID,
		T.STATUS,
		TSD.FLAG STATUS_NAME,
		F.ID PROJECT_ID,
		C.NAME RENTER_NAME,
		f.Clerk_Name CLERK_NAME,
		F.PRO_CODE,
		T.PAYLIST_CODE,
		T.VERSION_CODE,
		TO_CHAR(T.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		TO_CHAR(T.START_DATE, 'YYYY-MM-DD') START_DATE,
		tv.STATUS P_STATUS,
		CASE WHEN T.ZRZ_STATUS ='1' THEN '未融资' else '已融资' end ZRZ_STATUS,
		C.ID CLIENT_ID,
		C.TYPE CUST_TYPE,
		F.LEASE_CODE,
		T.LEASE_TERM,
		T.PAY_MONEY,T.PAY_PERIOD,CASE WHEN T.IS_DUN_FLAG ='0' THEN '未逾期' else '已逾期' end IS_DUN_FLAG
		FROM fil_rent_plan_head T
		left join FIL_PROJECT_HEAD F on T.PROJECT_ID = F.ID
		left join FIL_CUST_CLIENT C on F.CLIENT_ID = C.ID
		left join (SELECT TT.FLAG, TT.CODE
		FROM T_SYS_DATA_DICTIONARY TT
		WHERE TT.TYPE =#{TYPE_} AND TT.STATUS = 0) TSD
		on T.STATUS = TSD.CODE
		left join T_SYS_SUPPLIERS TS on f.sup_id = TS.SUP_ID
		left join T_SYS_COMPANY TC on f.company_id = TC.COMPANY_ID
		left join fil_rent_plan_head_max_v tv on t.paylist_code = tv.PAYLIST_CODE
		WHERE T.STATUS ='0' AND T.ZQX_PARENT_ID IS NOT NULL
		<if test="STATUS==1">AND F.STATUS>=20</if>
		<if test="B_CREATE_DATE!=null and B_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE>=TO_DATE(#{B_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_CREATE_DATE!=null and E_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE<=TO_DATE(#{E_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND TC.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
		<if test="SUPPLIERS_NAME!=null and SUPPLIERS_NAME!=''">AND TS.SUP_SHORTNAME LIKE '%'||#{SUPPLIERS_NAME}||'%'</if>
		<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[T.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[T.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND F.PRO_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
		<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
		<if test="DATE_STATUS!=null and DATE_STATUS!=''">AND T.STATUS=#{DATE_STATUS}</if>
		<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND t.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
		<if test="ORD_ID!=null and ORD_ID!=''">AND F.ORD_ID in ${ORD_ID}</if>
		<if test="RENTER_NAME!=null and RENTER_NAME!=''">AND C.NAME LIKE '%'||#{RENTER_NAME}||'%'</if>
		) CC ORDER BY CC.CREATE_DATE,abs(CC.VERSION_CODE) DESC) CCC WHERE
		CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>

	<select id="getAllPayRentBefore_count" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(1) from (
		SELECT T.ID,
		T.STATUS,
		TSD.FLAG STATUS_NAME,
		F.ID PROJECT_ID,
		C.NAME RENTER_NAME,
		f.Clerk_Name CLERK_NAME,
		F.PRO_CODE,
		T.PAYLIST_CODE,
		T.VERSION_CODE,
		TO_CHAR(T.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		TO_CHAR(T.START_DATE, 'YYYY-MM-DD') START_DATE,
		F.LEASE_CODE,
		T.LEASE_TERM,
		T.PAY_MONEY,T.PAY_PERIOD,CASE WHEN T.IS_DUN_FLAG ='0' THEN '未逾期' else '已逾期' end IS_DUN_FLAG
		FROM fil_rent_plan_head T
		left join FIL_PROJECT_HEAD F on T.PROJECT_ID = F.ID
		left join FIL_CUST_CLIENT C on F.CLIENT_ID = C.ID
		left join (SELECT TT.FLAG, TT.CODE
		FROM T_SYS_DATA_DICTIONARY TT
		WHERE TT.TYPE =#{TYPE_}
		AND TT.STATUS = 0) TSD
		on T.STATUS = TSD.CODE
		left join T_SYS_SUPPLIERS TS on f.sup_id = TS.SUP_ID
		left join T_SYS_COMPANY TC on f.company_id = TC.COMPANY_ID
		where
		T.STATUS ='0' AND T.ZQX_PARENT_ID IS NOT NULL
		<if test="STATUS==1">AND F.STATUS>=20</if>
		<if test="B_CREATE_DATE!=null and B_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE>=TO_DATE(#{B_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_CREATE_DATE!=null and E_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE<=TO_DATE(#{E_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND TC.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
		<if test="SUPPLIERS_NAME!=null and SUPPLIERS_NAME!=''">AND TS.SUP_SHORTNAME LIKE '%'||#{SUPPLIERS_NAME}||'%'</if>
		<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[T.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[T.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND F.PRO_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
		<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
		<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND t.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
		<if test="ORD_ID!=null and ORD_ID!=''">AND F.ORD_ID in ${ORD_ID}</if>
		<if test="RENTER_NAME!=null and RENTER_NAME!=''">AND C.NAME LIKE '%'||#{RENTER_NAME}||'%'</if>
		)
	</select>

	<!--支付表变更 -->
	<select id="getAllPayRent" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
		SELECT T.ID,
		T.STATUS,
		TSD.FLAG STATUS_NAME,
		F.ID PROJECT_ID,
		C.NAME RENTER_NAME,
		f.Clerk_Name CLERK_NAME,
		F.LEASE_CODE,
		T.PAYLIST_CODE,
		T.VERSION_CODE,
		TO_CHAR(T.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		TO_CHAR(T.START_DATE, 'YYYY-MM-DD') START_DATE,
		CASE WHEN T.ZRZ_STATUS ='1' THEN '未融资' else '已融资' end ZRZ_STATUS,
		C.ID CLIENT_ID,
		C.TYPE CUST_TYPE,
		T.LEASE_TERM,
		T.PAY_MONEY,T.PAY_PERIOD,CASE WHEN T.IS_DUN_FLAG ='0' THEN '未逾期' else '已逾期' end IS_DUN_FLAG
		FROM fil_rent_plan_head_MAX_V T
		left join FIL_PROJECT_HEAD F on T.PROJECT_ID = F.ID
		left join FIL_CUST_CLIENT C on F.CLIENT_ID = C.ID
		left join T_SYS_DATA_DICTIONARY TSD on TSD.TYPE =#{TYPE_} and TSD.CODE=T.STATUS
		left join fil_rent_plan_head_max_v tv on t.paylist_code = tv.PAYLIST_CODE
		WHERE T.STATUS in (0,4,7,8)
		<if test="STATUS==1">AND F.STATUS>=20</if>
		<if test="STATUS!='' and STATUS==0">AND F.STATUS &lt; 20</if>
		<if test="B_CREATE_DATE!=null and B_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE>=TO_DATE(#{B_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_CREATE_DATE!=null and E_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE<=TO_DATE(#{E_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[T.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[T.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND F.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
		<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
		<if test="DATE_STATUS!=null and DATE_STATUS!=''">AND T.STATUS=#{DATE_STATUS}</if>
		<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND t.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
		<if test="RENTER_NAME!=null and RENTER_NAME!=''">AND C.NAME LIKE '%'||#{RENTER_NAME}||'%'</if>
		<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND F.ORD_ID IN ${SYS_ORGIDS_} </if>
		<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND F.CLERK_ID = #{SYS_CLERK_ID_} </if>
		) CC ORDER BY CC.CREATE_DATE,abs(CC.VERSION_CODE) DESC) CCC WHERE
		CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>

	<select id="getAllPayRent_count" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(1) from (
		SELECT T.ID,
		T.STATUS,
		TSD.FLAG STATUS_NAME,
		F.ID PROJECT_ID,
		C.NAME RENTER_NAME,
		f.Clerk_Name CLERK_NAME,
		F.LEASE_CODE,
		T.PAYLIST_CODE,
		T.VERSION_CODE,
		TO_CHAR(T.CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE,
		TO_CHAR(T.START_DATE, 'YYYY-MM-DD') START_DATE,
		T.LEASE_TERM,
		T.PAY_MONEY,T.PAY_PERIOD,CASE WHEN T.IS_DUN_FLAG ='0' THEN '未逾期' else '已逾期' end IS_DUN_FLAG
		FROM fil_rent_plan_head_MAX_V T
		left join FIL_PROJECT_HEAD F on T.PROJECT_ID = F.ID
		left join FIL_CUST_CLIENT C on F.CLIENT_ID = C.ID
		left join T_SYS_DATA_DICTIONARY TSD on TSD.TYPE =#{TYPE_} and TSD.CODE=T.STATUS
		where T.STATUS in (0,4,7,8)
		<if test="STATUS==1">AND F.STATUS>=20</if>
		<if test="STATUS!='' and STATUS==0">AND F.STATUS &lt; 20</if>
		<if test="B_CREATE_DATE!=null and B_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE>=TO_DATE(#{B_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_CREATE_DATE!=null and E_CREATE_DATE!=''">AND <![CDATA[T.CREATE_DATE<=TO_DATE(#{E_CREATE_DATE},'YYYY-MM-DD')]]></if>
		<if test="B_START_DATE!=null and B_START_DATE!=''">AND <![CDATA[T.START_DATE >=TO_DATE(#{B_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="E_START_DATE!=null and E_START_DATE!=''">AND <![CDATA[T.START_DATE <=TO_DATE(#{E_START_DATE},'YYYY-MM-DD')]]></if>
		<if test="LEASE_CODE!=null and LEASE_CODE!=''">AND F.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
		<if test="CLERK_NAME!=null and CLERK_NAME!=''">AND f.Clerk_Name LIKE '%'||#{CLERK_NAME}||'%'</if>
		<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''">AND t.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
		<if test="ORD_ID!=null and ORD_ID!=''">AND F.ORD_ID in ${ORD_ID}</if>
		<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND F.ORD_ID IN ${SYS_ORGIDS_} </if>
		<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND F.CLERK_ID = #{SYS_CLERK_ID_} </if>
		)
	</select>

	<select id="queryNextDate" parameterType="java.util.Map" resultType="map">
		select
		case when #{REPAYMENT_DATE_CHANGE} >= to_number(to_char(last_day(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd')), 'dd'))
		then to_char(last_day(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd')),'yyyy-MM-dd')
		when #{REPAYMENT_DATE_CHANGE} &lt; to_number(to_char(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd') ,'dd'))
		then to_char(ADD_MONTHS(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd'),	1) - (to_number(to_char(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd'),'dd')) - #{REPAYMENT_DATE_CHANGE}),'yyyy-MM-dd')
		else to_char(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd')+(#{REPAYMENT_DATE_CHANGE}-to_number(to_char(to_date(#{START_DATE_CHANGE},'yyyy-MM-dd'),'dd'))),'yyyy-MM-dd')
		end REPAYMENT_DATE_CHANGE
		from dual
	</select>

	<select id="doPayListCodeIng" parameterType="java.util.Map"	resultType="int">
		select count(1)
		from fi_r_beginning frb
		where (frb.beginning_status = 1 or frb.vinual_flag = 1) and frb.paylist_code = #{PAYLIST_CODE}
	</select>

	<select id="queryInfoByPeriod" parameterType="java.util.Map" resultType="map">
		select distinct
		to_char(frb.beginning_receive_data,'yyyy-MM-dd') RENT_DATE,
		(SELECT round(sum(nvl(f.beginning_money, 0) - nvl(f.beginning_paid, 0)), 2)
		FROM fi_r_beginning f
		where f.paylist_code = frb.paylist_code and f.item_flag = 2 and f.beginning_num &lt;= frb.beginning_num) NO_RENT_MEONY,
		(SELECT round(sum(nvl(f.beginning_money, 0) - nvl(f.beginning_paid, 0)), 2)
		FROM fi_r_beginning f
		where f.paylist_code = frb.paylist_code and f.item_flag = 2
		and f.beginning_num > frb.beginning_num and f.BEGINNING_NAME in ('利息','手续费','管理费','利息增值税')) NOT_INTEREST,
		(SELECT round(sum(nvl(f.beginning_money, 0) - nvl(f.beginning_paid, 0)), 2)
		FROM fi_r_beginning f
		where f.paylist_code = frb.paylist_code and f.item_flag = 2
		and f.beginning_num > frb.beginning_num and f.BEGINNING_NAME='本金') BENJIN_AFTER
		from fi_r_beginning frb
		where frb.paylist_code = #{PAYLIST_CODE} and frb.item_flag = 2 and frb.beginning_num = #{PERIOD}
	</select>

	<select id="queryInfoNormalByPeriod" parameterType="java.util.Map" resultType="map">
		select distinct
		to_char(frb.beginning_receive_data,'yyyy-MM-dd') RENT_DATE,to_char(sysdate,'yyyy-MM-dd') CURRDATE,
		(SELECT round(sum(nvl(f.beginning_money, 0) - nvl(f.beginning_paid, 0)), 2)
		FROM fi_r_beginning f
		where f.paylist_code = frb.paylist_code and f.item_flag = 2 and f.beginning_num &lt;= frb.beginning_num)
		NO_RENT_MEONY,
		nvl((SELECT round(sum(nvl(f.beginning_money, 0) - nvl(f.beginning_paid, 0)), 2)
		FROM fi_r_beginning f
		where f.paylist_code = frb.paylist_code and f.item_flag = 2 and f.beginning_num>frb.beginning_num), 0) ZUJIN_AFTER
		from fi_r_beginning frb
		where frb.paylist_code = #{PAYLIST_CODE} and	frb.item_flag = 2 and frb.beginning_num = #{PERIOD}
	</select>

	<delete id="deleteJQByPERIOD" parameterType="java.util.Map">
		delete fi_overdue fo
		where fo.PAY_CODE = #{PAYLIST_CODE} and fo.period in (
		select distinct frb.beginning_num
		from fi_r_beginning frb
		where frb.paylist_code = #{PAYLIST_CODE} and frb.beginning_receive_data >= to_date(#{ACCOUNT_DATE},'yyyy-MM-dd')
		and frb.item_flag = 2 and frb.beginning_receive_data is not null
		)
	</delete>

	<select id="queryPayOldID" parameterType="map" resultType="map">
		SELECT t.id, t.paylist_code, t.year_interest, t.pay_way, t.lease_period
		FROM fil_rent_plan_head t
		where t.ID = #{OLD_PAY_ID}
	</select>

	<select id="doShowJQByPayId" parameterType="map" resultType="map">
		select t.PARAM_VALUE
		from
		(
		select fpp.PARAM_VALUE
		from fil_paychange_parameter fpp
		where fpp.PAY_ID=#{PAY_ID} and	fpp.PARAM_NAME=#{PARAM_NAME}
		order by fpp.ID desc
		) t
		where rownum = 1
	</select>

	<delete id="deleteDetailByPayID" parameterType="String">
		delete	fil_rent_plan_detail frpd
		where frpd.pay_id = #{PAY_ID}
	</delete>

	<delete id="deleteHeadByPayID" parameterType="String">
		delete	fil_rent_plan_head frph
		where frph.id = #{PAY_ID}
	</delete>

	<delete id="deleteParamByPayID" parameterType="String">
		delete	fil_paychange_parameter f
		where f.pay_id = #{PAY_ID}
	</delete>

	<delete id="deleteOverDueByPayID" parameterType="String">
		delete	fi_overdue fo
		where fo.pay_code = #{PAYLIST_CODE} and fo.create_date > to_date(to_char(sysdate,'yyyy-MM-dd'),'yyyy-MM-dd')
	</delete>

	<update id="updateBeginningByDetail" parameterType="map">
		MERGE INTO fi_r_beginning t
		USING (
		select fr.period_num,round(nvl(fr.item_money,0),2) ITEM_MONEY,fr.item_name
		from fil_rent_plan_detail fr
		where fr.pay_id = #{PAY_ID} and fr.item_flag = 2 and fr.item_name in ('利息','管理费','手续费','利息增值税') and fr.period_num > to_number(#{PERIOD})
		) tt
		ON (t.paylist_code = #{PAYLIST_CODE} and t.BEGINNING_NUM > to_number(#{PERIOD})
		and t.ITEM_FLAG = 2 and t.BEGINNING_NAME = tt.item_name and t.BEGINNING_NUM = tt.period_num)
		WHEN MATCHED THEN UPDATE set
		t.BEGINNING_MONEY = tt.ITEM_MONEY
	</update>

	<update id="updateBeginningByDetailBJ" parameterType="map">
		MERGE INTO fi_r_beginning t
		USING (
		select fr.period_num,round(nvl(fr.item_money,0),2) ITEM_MONEY
		from fil_rent_plan_detail fr
		where fr.pay_id = #{PAY_ID} and fr.item_flag = 2 and fr.item_name = '本金' and fr.period_num > to_number(#{PERIOD})
		) tt
		ON (t.paylist_code=#{PAYLIST_CODE} and t.BEGINNING_NUM > to_number(#{PERIOD}) and t.ITEM_FLAG=2 and t.BEGINNING_NAME='本金' and t.BEGINNING_NUM = tt.period_num)
		WHEN MATCHED THEN UPDATE set
		t.BEGINNING_MONEY=tt.ITEM_MONEY
	</update>

	<insert id="insertItemOther" parameterType="map">
		insert into fi_r_beginning
		(BEGINNING_ID,BEGINNING_RECEIVE_DATA,BEGINNING_NAME,BEGINNING_MONEY,CREATE_ID,CREATE_TIME,PAYLIST_CODE,ITEM_FLAG,PROJECT_ID,PAY_WAY)
		select
		SEQ_FI_R_BEGINNING.Nextval,to_date(#{RENT_DATE},'yyyy-MM-dd'),fr.item_name,fr.item_money,
		#{CREATE_ID},sysdate,#{PAYLIST_CODE},fr.item_flag,frph.project_id,frph.PAY_WAY
		from fil_rent_plan_detail fr
		left join fil_rent_plan_head frph on fr.pay_id = frph.id
		where fr.pay_id = #{PAY_ID} and fr.item_flag = 4 and fr.FLAG_TYPE = 1
	</insert>

	<insert id="insertItemOtherHG" parameterType="map">
		insert into fi_r_beginning
		(BEGINNING_ID,BEGINNING_RECEIVE_DATA,BEGINNING_NAME,BEGINNING_MONEY,
		CREATE_ID,CREATE_TIME,PAYLIST_CODE,ITEM_FLAG,PROJECT_ID,PAY_WAY)
		select
		SEQ_FI_R_BEGINNING.Nextval,to_date(#{RENT_DATE},'yyyy-MM-dd'),fr.item_name,fr.item_money,
		#{CREATE_ID},sysdate,#{PAYLIST_CODE},fr.item_flag,frph.project_id,frph.PAY_WAY
		from fil_rent_plan_detail fr
		left join fil_rent_plan_head frph on fr.pay_id=frph.id
		where fr.pay_id=#{PAY_ID} and fr.item_flag=4 and fr.FLAG_TYPE=1
	</insert>

	<update id="updateFlagTypeByPayID" parameterType="map">
		update fil_rent_plan_detail fr set fr.FLAG_TYPE = 0 where fr.pay_id = #{PAY_ID}
	</update>

	<select id="queryJQDate" parameterType="map" resultType="map">
		select
		t.beginning_num,t.BEGINNING_NAME,t.rent_date,sum(t.BEGINNING_MONEY)
		BEGINNING_MONEY,sum(t.BEGINNING_PAID) BEGINNING_PAID,sum(t.rent_money) rent_money,
		#{RENT_DATE} REALITY_TIME,t.ITEM_FLAG, WM_CONCAT(t.BEGINNING_ID) BEGINNING_ID
		from (
		select
		frb.beginning_num,to_char(frb.beginning_receive_data,'yyyy-MM-dd')
		rent_date,case when frb.BEGINNING_NAME='本金' then '租金' when
		frb.BEGINNING_NAME='利息' then '租金' when frb.ITEM_FLAG ='2' and frb.BEGINNING_NAME='手续费' then '租金'
		when frb.ITEM_FLAG ='2' and frb.BEGINNING_NAME='管理费' then '租金'
		when frb.ITEM_FLAG ='2' and frb.BEGINNING_NAME='利息增值税' then '租金'
		else frb.BEGINNING_NAME end BEGINNING_NAME,
		round(nvl(frb.BEGINNING_MONEY, 0), 2) BEGINNING_MONEY,round(nvl(frb.BEGINNING_PAID, 0), 2) BEGINNING_PAID,
		round(nvl(frb.BEGINNING_MONEY, 0) - nvl(frb.BEGINNING_PAID, 0), 2)	rent_money, frb.ITEM_FLAG, frb.BEGINNING_ID
		from fi_r_beginning frb
		where frb.paylist_code = #{PAYLIST_CODE} and round(nvl(frb.BEGINNING_MONEY,0) - nvl(frb.BEGINNING_PAID,0), 2) > 0.00005
		union all
		select fo.period beginning_num,to_char(fo.RENT_DATE,'yyyy-MM-dd')
		rent_date,'违约金' BEGINNING_NAME,
		round(nvl(fo.penalty_rece,0),2) BEGINNING_MONEY,round(nvl(fo.penalty_paid,0),2) BEGINNING_PAID,
		round(nvl(fo.penalty_rece,0)-nvl(fo.penalty_paid,0),2) rent_money,'7' ITEM_FLAG,fo.ID BEGINNING_ID
		from fi_overdue fo
		where TRUNC(FO.CREATE_DATE) = to_date(#{RENT_DATE},'yyyy-MM-dd')
		and fo.pay_code=#{PAYLIST_CODE}
		and round(nvl(fo.penalty_rece,0)-nvl(fo.penalty_paid,0),2)>0.00005
		) t
		group by t.beginning_num,t.BEGINNING_NAME,t.rent_date,t.ITEM_FLAG
		order by t.beginning_num nulls first,t.BEGINNING_NAME
	</select>

	<select id="DIKOUFUND" parameterType="map" resultType="map">
		SELECT
		T.FUND_ID,
		T.FUND_FUNDCODE,
		T.FUND_COMENAME,
		T.FUND_ACCEPT_NAME,
		T.FUND_RECEIVE_MONEY,
		T.FUND_CLIENT_ID,
		TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		T.FUND_DOCKET,
		T.FUND_PIDENTIFY_PERSON,
		T.FUND_CLIENT_NAME
		FROM FI_FUND T
		WHERE T.FUND_STATUS = 0 and T.FUND_NOTDECO_STATE = 7 and T.FUND_PAY_CODE = #{PAYLIST_CODE}
		ORDER BY CREATE_DATE DESC
	</select>

	<select id="listFundByCustID" parameterType="map" resultType="map">
		SELECT T.FUND_ID,
		T.FUND_FUNDCODE,
		T.FUND_COMENAME,
		T.FUND_ACCEPT_NAME,
		T.FUND_RECEIVE_MONEY,
		T.FUND_CLIENT_ID,
		TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		T.FUND_DOCKET,
		T.FUND_PIDENTIFY_PERSON,
		T.FUND_CLIENT_NAME
		FROM FI_FUND T
		WHERE T.FUND_STATUS = 0 and T.FUND_NOTDECO_STATE != 7 and T.FUND_ISCONGEAL = 0
		and T.FUND_CLIENT_ID = #{CUST_ID} and T.FUND_RECEIVE_MONEY > 0
		ORDER BY CREATE_DATE DESC
	</select>

	<select id="queryFundMoneyByCustID" parameterType="map"	resultType="double">
		SELECT round(sum(nvl(T.FUND_RECEIVE_MONEY, 0)), 2)	FUND_RECEIVE_MONEY
		FROM FI_FUND T
		WHERE T.FUND_STATUS = 0 and T.FUND_NOTDECO_STATE != 7 and T.FUND_ISCONGEAL = 0
		and T.FUND_CLIENT_ID = #{CUST_ID} and T.FUND_RECEIVE_MONEY > 0
	</select>

	<update id="updateDJFundMoneyByCustID" parameterType="map">
		update	FI_FUND T
		set T.FUND_ISCONGEAL = 1
		WHERE T.FUND_STATUS = 0 and T.FUND_ISCONGEAL = 0
		and T.FUND_CLIENT_ID = #{CUST_ID} and T.FUND_RECEIVE_MONEY > 0
	</update>

	<update id="updateJDFundMoneyByCustID" parameterType="map">
		update	FI_FUND T
		set T.FUND_ISCONGEAL = 0
		WHERE T.FUND_STATUS = 0 and T.FUND_ISCONGEAL = 1 and T.FUND_CLIENT_ID = #{CUST_ID}
	</update>

	<select id="queryFundByCustIdDikou" parameterType="map"	resultType="map">
		SELECT T.FUND_ID,
		T.FUND_FUNDCODE,
		T.FUND_COMENAME,
		T.FUND_ACCEPT_NAME,
		T.FUND_RECEIVE_MONEY,
		T.FUND_CLIENT_ID,
		TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		T.FUND_DOCKET,
		T.FUND_PIDENTIFY_PERSON,
		T.FUND_CLIENT_NAME
		FROM FI_FUND T
		WHERE T.FUND_STATUS = 0 and T.FUND_NOTDECO_STATE = 7 and T.FUND_ISCONGEAL = 1
		and T.FUND_CLIENT_ID = #{CUST_ID}
		and T.FUND_PAY_CODE = #{PAYLIST_CODE} and T.FUND_RECEIVE_MONEY > 0 and	rownum = 1
	</select>

	<select id="queryFundByCustIdDikouList" parameterType="map" resultType="map">
		SELECT T.FUND_ID,
		T.FUND_FUNDCODE,
		T.FUND_COMENAME,
		T.FUND_ACCEPT_NAME,
		T.FUND_RECEIVE_MONEY,
		T.FUND_CLIENT_ID,
		TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		T.FUND_DOCKET,
		T.FUND_PIDENTIFY_PERSON,
		T.FUND_CLIENT_NAME
		FROM FI_FUND T
		WHERE T.FUND_STATUS = 0 and T.FUND_NOTDECO_STATE = 7 and T.FUND_ISCONGEAL = 1
		and T.FUND_CLIENT_ID = #{CUST_ID}
		and T.FUND_PAY_CODE = #{PAYLIST_CODE} and T.FUND_RECEIVE_MONEY > 0
	</select>

	<select id="queryFundByCustId" parameterType="map" resultType="map">
		SELECT T.FUND_ID,
		T.FUND_FUNDCODE,
		T.FUND_COMENAME,
		T.FUND_ACCEPT_NAME,
		T.FUND_RECEIVE_MONEY,
		T.FUND_CLIENT_ID,
		TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		T.FUND_DOCKET,
		T.FUND_PIDENTIFY_PERSON,
		T.FUND_CLIENT_NAME
		FROM FI_FUND T
		WHERE T.FUND_STATUS = 0 and T.FUND_NOTDECO_STATE != 7 and T.FUND_ISCONGEAL = 1
		and T.FUND_CLIENT_ID = #{CUST_ID} and T.FUND_RECEIVE_MONEY > 0
		ORDER BY T.FUND_NOTDECO_STATE DESC
	</select>

	<select id="queryBaseInfoByInfo" parameterType="map" resultType="map">
		select fcc.cust_id from fil_cust_client fcc where fcc.id=#{CUST_ID}
	</select>

	<select id="queryBaseInfoByPaylistCode" parameterType="String" resultType="map">
		select to_char(vps.START_DATE,'yyyy-MM-dd')
		DELIVER_DATE,vps.PRODUCT_NAME,vps.SPEC_NAME,vps.WHOLE_ENGINE_CODE,vps.TOTAL_PRICE,vps.LEASE_TERM,
		to_char(fph.SIGNED_DATE,'yyyy-MM-dd') SIGNED_DATE,
		case when fcc.type = 'LP' then fcc.ORAGNIZATION_CODE else fcc.ID_CARD_NO end	CARD_ORAGNIZATION_CODE
		from v_plan_scheme vps
		left join fil_project_head fph on vps.PROJECT_ID = fph.id
		left join fil_cust_client fcc on fph.client_id = fcc.id
		where vps.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>

	<select id="upDateToJoin" statementType="CALLABLE" parameterType="map">
		{call PRC_BE_QJL_PAY_CODE(#{PAYLIST_CODE})}
	</select>

	<select id="queryDunListByRentDate" parameterType="map" resultType="map">
		select fo.ID, fo.PERIOD, NVL(fo.PENALTY_RECE,0) - NVL(fo.PENALTY_PAID,0) DUNMONEY
		from fi_overdue fo
		where fo.pay_code = #{PAYLIST_CODE} and trunc(fo.create_date) = to_date(#{RENT_DATE},'yyyy-MM-dd') order by fo.PERIOD
	</select>

	<select id="queryDunListByRentDateHG" parameterType="map" resultType="map">
		select fo.ID,fo.PERIOD,NVL(fo.PENALTY_RECE,0) - NVL(fo.PENALTY_PAID,0) DUNMONEY
		from fi_overdue fo
		where fo.pay_code = #{PAYLIST_CODE} and trunc(fo.create_date) = to_date(#{ACCOUNT_DATE},'yyyy-MM-dd') order by fo.PERIOD
	</select>

	<update id="updateDunByID" parameterType="map">
		update fi_overdue fo set fo.PENALTY_PAID = (fo.PENALTY_PAID + #{MONEY})
		where fo.ID = #{ID}
	</update>

	<select id="getRentDateData" parameterType="map" resultType="map">
		SELECT T.ID, T.LEASE_PERIOD, T.LEASE_TERM, TSD.FLAG PAY_WAY,T.PAYLIST_CODE
		FROM FIL_RENT_PLAN_HEAD T
		LEFT JOIN T_SYS_DATA_DICTIONARY TSD
		ON TSD.CODE = T.PAY_WAY
		AND TSD.TYPE = '支付方式'
		WHERE ID = #{PAY_ID}
	</select>

	<select id="getProjectDataById" parameterType="map" resultType="map">
		SELECT SDS.BASEDATE, SDS.DATERULE, SDS.EXTEND, SDS.DATESITE
		FROM FIL_RENT_PLAN_HEAD FPH
		LEFT JOIN FIL_PROJECT_HEAD T
		ON T.ID = FPH.PROJECT_ID
		LEFT JOIN (SELECT *
		FROM T_SYS_DATE_SETUP TD
		WHERE TD.ID IN (SELECT MAX(ID)
		FROM T_SYS_DATE_SETUP SS
		GROUP BY SS.PLATFORM_TYPE, SS.DATESITE)) SDS
		ON SDS.PLATFORM_TYPE = T.PLATFORM_TYPE
		WHERE FPH.ID = #{PAY_ID}
		<if test="BASEDATE!=null and BASEDATE!=''">AND SDS.BASEDATE = #{BASEDATE}</if>
	</select>

	<select id="getRend_ID" parameterType="map" resultType="map">
		SELECT T.ID FROM FIL_RENT_PLAN_HEAD T WHERE T.PROJECT_ID = #{PROJECT_ID}
	</select>

	<select id="getProjectID" parameterType="map" resultType="map">
		SELECT MAX(FPH.ID) PROJECT_ID
		FROM FIL_EQUIMENT_RECEIPT FER
		LEFT JOIN FIL_EQUIPMENT_SENDNOTICE FES
		ON FER.SENDNOTICE_ID = FES.ID
		LEFT JOIN FIL_PROJECT_HEAD FPH
		ON FPH.ID = FES.PROJECT_ID
		WHERE FER.ID = #{ID}
		GROUP BY FPH.ID
	</select>

	<update id="updateREPAYMENT_DATE" parameterType="map">
		UPDATE FIL_RENT_PLAN_HEAD
		SET REPAYMENT_DATE = TO_DATE(#{dateStr},'yyyy-MM-dd')
		WHERE ID = #{PAY_ID}
	</update>

	<select id="doPRC_BE_QJL_PAY_CODE" statementType="CALLABLE" parameterType="map">
		<![CDATA[
			{call PRC_BE_QJL_PAY_CODE (#{PAYLIST_CODE})}
		]]>
	</select>

	<select id="doFROMBEGINNGINTOJOIN_PRC_ONE" statementType="CALLABLE" parameterType="map">
		<![CDATA[
			{call FROMBEGINNGINTOJOIN_PRC_ONE (#{PAYLIST_CODE})}
		]]>
	</select>

	<select id="doDunDateByPaylist_code" statementType="CALLABLE" parameterType="map">
		<![CDATA[
			{call prc_dun_one (#{PAYLIST_CODE})}
		]]>
	</select>

	<select id="queryPaylist_codeBJ" parameterType="String" resultType="map">
		select ffd.D_PAY_CODE PAYLIST_CODE, ROUND(sum(NVL(ffd.d_Receive_Money, 0)), 2) Receive_Money
		from fi_fund_head ffh
		left join fi_fund_detail ffd on ffd.D_fund_id = ffh.id
		where ffh.id = #{FUND_ID} and ffd.d_Pay_Project = '本金'
		group by ffd.D_PAY_CODE
	</select>

	<update id="updatSXBack" parameterType="map">
		update T_CUST_GRANTPLAN fcgr
		set fcgr.LAST_PRICE = round(nvl(fcgr.LAST_PRICE,0) + to_number(nvl(#{RECEIVE_MONEY}, 0)), 2)
		where fcgr.CUGP_ID in (
		select fcg.CUGP_ID
		from fil_rent_plan_head_max_v frp
		left join FIL_PROJECT_GRANTPLAN frg on frp.PROJECT_ID=frg.project_id
		left join T_CUST_GRANTPLAN fcg on frg.CUGP_ID=fcg.cugp_id
		where frp.PAYLIST_CODE=#{PAYLIST_CODE} and fcg.REPEAT_CREDIT=0
		)
	</update>

	<select id="getCjStatus" parameterType="string" resultType="map">
		SELECT VALUE_STR,FRPH.ID
		FROM FIL_RENT_PLAN_HEAD    FRPH,
		FIL_PROJECT_EQUIPMENT FPE,
		FIL_SCHEME_CLOB       FSC
		WHERE FRPH.PAYLIST_CODE = FPE.PAYLIST_CODE
		AND FPE.SCHEME_ID_ACTUAL = FSC.SCHEME_ID
		AND FSC.KEY_NAME_EN = 'ISNOPAYFORNEWYEAR'
		AND FRPH.ID=#{PAY_ID}
		GROUP BY FRPH.ID,FSC.VALUE_STR
	</select>

	<select id="queryPayScheme" parameterType="map" resultType="map">
		SELECT FSC.*
		FROM FIL_RENT_PLAN_HEAD_MAX_V FRP,
		(SELECT FE.SCHEME_ID_ACTUAL, FE.PAYLIST_CODE
		FROM FIL_PROJECT_EQUIPMENT FE
		WHERE FE.SCHEME_ID_ACTUAL IS NOT NULL
		AND FE.PAYLIST_CODE IS NOT NULL
		GROUP BY FE.SCHEME_ID_ACTUAL, FE.PAYLIST_CODE) FPE,
		FIL_PROJECT_SCHEME FPS,
		FIL_SCHEME_CLOB FSC
		WHERE FPE.SCHEME_ID_ACTUAL = FPS.ID
		AND FRP.PAYLIST_CODE = FPE.PAYLIST_CODE
		AND FPS.ID = FSC.SCHEME_ID
		AND FSC.VALUE_STATUS != 1
		AND FSC.ROW_NUM > 0
		AND FPE.PAYLIST_CODE=#{PAYLIST_CODE}
		ORDER BY TO_NUMBER(FSC.ROW_NUM) ASC
	</select>

	<update id="updatePayDetailItemInfo" parameterType="map">
		update fil_rent_plan_detail frpd
		set PAY_DATE = to_date(#{PAY_DATE},'yyyy-MM-dd'),ITEM_MONEY = #{ITEM_MONEY}
		where frpd.PAY_ID = #{PAY_ID} and frpd.ITEM_NAME = #{ITEM_NAME} and frpd.PERIOD_NUM = #{qc}
	</update>

	<update id="updatePayDetailPayDate" parameterType="map">
		update fil_rent_plan_detail frpd
		set PAY_DATE = to_date(#{PAY_DATE},'yyyy-MM-dd')
		where frpd.PAY_ID = #{PAY_ID} and frpd.PERIOD_NUM = #{qc}
	</update>

	<update id="updateBeginningPayDate" parameterType="map">
		update FI_R_BEGINNING frb
		set frb.BEGINNING_RECEIVE_DATA = to_date(#{PAY_DATE},'yyyy-MM-dd')
		where frb.PAYLIST_CODE = #{PAYLIST_CODE} and frb.BEGINNING_NUM = #{qc}
	</update>

	<update id="updatePayHeadMoneyAll" parameterType="map">
		update fil_rent_plan_head frph
		set frph.money_all = round(nvl(#{ZJHJ}, 0), 2)
		where frph.ID = #{ID}
	</update>

	<select id="queryPayDataByPayId" parameterType="map" resultType="map">
		select to_char(frph.start_date,'yyyy-MM-dd') start_date,to_char(frph.REPAYMENT_DATE,'yyyy-MM-dd') REPAYMENT_DATE,frph.PAYLIST_CODE
		from fil_rent_plan_head frph
		where frph.id = #{PAY_ID}
	</select>

	<select id="getSchemeBaseInfoByProjectIdINT" parameterType="map" resultType="map">
		SELECT
		fps.ID,
		SCHEME_CODE,
		TO_CHAR(CREATE_DATE,'YYYY-MM-DD')CREATE_DATE,
		fps.CREATE_CODE,
		fps.LEASE_TERM,
		fps.LEASE_PERIOD,
		fps.LEASE_TOPRIC,
		fps.START_PERCENT,
		fps.FINANCE_TOPRIC,
		fps.PAY_WAY,
		fps.MANAGEMENT_FEETYPE,
		fps.CALCULATE,
		fps.INTERNAL_RATE,
		fps.POUNDAGE_WAY,
		fps.YEAR_TYPE,
		fps.YEAR_INTEREST,
		fps.DAY_PUACCRATE,
		fps.BAIL_PERCENT,
		fps.POUNDAGE_RATE,
		fps.POUNDAGE_PRICE,
		fps.DEAL_MODE,
		fps.COMPANY_PERCENT,
		fps.TOTAL_MONTH_PRICE,
		fps.SCHEME_ROW_NUM,
		fps.FIRSTPAYALL,
		fps.FIRSTPAYDATE,
		FPH.PLATFORM_TYPE,
		fps.INSURANCE_PERCENT,
		fps.LXTQSQ,
		fps.DAY_PUACCRATE_TYPE,
		fps.PROJECT_ID,
		fps.GDLX,
		fps.DISCOUNT_MONEY,
		fps.DISCOUNT_TYPE,
		12/fps.LEASE_PERIOD PAYCOUNTOFYEAR,
		LXTQSQ,
		GDLX,
		DISCOUNT_MONEY,
		DISCOUNT_TYPE,
		FPH.PRO_CODE,
		FPS.LAST_MONEY
		FROM FIL_PROJECT_SCHEME FPS
		left join FIL_PROJECT_HEAD fph on FPS.PROJECT_ID=FPH.ID
		where fps.id = (
		select min(fpe.SCHEME_ID_ACTUAL) SCHEME_ID_ACTUAL
		FROM fil_project_equipment fpe
		where fpe.pay_id=#{PAY_ID} and fpe.SCHEME_ID_ACTUAL is not null
		)
	</select>

	<select id="queryAmountCount" parameterType="map" resultType="int">
		select count(1) from fil_project_equipment fpe where fpe.pay_id=#{PAY_ID}
	</select>

	<select id="querySchemeSFCELXByPay" parameterType="java.util.Map" resultType="map">
		select fsc.value_str from fil_rent_plan_head frph
		left join fil_project_scheme fps on frph.project_id = fps.project_id
		left join fil_scheme_clob fsc on fps.id = fsc.scheme_id
		where frph.ID = #{PAY_ID} and fsc.Key_Name_En = 'SFCELX' and rownum = 1
	</select>

	<select id="queryPaylist_codeByFundID" parameterType="String" resultType="map">
		select ffd.D_PAY_CODE PAYLIST_CODE
		from fi_fund_head ffh
		left join fi_fund_detail ffd on ffd.D_fund_id = ffh.id
		where ffh.id = #{FUND_ID}
		group by ffd.D_PAY_CODE
	</select>

	<update id="updatePayHeadInfoByPaylistCode" parameterType="map">
		MERGE INTO fil_rent_plan_head t
		USING (
				  select * from V_QJL_FINANACE_INFO vqfi where vqfi.PAYLIST_CODE = #{PAYLIST_CODE}
			  ) tt
		ON (t.PAYLIST_CODE = #{PAYLIST_CODE} and t.PAYLIST_CODE = tt.PAYLIST_CODE )
		WHEN MATCHED THEN UPDATE set t.PAY_MONEY = round(NVL(tt.WH_ZJ_MONEY, 0), 2),t.PAY_PERIOD = tt.YH_period
	</update>
</mapper>