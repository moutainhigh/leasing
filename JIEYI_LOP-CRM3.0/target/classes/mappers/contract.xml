<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="contract">


	<select id="getAllProject" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT * FROM (
		SELECT CC.*,ROWNUM ROWNO FROM
		(
		SELECT FPH.ID,TSDD1.FLAG
		STATUS_NAME,FPH.PRO_CODE,FCL.NAME
		CUST_NAME,FPH.COMPANY_NAME,FPH.SUP_SHORTNAME SUP_NAME,
		TO_CHAR(FPH.CREATE_TIME,'YYYY-MM-DD') CREATE_TIME,TSDD.FLAG
		PLATFORM_NAME, FCL.TYPE CUST_TYPE,FPH.ZKL,
		(SELECT PARENT_ID FROM
		FIL_PROJECT_HEAD FPHH WHERE FPHH.PARENT_ID =FPH.ID
		)PARENT_ID,FPH.CLERK_NAME,FPH.PLATFORM_TYPE,TSDD2.FLAG
		CUST_TYPE_NAME,FPH.STATUS,FCL.ID CUST_ID,
		--TTT.NAME_ AS LCNAME,
		TTT.IS_READ,
		CASE WHEN FPH.LEASE_MODEL='direct_leasing' and
		FPH.PLATFORM_TYPE ='4' THEN
		'直接租赁业务'
		WHEN FPH.LEASE_MODEL='back_leasing'
		and FPH.PLATFORM_TYPE ='4' THEN
		'标准型售后回租业务'
		ELSE ' ' END AS LEASE_MODEL,
		LEASE_CODE,
		CASE
		WHEN FPH.STATUS = 0 THEN '草稿'
		WHEN (FPH.STATUS > 0 AND
		FPH.STATUS &lt; 20) THEN '待处理'
		WHEN FPH.STATUS >= 20 THEN '已结束'
		ELSE
		'--'
		END AS LC_STATUS,
		NVL(TTT.NAME_,DECODE(FPH.STATUS,0,'01、DB提交申请',1,'02、DB经理审批',20,'19、起租批准','项目已起租'))
		AS LCNAME,
		TTT.ID_ TTT_ID,TTT.JM_ID
		FROM FIL_PROJECT_HEAD FPH
		LEFT JOIN
		FIL_CUST_CLIENT FCL ON FPH.CLIENT_ID=FCL.ID
		left join
		T_SYS_SITE_DICTIONARY tsdd on fph.platform_type=tsdd.code and
		tsdd.type=#{tags1}
		left join T_SYS_SITE_DICTIONARY tsdd1 on
		fph.status=tsdd1.code and
		tsdd1.type=#{tags2}
		left join
		T_SYS_DATA_DICTIONARY tsdd2 on fcl.type=tsdd2.code and
		tsdd2.type=#{tags3}
		LEFT JOIN (SELECT
		JBPM4_TASK.EXECUTION_ID_,JBPM4_TASK.NAME_,JBPM4_HIST_PROCINST.PROJECT_ID,JBPM4_HIST_PROCINST.ID_,
		JM.ID JM_ID
		,JBPM4_HIST_PROCINST.IS_READ
		FROM JBPM4_TASK
		JOIN
		JBPM4_HIST_PROCINST
		ON JBPM4_TASK.EXECUTION_ID_ =
		JBPM4_HIST_PROCINST.ID_
		LEFT JOIN (SELECT M.JBPM_ID,MAX(M.ID)ID FROM
		JBPM_MEMO M GROUP BY
		M.JBPM_ID) JM
		ON JM.JBPM_ID=JBPM4_HIST_PROCINST.ID_
		) TTT
		ON TTT.ID_ = FPH.JBPM_ID
		<where>
			FPH.STATUS >= 20 and FPH.STATUS != 27
			<if test="PRO_CODE != null and PRO_CODE != ''">AND fph.PRO_CODE like '%'||#{PRO_CODE}||'%'</if>
			<if test="PLATFORM_TYPE != null and PLATFORM_TYPE != ''">AND fph.PLATFORM_TYPE=#{PLATFORM_TYPE}</if>
			<if test="CUST_NAME !=null and CUST_NAME !=''">AND fcl.name like '%'||#{CUST_NAME}||'%'</if>
			<if test="LEASE_CODE !=null and LEASE_CODE !=''">AND fph.LEASE_CODE like '%'||#{LEASE_CODE}||'%'</if>
			<if test="STATUS !=null and STATUS !=''">AND fph.status=#{STATUS}</if>
			<!-- <if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID 
				IN ${SYS_ORGIDS_} </if> <if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ 
				!=''">AND FPH.CLERK_ID IN ${SYS_CLERK_ID_} </if> <if test="SYS_REGIONAL !=null 
				and SYS_REGIONAL !=''">AND FPH.ORD_ID IN ${SYS_REGIONAL} </if> <if test="SYS_PROVINCE 
				!=null and SYS_PROVINCE !=''">AND FPH.ORD_ID IN ${SYS_PROVINCE} </if> <if 
				test="SYS_SUPPLIER !=null and SYS_SUPPLIER !=''">AND FPH.ORD_ID IN ${SYS_SUPPLIER} 
				</if> -->
		</where>
		ORDER BY FPH.ID DESC
		) CC
		WHERE ROWNUM &lt;= #{PAGE_END}
		) CCC
		WHERE
		CCC.ROWNO >= #{PAGE_BEGIN}
	</select>

	<select id="getAllProject_count" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(1)
		FROM FIL_PROJECT_HEAD FPH
		LEFT JOIN FIL_CUST_CLIENT FCL
		ON FPH.CLIENT_ID=FCL.ID
		<where>
			FPH.STATUS = 20 and FPH.STATUS != 27
			<if test="PRO_CODE != null and PRO_CODE != ''">AND fph.PRO_CODE like '%'||#{PRO_CODE}||'%'</if>
			<if test="PLATFORM_TYPE != null and PLATFORM_TYPE != ''">AND fph.PLATFORM_TYPE=#{PLATFORM_TYPE}</if>
			<if test="CUST_NAME !=null and CUST_NAME !=''">AND fcl.name like '%'||#{CUST_NAME}||'%'</if>
			<if test="LEASE_CODE !=null and LEASE_CODE !=''">AND fph.LEASE_CODE like '%'||#{LEASE_CODE}||'%'</if>
			<if test="STATUS !=null and STATUS !=''">AND fph.status=#{STATUS}</if>
			<if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID IN (

				select so1.id from secu_org so1
				start
				with so1.id = (
				SELECT SO123.id from
				(
				SELECT SO.ID as ID
				FROM SECU_ORG SO
				WHERE SO.TYPE = 5
				START
				WITH
				SO.ID = #{ORD_ID}
				CONNECT BY PRIOR SO.PARENT_ID = SO.ID
				)SO123
				where rownum =1
				)
				connect
				by prior so1.id = so1.parent_id


				)
			</if>
			<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND FPH.CLERK_ID IN ${SYS_CLERK_ID_} </if>
			<if test="SYS_REGIONAL !=null and SYS_REGIONAL !=''">AND FPH.ORD_ID IN ${SYS_REGIONAL} </if>
			<if test="SYS_PROVINCE !=null and SYS_PROVINCE !=''">AND FPH.ORD_ID IN ${SYS_PROVINCE} </if>
			<if test="SYS_SUPPLIER !=null and SYS_SUPPLIER !=''">AND FPH.ORD_ID IN ${SYS_SUPPLIER} </if>
		</where>
	</select>

	<select id="queryContractTemplateList" parameterType="java.util.Map"
		resultType="java.util.Map">
		select DISTINCT tpm.tpm_id,
		fph.id PROJECT_ID,
		fph.CLIENT_ID,
		tpf.ID TEP_ID,
		tpm.TPM_TYPE FILE_NAME,
		tpf.PDF_PATH
		TEMPLATE_PATH,
		tpm.TPM_SEAL_SERVICE
		from fil_project_head fph,
		fil_cust_client fcc,
		T_PDFTEMPLATE_MAINTENANCE tpm,
		T_PDFTEMPLATE_FILE
		tpf
		where fph.client_id = fcc.id
		and tpm.tpm_customer_type like '%'||
		(case
		when
		fcc.type='LP' then '企业'
		when fcc.type='lp' then '企业'
		when
		fcc.type='NP'
		then '个人'
		when fcc.type='np' then '个人'
		ELSE NULL
		END
		)
		||'%'
		and
		tpm.TPM_BUSINESS_TYPE LIKE '%'|| (select tsdd.FLAG
		from
		T_SYS_SITE_DICTIONARY tsdd,
		fil_project_head fph
		where
		fph.ID=#{PROJECT_ID}
		and to_char(fph.platform_type) = tsdd.CODE
		and
		tsdd.type='业务类型' ) ||'%'

		and tpf.TPF_TPM_ID=tpm.tpm_id
		AND tpf.STATUS =
		'启用' AND tpf.FILE_TYPE=0
		and fph.ID=#{PROJECT_ID}
		order by TEP_ID
	</select>

	<select id="queryContractTemplateMap" parameterType="java.util.Map"
		resultType="java.util.Map">
		select DISTINCT tpm.tpm_id,fph.id
		PROJECT_ID,fph.CLIENT_ID,tpf.ID TEP_ID,tpm.TPM_TYPE
		FILE_NAME,tpf.PDF_PATH TEMPLATE_PATH from fil_project_head
		fph,fil_cust_client fcc,T_SYS_SITE_DICTIONARY tsdd
		,T_PDFTEMPLATE_MAINTENANCE tpm,T_PDFTEMPLATE_FILE tpf
		where
		fph.client_id=fcc.id and tsdd.type='行业类型' and
		fph.INDUSTRY_FICATION=tsdd.code
		and tpm.tpm_customer_type like '%'||
		(case
		when fcc.type='LP' then '法人'
		when fcc.type='lp' then '法人'
		when
		fcc.type='NP' then '个人'
		when fcc.type='np' then '个人'
		ELSE NULL
		END
		)
		||'%'

		and tpm.tpm_business_plate like '%'|| tsdd.flag ||'%'
		and
		tpm.TPM_BUSINESS_TYPE LIKE '%'|| (select tsdd.FLAG
		from
		t_sys_data_dictionary tsdd,
		fil_project_head fph
		where
		fph.ID=#{PROJECT_ID}
		and to_char(fph.platform_type) = tsdd.CODE
		and
		tsdd.type='业务类型' ) ||'%'

		and tpf.TPF_TPM_ID=tpm.tpm_id
		AND tpf.STATUS =
		'启用' AND tpf.FILE_TYPE=0
		and fph.ID=#{PROJECT_ID} and
		tpm.TPM_TYPE=#{FILE_NAME}
		order by TEP_ID
	</select>

	<select id="baseInfoMap" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fph.id
		PROJECT_ID,fph.LEASE_CODE,fph.PRO_NAME,fph.CLIENT_ID from
		fil_project_head fph where fph.ID=#{PROJECT_ID}
	</select>

	<select id="baseInfoByIDMap" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fph.id
		PROJECT_ID,fph.LEASE_CODE,fph.PRO_NAME,fph.CLIENT_ID from
		fil_project_head fph where fph.ID=#{PROJECT_ID}
	</select>

	<select id="queryProjectByLeaseCode" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fph.id PROJECT_ID,fcc.name CUST_NAME,tsdd.flag
		CUST_TYPE,fph.lease_code,tsdd1.flag platform_name,tsdd2.flag
		INDUSTRY_NAME,fph.PROVINCE_NAME,fph.city_name,fph.PRO_CODE
		from
		fil_project_head fph
		left join fil_cust_client fcc on
		fph.client_id=fcc.id
		LEFT JOIN T_SYS_AREA TSA ON FPH.AREA_ID=TSA.ID
		left join T_SYS_DATA_DICTIONARY tsdd on tsdd.type='客户类型' and
		fcc.type=tsdd.code
		left join T_SYS_SITE_DICTIONARY tsdd1 on
		tsdd1.type='业务类型' and fph.platform_type=tsdd1.code
		left join
		T_SYS_SITE_DICTIONARY tsdd2 on tsdd2.type='行业类型' and
		fph.INDUSTRY_FICATION=tsdd2.code
		where fph.ID=#{PROJECT_ID}
	</select>

	<select id="querySchemeInfo" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fps.lease_term,tsdd.flag
		period_name,fps.LEASE_TOPRIC,fps.START_PERCENT
		,fps.FINANCE_TOPRIC,tsdd1.flag PAY_WAY_NAME,fps.YEAR_INTEREST*100
		YEAR_INTEREST,fps.INTERNAL_RATE
		,fps.BAIL_PERCENT,fps.POUNDAGE_RATE,fps.COMPANY_PERCENT,fps.TOTAL_MONTH_PRICE,
		fps.FIRSTPAYALL,fps.INSURANCE_PERCENT,fps.DISCOUNT_MONEY,tsdd2.flag
		POUNDAGE_WAY_NAME
		,fps.FIRSTPAYDATE,fps.DISCOUNT_MONEY,fps.GDLX,fps.LEASE_TOPRIC,fps.FINANCE_TOPRIC,fps.TOTAL_MONTH_PRICE
		from fil_project_scheme fps
		left join T_SYS_DATA_DICTIONARY tsdd on
		tsdd.type='租赁周期' and fps.lease_period=tsdd.code
		left join
		T_SYS_DATA_DICTIONARY tsdd1 on tsdd1.type='支付方式' and
		fps.PAY_WAY=tsdd1.code
		left join T_SYS_DATA_DICTIONARY tsdd2 on
		tsdd2.type='保证金处理方式' and fps.POUNDAGE_WAY=tsdd2.code
		where
		fps.PROJECT_ID=#{PROJECT_ID} and fps.SCHEME_ROW_NUM=#{SCHEME_ROW_NUM}
	</select>

	<select id="querySchemeInfoClob" parameterType="java.util.Map"
		resultType="java.util.Map">
		select (
		select tsdd.flag from fil_scheme_clob fsc
		left join
		t_sys_data_dictionary tsdd on tsdd.type=fsc.key_name_zn and
		tsdd.code=fsc.value_str
		where fsc.scheme_id=fps.id and
		fsc.KEY_NAME_EN='ISTAX'
		) ISTAX--是否含税
		,(
		select tsdd.flag from
		fil_scheme_clob fsc
		left join t_sys_data_dictionary tsdd on
		tsdd.type=fsc.key_name_zn and
		tsdd.code=fsc.value_str
		where
		fsc.scheme_id=fps.id and fsc.KEY_NAME_EN='SFCELX'
		) SFCELX--差额利息处理方式
		,(
		select tsdd.flag from fil_scheme_clob fsc
		left join
		t_sys_data_dictionary tsdd on tsdd.type=fsc.key_name_zn and
		tsdd.code=fsc.value_str
		where fsc.scheme_id=fps.id and
		fsc.KEY_NAME_EN='INSURANCE_TYPE'
		)
		INSURANCE_TYPE--保险费收取方式
		,(
		select
		round(NVL(fsc.value_str,0),2) from fil_scheme_clob fsc
		where
		fsc.scheme_id=fps.id and fsc.KEY_NAME_EN='INSURANCE_MONEY'
		)
		INSURANCE_MONEY--保险费
		,(
		select round(NVL(fsc.value_str,0),2) from
		fil_scheme_clob fsc
		where fsc.scheme_id=fps.id and
		fsc.KEY_NAME_EN='LG_MONEY'
		) LG_MONEY--留购价
		,(
		select
		round(NVL(fsc.value_str,0),2) from fil_scheme_clob fsc
		where
		fsc.scheme_id=fps.id and fsc.KEY_NAME_EN='GPS_MONEY'
		)
		GPS_MONEY--GPS服务费
		,(
		select round(NVL(fsc.value_str,0),2) from
		fil_scheme_clob fsc
		where fsc.scheme_id=fps.id and
		fsc.KEY_NAME_EN='GLF_PRICE'
		) GLF_PRICE--管理费
		,(
		select
		round(NVL(fsc.value_str,0),2) from fil_scheme_clob fsc
		where
		fsc.scheme_id=fps.id and fsc.KEY_NAME_EN='QTFY_MONEY'
		)
		QTFY_MONEY--其他费用
		from fil_project_scheme fps
		where
		fps.PROJECT_ID=#{PROJECT_ID} and fps.SCHEME_ROW_NUM=#{SCHEME_ROW_NUM}
	</select>

	<select id="queryPayListByNotEq" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT FPH.LEASE_TOPRIC - nvl(FRPH.LEASE_TOPRIC, 0)
		LEASE_TOPRIC_SY
		FROM (SELECT nvl(SUM(LEASE_TOPRIC), 0) LEASE_TOPRIC,
		PROJECT_ID
		FROM FIL_RENT_PLAN_HEAD_BAS_MAX__V
		GROUP BY PROJECT_ID) FRPH,
		FIL_PROJECT_HEAD FPH
		WHERE FPH.ID = FRPH.PROJECT_ID(+)
		AND FPH.ID =
		#{PROJECT_ID}
	</select>

	<select id="queryPayListByQZINGEq" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fpe.pay_id from fil_project_equipment fpe
		left join
		fil_project_head fph on fph.id=fpe.project_id
		where fpe.STATUS=0 and
		fpe.QZAPP_STATUS=1 and fpe.paylist_code is null and
		fph.ID=#{PROJECT_ID}
		group by fpe.pay_id
	</select>

	<select id="queryPayListQZByEq" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fpe.pay_id,fpe.paylist_code,fph.id
		project_id,frph.version_code from fil_project_equipment fpe
		left join
		fil_project_head fph on fph.id=fpe.project_id
		left join
		fil_rent_plan_head frph on fpe.pay_id=frph.id
		where fpe.STATUS=0 and
		fpe.QZAPP_STATUS=1 and fpe.paylist_code is not null and
		fph.ID=#{PROJECT_ID}
		group by
		fph.id,fpe.pay_id,fpe.paylist_code,frph.version_code
	</select>

	<select id="queryPayListQZByEqNew" parameterType="java.util.Map"
		resultType="java.util.Map">
		select frph.id PAY_ID, frph.paylist_code, fph.id
		project_id, frph.version_code
		from fil_project_head fph
		left join
		fil_rent_plan_head frph on fph.id = frph.project_id
		where
		frph.paylist_code is not null
		and fph.ID = #{PROJECT_ID}
		group by
		fph.id, frph.id, frph.paylist_code, frph.version_code
	</select>

	<select id="queryPayNotBuyCreate" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fr.ID
		PAY_ID,fr.PAYLIST_CODE,to_char(fr.CREATE_DATE,'yyyy-MM-dd')
		CREATE_DATE ,fr.VERSION_CODE from fil_rent_plan_head_max_v fr
		where
		fr.VERSION_CODE>0 and fr.PROJECT_ID=#{PROJECT_ID}
		and fr.ID not in
		(select fbc.pay_id from fil_buy_contract fbc where
		fbc.pay_id is not
		null and fbc.PROJECT_ID=#{PROJECT_ID}) order by
		PAY_ID
	</select>

	<select id="queryPayNotInvoiceAppCreate" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fr.ID
		PAY_ID,fr.PAYLIST_CODE,to_char(fr.CREATE_DATE,'yyyy-MM-dd')
		CREATE_DATE ,fr.VERSION_CODE from fil_rent_plan_head_max_v fr
		where
		fr.VERSION_CODE>0 and fr.PROJECT_ID=#{PROJECT_ID}
		and fr.ID not in
		(select fbc.pay_id from fil_invoice_application fbc
		where fbc.pay_id is
		not null and fbc.PROJECT_ID=#{PROJECT_ID} )order
		by PAY_ID
	</select>

	<select id="queryPayListBuy" parameterType="java.util.Map"
		resultType="java.util.Map">
		select ID BUY_ID,PRODUCT_CODE,STATUS from fil_buy_contract
		fbc where fbc.project_id=#{PROJECT_ID}
	</select>

	<select id="queryInvoiceAppList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT * FROM FIL_INVOICE_APPLICATION WHERE
		PROJECT_ID=#{PROJECT_ID}
	</select>

	<select id="queryDXMPayList" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fr.ID PAY_ID,fr.PAYLIST_CODE,fph.id
		PROJECT_ID,fr.VERSION_CODE from
		fil_rent_plan_head_max_v fr
		left join
		fil_project_head fph on fr.PROJECT_ID=fph.id
		where
		fr.PROJECT_ID=#{PROJECT_ID} and fr.VERSION_CODE>0 order by fr.ID
	</select>
	<select id="getElectronicSignature" parameterType="map"
		resultType="map">
		SELECT TPM_SIGNATURE_LOGO,TPM_SEAL_SERVICE FROM
		T_PDFTEMPLATE_MAINTENANCE WHERE TPM_ID=#{TPM_ID}
	</select>

	<!-- modify by lishuo 23.11.2015 -->
	<select id="gethistoryContract" parameterType="map" resultType="map">
		SELECT ID,
		PATH,
		TO_CHAR(CREATE_TIME,'YYYY-MM-DD HH24:MI:SS')
		CREATE_TIME,
		NAME,
		contract_version
		FROM HISTORYCONTRACT_FILE WHERE
		PROJECT_ID=#{PROJECT_ID}
	</select>

	<!-- add by lishuo 23.11.2015 -->
	<select id="getContractVersion" parameterType="map" resultType="map">
		SELECT
		max(contract_version) contract_version
		FROM HISTORYCONTRACT_FILE
		WHERE PROJECT_ID=#{PROJECT_ID} AND
		NAME=#{FILE_NAME}
	</select>

	<insert id="changeVersionNum" parameterType="map">
		UPDATE
		HISTORYCONTRACT_FILE SET CONTRACT_VERSION =#{VERSION}
		WHERE
		PROJECT_ID=#{PROJECT_ID} AND NAME=#{FILE_NAME}
	</insert>

	<select id="queryContractTemplateList1" parameterType="map"
		resultType="map">
		SELECT DISTINCT TPM.TPM_ID,
		TPF.ID TEP_ID,
		TPM.TPM_TYPE
		FILE_NAME,
		TPF.PDF_PATH TEMPLATE_PATH
		FROM T_PDFTEMPLATE_MAINTENANCE
		TPM, T_PDFTEMPLATE_FILE TPF
		WHERE TPF.TPF_TPM_ID = TPM.TPM_ID
		AND
		TPF.STATUS = '启用'
		AND TPF.FILE_TYPE = 0
		AND tpm.TPM_TYPE=#{TPM_TYPE}
	</select>

	<select id="getOrgDataById" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT *
		FROM SECU_ORG SO
		START WITH ID = #{ORG_ID}
		CONNECT BY
		PRIOR PARENT_ID = ID

	</select>
	<select id="getOrgDataByIdMb" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT TEMPLATE_PERMISSIONS FROM(
		SELECT *
		FROM SECU_ORG SO
		START WITH ID = #{ORG_ID}
		CONNECT BY PRIOR PARENT_ID = ID)
		WHERE
		TEMPLATE_PERMISSIONS IS NOT NULL

	</select>
	<select id="selectContractSealInfoList" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT TPS.TPM_ID,TPS.SEAL_PATH,TPS.TPM_SEAL_SERVICE FROM
		T_PDFTEMPLATE_SEALINFO TPS WHERE TPS.TPM_ID=#{TPM_ID}
	</select>
</mapper>