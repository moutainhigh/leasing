<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="achangeb">
	<select id="doShowAchangeBApply" parameterType="map" resultType="map">
		SELECT TT.*
		FROM (SELECT T.*, ROWNUM RN
		FROM (SELECT FPH.SUP_SHORTNAME SUPPLIER_NAMES,
		FPH.ID PROJECT_ID,
		FPH.SUP_ID,
		FPH.PRO_CODE PROJECT_CODE,
		FCC.NAME CLIENT_NAME,
		FPH.COMPANY_NAME COMPANY_NAMES,
		FPH.PRODUCT_NAME PRODUCT_NAMES,
		FPH.ENGINE_TYPE ENGINE_TYPES,
		fph.WHOLE_ENGINE_CODE,
		FPH.LEASE_TERM,
		TO_CHAR(FPH.START_CONFIRM_DATE, 'YYYY-MM-DD') START_CONFIRM_DATE,
		TO_CHAR(fph.pro_end_date, 'YYYY-MM-DD') END_DATE,
		FPH.LEASE_TOPRIC,
		FRPHV.MONEY_ALL ZUJINHEJI,
		FO.YQZJ,
		FO.YQQS,
		FRB.BEGINNING_NUM YFQS,
		FPH.LEASE_TERM - FRB.BEGINNING_NUM WFQS,
		FRB.BEGINNING_PAID,
		FPA.STATUS,
		FRBWS.BEGINNING_MONEY - FRB.BEGINNING_PAID WSZJ
		FROM FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
		(SELECT FO.PROJECT_ID,
		SUM(FO.RENT_RECE - FO.RENT_PAID) YQZJ,
		MAX(FO.PERIOD) - MIN(FO.PERIOD) + 1 YQQS
		FROM FI_OVERDUE FO
		WHERE FO.CREATE_DATE =
		TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'),
		'YYYY-MM-DD')
		GROUP BY FO.PROJECT_ID) FO
		RIGHT JOIN FIL_PROJECT_HEAD FPH
		ON FPH.ID = FO.PROJECT_ID
		LEFT JOIN FIL_PROJECT_ATOB FPA
		ON FPH.ID = FPA.PROJECT_ID
		LEFT JOIN (SELECT F.PROJECT_ID,
		SUM(F.BEGINNING_MONEY) BEGINNING_MONEY
		FROM FI_R_BEGINNING F
		WHERE F.BEGINNING_NUM >= 1
		GROUP BY F.PROJECT_ID) FRBWS
		ON FPH.ID = FRBWS.PROJECT_ID
		LEFT JOIN (SELECT F.PROJECT_ID,
		SUM(F.BEGINNING_PAID) BEGINNING_PAID,
		MAX(F.BEGINNING_NUM) BEGINNING_NUM
		FROM FI_R_BEGINNING F
		WHERE F.BEGINNING_PAID >= 0.01
		AND F.BEGINNING_NUM >= 1
		GROUP BY F.PROJECT_ID) FRB
		ON FPH.ID = FRB.PROJECT_ID, FIL_CUST_CLIENT FCC
		WHERE NOT EXISTS (SELECT FPA.PROJECT_ID
		FROM FIL_PROJECT_ATOB FPA
		WHERE FPA.PROJECT_ID = FPH.ID
		AND FPA.STATUS = 0)
		AND FRPHV.PROJECT_ID = FPH.ID
		AND FPH.CLIENT_ID = FCC.ID
		AND FPH.STATUS >= 20
		<if test="SUPPLIER_NAMES!=null and SUPPLIER_NAMES!=''">AND FPH.SUP_SHORTNAME LIKE '%'||#{SUPPLIER_NAMES}||'%'
		</if>
		<if test="PROJECT_CODE!=null and PROJECT_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PROJECT_CODE}||'%'</if>
		<if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
		<if test="COMPANY_NAMES!=null and COMPANY_NAMES!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAMES}||'%'</if>
		<if test="PRODUCT_NAMES!=null and PRODUCT_NAMES!=''">AND FPH.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAMES}||'%'</if>
		<if test="SUP_ID!=null and SUP_ID!=''">AND FPH.SUP_ID IN (${SUP_ID})</if>
		<if test="START_CONFIRM_DATE_START!=null and START_CONFIRM_DATE_START!=''">AND
			FPH.START_CONFIRM_DATE>=TO_DATE(#{START_CONFIRM_DATE_START},'YYYY-MM-DD')
		</if>
		<if test="START_CONFIRM_DATE_END!=null and START_CONFIRM_DATE_END!=''">AND <![CDATA[FPH.START_CONFIRM_DATE<=TO_DATE(#{START_CONFIRM_DATE_END},'YYYY-MM-DD')]]></if>
		<if test="END_DATE_START!=null and END_DATE_START!=''">AND
			FPH.PRO_END_DATE>=TO_DATE(#{END_DATE_START},'YYYY-MM-DD')</if>
		<if test="END_DATE_END!=null and END_DATE_END!=''">AND <![CDATA[FPH.PRO_END_DATE<=TO_DATE(#{END_DATE_END},'YYYY-MM-DD')]]></if>
		ORDER BY FPH.PRO_CODE
		) T
		<where>
			<if test="OVER_TERM!=null and OVER_TERM!=''">T.YQQS=#{OVER_TERM}</if>
			<if test="PAGE_END!=null and PAGE_END!=''">AND <![CDATA[ROWNUM<=#{PAGE_END}]]></if>
		</where>
		) TT
		<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">WHERE TT.RN >= #{PAGE_BEGIN}</if>
	</select>

	<select id="doShowAchangeBApplyCount" parameterType="map"
		resultType="int">
		SELECT count(1)
		FROM FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
		(SELECT FO.PROJECT_ID,
		SUM(FO.RENT_RECE - FO.RENT_PAID) YQZJ,
		MAX(FO.PERIOD) - MIN(FO.PERIOD) + 1 YQQS
		FROM FI_OVERDUE FO
		WHERE FO.CREATE_DATE =
		TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'),
		'YYYY-MM-DD')
		GROUP BY FO.PROJECT_ID) FO
		RIGHT JOIN FIL_PROJECT_HEAD FPH
		ON FPH.ID = FO.PROJECT_ID,
		FIL_CUST_CLIENT FCC
		WHERE NOT EXISTS (SELECT FPA.PROJECT_ID
		FROM FIL_PROJECT_ATOB FPA
		WHERE FPA.PROJECT_ID = FPH.ID
		AND FPA.STATUS = 0)
		AND FRPHV.PROJECT_ID = FPH.ID
		AND FPH.CLIENT_ID = FCC.ID
		AND FPH.STATUS >= 20
		<if test="SUPPLIER_NAMES!=null and SUPPLIER_NAMES!=''">AND FPH.SUP_SHORTNAME LIKE '%'||#{SUPPLIER_NAMES}||'%'
		</if>
		<if test="PROJECT_CODE!=null and PROJECT_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PROJECT_CODE}||'%'</if>
		<if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
		<if test="COMPANY_NAMES!=null and COMPANY_NAMES!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAMES}||'%'</if>
		<if test="PRODUCT_NAMES!=null and PRODUCT_NAMES!=''">AND FPH.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAMES}||'%'</if>
		<if test="SUP_ID!=null and SUP_ID!=''">AND FPH.SUP_ID IN (${SUP_ID})</if>
		<if test="START_CONFIRM_DATE_START!=null and START_CONFIRM_DATE_START!=''">AND
			FPH.START_CONFIRM_DATE>=TO_DATE(#{START_CONFIRM_DATE_START},'YYYY-MM-DD')
		</if>
		<if test="START_CONFIRM_DATE_END!=null and START_CONFIRM_DATE_END!=''">AND <![CDATA[FPH.START_CONFIRM_DATE<=TO_DATE(#{START_CONFIRM_DATE_END},'YYYY-MM-DD')]]></if>
		<if test="END_DATE_START!=null and END_DATE_START!=''">AND
			FPH.PRO_END_DATE>=TO_DATE(#{END_DATE_START},'YYYY-MM-DD')</if>
		<if test="END_DATE_END!=null and END_DATE_END!=''">AND <![CDATA[FPH.PRO_END_DATE<=TO_DATE(#{END_DATE_END},'YYYY-MM-DD')]]></if>
		<if test="OVER_TERM!=null and OVER_TERM!=''">
			AND T.YQQS=#{OVER_TERM}
       </if>

	</select>

	<select id="doShowClientInfo" parameterType="map" resultType="map">
		SELECT FCC.ID, FCC.NAME, FCC.CUST_ID
		FROM FIL_CUST_CLIENT FCC
		<if test="SUP_ID!=null and SUP_ID!=''">
			WHERE FCC.SUPP_ID=#{SUP_ID}
	  </if>
	</select>

	<select id="doShowAChangeB" parameterType="map" resultType="map">
		SELECT T.* FROM (SELECT FPH.ID PROJECT_ID,FPH.PRO_CODE PROJECT_CODE,
		FCC.NAME CLIENT_NAME,
		FPH.SUP_SHORTNAME SUPPLIER_NAME,
		FPH.COMPANY_NAME,
		FPH.EQUIPMENINFOS,
		FPH.LEASE_TOPRIC,
		FPH.LEASE_TERM,
		TO_CHAR(FPA.CREATE_DATE, 'YYYY-MM-DD') APPLY_DATE,
		FPS.VALUE_STR START_PERCENT,
		M.ZUJIN,
		M.TOTAL,
		FPA.STATUS,
		ROWNUM RN
		FROM FIL_PROJECT_ATOB FPA,
		FIL_PROJECT_HEAD FPH,
		FIL_CUST_CLIENT FCC,
		FIL_PROJECT_SCHEME FPS,
		(SELECT FRPH.PROJECT_ID,
		MAX(DECODE(FRPD.ITEM_NAME, #{PMT}, FRPD.ITEM_MONEY)) ZUJIN,
		SUM(FRPD.ITEM_MONEY) TOTAL
		FROM FIL_RENT_PLAN_DETAIL FRPD, FIL_RENT_PLAN_HEAD_MAX_V FRPH
		WHERE FRPD.PAY_ID = FRPH.ID
		AND FRPD.ITEM_NAME IN (#{START_MONEY},
		#{BZJ},
		#{BXF},
		#{DBF},
		#{SXF},
		#{LGJ},
		#{PMT})
		AND (FRPD.PERIOD_NUM IS NULL OR FRPD.PERIOD_NUM = 1)
		GROUP BY FRPH.PROJECT_ID) M
		WHERE FPA.PROJECT_ID = FPH.ID
		AND FPA.PROJECT_ID = FPS.PROJECT_ID
		AND FPA.PROJECT_ID = M.PROJECT_ID
		AND FPS.KEY_NAME_EN = 'START_PERCENT'
		AND FPH.CLIENT_ID = FCC.ID
		<if test="SUPPLIER_NAME!=null and SUPPLIER_NAME!=''">AND FPH.SUP_SHORTNAME LIKE '%'||#{SUPPLIER_NAME}||'%'</if>
		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
		<if test="PROJECT_CODE!=null and PROJECT_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PROJECT_CODE}||'%'</if>
		<if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
		<if test="EQUIPMENINFOS!=null and EQUIPMENINFOS!=''">AND FPH.EQUIPMENINFOS LIKE '%'||#{EQUIPMENINFOS}||'%'</if>
		<if test="SUPPLIER_NAMES!=null and SUPPLIER_NAMES!=''">AND FPH.SUP_SHORTNAME LIKE '%'||#{SUPPLIER_NAMES}||'%'
		</if>
		<if test="EQ_TYPE!=null and EQ_TYPE!=''">AND FPH.EQUIPMENINFOS LIKE '%'||#{EQ_TYPE}||'%'</if>
		<if test="APPLY_DATE_BEGIN!=null and APPLY_DATE_BEGIN!=''">AND <![CDATA[FPA.CREATE_DATE>=TO_DATE(#{APPLY_DATE_BEGIN},'YYYY-MM-DD')]]></if>
		<if test="APPLY_DATE_END!=null and APPLY_DATE_END!=''">AND <![CDATA[FPA.CREATE_DATE<=TO_DATE(#{APPLY_DATE_END},'YYYY-MM-DD')]]></if>
		<if test="SUP_ID!=null and SUP_ID!=''">AND FPH.SUP_ID IN (${SUP_ID})</if>
		) T
		<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">WHERE T.RN BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}</if>
	</select>
	<select id="doShowAChangeBCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (SELECT FPH.PRO_CODE PROJECT_CODE,
		FCC.NAME CLIENT_NAME,
		FPH.SUP_SHORTNAME SUPPLIER_NAME,
		FPH.COMPANY_NAME,
		FPH.EQUIPMENINFOS,
		FPH.LEASE_TOPRIC,
		FPH.LEASE_TERM,
		TO_CHAR(FPA.CREATE_DATE, 'YYYY-MM-DD') APPLY_DATE,
		FPS.VALUE_STR START_PERCENT,
		M.ZUJIN,
		M.TOTAL,
		ROWNUM RN
		FROM FIL_PROJECT_ATOB FPA,
		FIL_PROJECT_HEAD FPH,
		FIL_CUST_CLIENT FCC,
		FIL_PROJECT_SCHEME FPS,
		(SELECT FRPH.PROJECT_ID,
		MAX(DECODE(FRPD.ITEM_NAME, #{PMT}, FRPD.ITEM_MONEY)) ZUJIN,
		SUM(FRPD.ITEM_MONEY) TOTAL
		FROM FIL_RENT_PLAN_DETAIL FRPD, FIL_RENT_PLAN_HEAD_MAX_V FRPH
		WHERE FRPD.PAY_ID = FRPH.ID
		AND FRPD.ITEM_NAME IN (#{START_MONEY},
		#{BZJ},
		#{BXF},
		#{DBF},
		#{SXF},
		#{LGJ},
		#{PMT})
		AND (FRPD.PERIOD_NUM IS NULL OR FRPD.PERIOD_NUM = 1)
		GROUP BY FRPH.PROJECT_ID) M
		WHERE FPA.PROJECT_ID = FPH.ID
		AND FPA.PROJECT_ID = FPS.PROJECT_ID
		AND FPA.PROJECT_ID = M.PROJECT_ID
		AND FPS.KEY_NAME_EN = 'START_PERCENT'
		AND FPH.CLIENT_ID = FCC.ID
		<if test="SUPPLIER_NAME!=null and SUPPLIER_NAME!=''">AND FPH.SUP_SHORTNAME LIKE '%'||#{SUPPLIER_NAME}||'%'</if>
		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
		<if test="PROJECT_CODE!=null and PROJECT_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PROJECT_CODE}||'%'</if>
		<if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
		<if test="EQUIPMENINFOS!=null and EQUIPMENINFOS!=''">AND FPH.EQUIPMENINFOS LIKE '%'||#{EQUIPMENINFOS}||'%'</if>
		<if test="SUPPLIER_NAMES!=null and SUPPLIER_NAMES!=''">AND FPH.SUP_SHORTNAME LIKE '%'||#{SUPPLIER_NAMES}||'%'
		</if>
		<if test="EQ_TYPE!=null and EQ_TYPE!=''">AND FPH.EQUIPMENINFOS LIKE '%'||#{EQ_TYPE}||'%'</if>
		<if test="SUP_ID!=null and SUP_ID!=''">AND FPH.SUP_ID IN (${SUP_ID})</if>
		<if test="APPLY_DATE_BEGIN!=null and APPLY_DATE_BEGIN!=''">AND <![CDATA[FPA.CREATE_DATE>=TO_DATE(#{APPLY_DATE_BEGIN},'YYYY-MM-DD')]]></if>
		<if test="APPLY_DATE_END!=null and APPLY_DATE_END!=''">AND <![CDATA[FPA.CREATE_DATE<=TO_DATE(#{APPLY_DATE_END},'YYYY-MM-DD')]]></if>
		) T
	</select>

	<insert id="doAddAtoB" parameterType="map">
		INSERT INTO
		FIL_PROJECT_ATOB(
		ID,
		PROJECT_ID,
		SUP_ID,
		OLD_CLIENT_ID,
		NEW_CLIENT_ID,
		CLIENT_TYPE,
		CHANGE_DATE,
		TOTAL_RENT,
		LEFT_RENT,
		LGJK_AMT,
		A_PAID_RENT_COUNT,
		CREATE_CODE,
		OPEN_BANK_CODE,
		OPEN_BANK_NAME,
		OPEN_BANK_ACCOUNT,
		PAYLIST_CODE,
		CLIENT_CODE,
		OPEN_ACCOUNT_NAME,
		CREATE_DATE
		)VALUES(
		#{AB_ID},
		#{PROJECT_ID,jdbcType=VARCHAR},
		#{SUP_ID,jdbcType=VARCHAR},
		#{OLD_CLIENT_ID,jdbcType=VARCHAR},
		#{NEW_CLIENT_ID,jdbcType=VARCHAR},
		#{CLIENT_TYPE,jdbcType=VARCHAR},
		#{CHANGE_DATE,jdbcType=VARCHAR},
		#{TOTAL_RENT,jdbcType=VARCHAR},
		#{LEFT_RENT,jdbcType=VARCHAR},
		#{LGJK_AMT,jdbcType=VARCHAR},
		#{A_PAID_RENT_COUNT,jdbcType=VARCHAR},
		#{CREATE_CODE,jdbcType=VARCHAR},
		#{OPEN_BANK_CODE,jdbcType=VARCHAR},
		#{OPEN_BANK_NAME,jdbcType=VARCHAR},
		#{OPEN_BANK_ACCOUNT,jdbcType=VARCHAR},
		#{PAYLIST_CODE,jdbcType=VARCHAR},
		#{CLIENT_CODE,jdbcType=VARCHAR},
		#{OPEN_ACCOUNT_NAME,jdbcType=VARCHAR},
		SYSDATE
		)
	</insert>
	<update id="updateAchangeB" parameterType="map">
		UPDATE FIL_PROJECT_ATOB F
		SET STATUS='1'
		,CHANGE_DATE=SYSDATE
		<if test="ZUJINHEJI!=null">,TOTAL_RENT=#{ZUJINHEJI}</if>
		<if test="LEFT_RENT!=null">,LEFT_RENT=#{LEFT_RENT}</if>
		<if test="LGJK!=null">,LGJK_AMT=#{LGJK}</if>
		<if test="A_PAID_RENT_COUNT!=null">,A_PAID_RENT_COUNT=#{A_PAID_RENT_COUNT}</if>
		<if test="LEFT_INTEREST!=null">,LEFT_INTEREST=#{LEFT_INTEREST}</if>
		WHERE ID=#{AB_ID}
	</update>
	<update id="updateClient" parameterType="map">
		UPDATE FIL_PROJECT_HEAD F SET F.CLIENT_ID=#{NEW_CLIENT_ID},
		F.INVOICE_TARGET_ID=#{NEW_CLIENT_ID},
		F.BANK_ID =
		(SELECT FC.ID
		FROM FIL_CUST_OPENINGBANK FC
		WHERE FC.CLIENT_ID = #{NEW_CLIENT_ID}
		AND FC.BANK_ACCOUNT =
		(SELECT AB.OPEN_BANK_ACCOUNT
		FROM FIL_PROJECT_ATOB AB
		WHERE AB.ID = #{AB_ID}))
		WHERE F.ID=#{PROJECT_ID}
	</update>

	<update id="updateInvoiceTargetId" parameterType="map">
		UPDATE
		FIL_PROJECT_HEAD F SET F.INVOICE_TARGET_ID=#{NEW_CLIENT_ID} WHERE
		F.ID=#{PROJECT_ID} AND F.INVOICE_TARGET_TYPE=1
	</update>

	<select id="doShowMoneyAtoB" parameterType="map" resultType="map">
		SELECT FRPH.PROJECT_ID,
		NVL(FRPH.MONEY_ALL, 0) ZUJINHEJI,--租金合计
		FRB.BEGINNING_NUM A_PAID_RENT_COUNT,--A支付期数
		WSLX.BEGINNING_MONEY LEFT_INTEREST,--剩余利息
		FRB.BEGINNING_PAID A_PAID_RENT,--A支付租金
		LGJ.BEGINNING_MONEY LGJK,--留购价款
		NVL(FRBWS.BEGINNING_MONEY, 0) - NVL(FRB.BEGINNING_PAID, 0) LEFT_RENT--剩余租金
		FROM FIL_RENT_PLAN_HEAD_MAX_V FRPH
		LEFT JOIN (SELECT F.PROJECT_ID,
		MAX(F.BEGINNING_NUM) BEGINNING_NUM,
		SUM(F.BEGINNING_MONEY) BEGINNING_MONEY
		FROM FI_R_BEGINNING F
		WHERE F.BEGINNING_NUM >= 1
		GROUP BY F.PROJECT_ID) FRBWS
		ON FRPH.PROJECT_ID = FRBWS.PROJECT_ID
		LEFT JOIN (SELECT F.PROJECT_ID,
		SUM(F.BEGINNING_PAID) BEGINNING_PAID,
		MAX(F.BEGINNING_NUM) BEGINNING_NUM
		FROM FI_R_BEGINNING F
		WHERE F.BEGINNING_PAID >= 0.01
		AND F.BEGINNING_NUM >= 1
		GROUP BY F.PROJECT_ID) FRB
		ON FRPH.PROJECT_ID = FRB.PROJECT_ID
		LEFT JOIN (SELECT F.PROJECT_ID, SUM(F.BEGINNING_MONEY) BEGINNING_MONEY
		FROM FI_R_BEGINNING F
		WHERE F.BEGINNING_NAME = '利息'
		AND F.BEGINNING_PAID = 0
		GROUP BY F.PROJECT_ID) WSLX
		ON FRPH.PROJECT_ID = WSLX.PROJECT_ID
		LEFT JOIN (SELECT F.PROJECT_ID, F.BEGINNING_MONEY
		FROM FI_R_BEGINNING F
		WHERE F.BEGINNING_NAME = '留购价款') LGJ
		ON FRPH.PROJECT_ID = LGJ.PROJECT_ID
		WHERE FRPH.PROJECT_ID=#{PROJECT_ID}
	</select>

	<select id="queryBclientInfo" parameterType="map" resultType="map">
		SELECT * FROM (SELECT FPA.ID B_ID,
		NEW_CLIENT_ID NEW_CLIENT_ID_B,
		FCC.NAME CLIENT_NAME_B,
		FPA.CLIENT_TYPE CLIENT_TYPE_B,
		OPEN_BANK_CODE OPEN_BANK_CODE_B,
		NEW_CLIENT_ID || ':' || CLIENT_CODE BCLIENT,
		OPEN_BANK_NAME OPEN_BANK_NAME_B,
		OPEN_BANK_ACCOUNT OPEN_BANK_ACCOUNT_B,
		CLIENT_CODE CLIENT_CODE_B,
		OPEN_ACCOUNT_NAME OPEN_ACCOUNT_NAME_B
		FROM FIL_PROJECT_ATOB FPA,FIL_CUST_CLIENT FCC WHERE
		FPA.NEW_CLIENT_ID=FCC.ID AND
		FPA.PROJECT_ID=#{PROJECT_ID}
		AND FPA.STATUS=#{STATUS}
		ORDER BY FPA.ID DESC)
		WHERE ROWNUM=1
	</select>

	<update id="doUpdateAtoB" parameterType="map">
		UPDATE FIL_PROJECT_ATOB SET
		ID=#{B_ID}
		<if test="OLD_CLIENT_ID!=null">,OLD_CLIENT_ID=#{OLD_CLIENT_ID}</if>
		<if test="NEW_CLIENT_ID!=null">,NEW_CLIENT_ID=#{NEW_CLIENT_ID}</if>
		<if test="CLIENT_TYPE!=null">,CLIENT_TYPE=#{CLIENT_TYPE}</if>
		<if test="OPEN_BANK_CODE!=null">,OPEN_BANK_CODE=#{OPEN_BANK_CODE}</if>
		<if test="OPEN_BANK_NAME!=null">,OPEN_BANK_NAME=#{OPEN_BANK_NAME}</if>
		<if test="OPEN_BANK_ACCOUNT!=null">,OPEN_BANK_ACCOUNT=#{OPEN_BANK_ACCOUNT}</if>
		<if test="PAYLIST_CODE!=null">,PAYLIST_CODE=#{PAYLIST_CODE}</if>
		<if test="CLIENT_CODE!=null">,CLIENT_CODE=#{CLIENT_CODE}</if>
		<if test="OPEN_ACCOUNT_NAME!=null">,OPEN_ACCOUNT_NAME=#{OPEN_ACCOUNT_NAME}</if>
		WHERE
		ID=#{B_ID}
	</update>

	<select id="queryAB_ID" parameterType="string" resultType="string">
		SELECT * FROM (SELECT F.ID AB_ID FROM FIL_PROJECT_ATOB F WHERE
		F.STATUS!=1 AND F.PROJECT_ID=#{PROJECT_ID} ORDER BY F.ID DESC) WHERE
		ROWNUM=1
	</select>

	<update id="doUpdateABStatus" parameterType="string">
		UPDATE
		FIL_PROJECT_ATOB SET STATUS='0' WHERE ID=#{AB_ID}
	</update>

	<update id="updateFundDetailInvoice" parameterType="map">
		UPDATE FI_FUND_DETAIL t
		SET t.INVOICE_TARGET_TYPE =1, t.INVOICE_TARGET_ID =#{NEW_CLIENT_ID}
		WHERE t.D_PROJECT_CODE = (SELECT FPH.PRO_CODE FROM FIL_PROJECT_HEAD FPH
		WHERE FPH.ID=#{PROJECT_ID} )
		AND t.D_PAY_PROJECT = '留购价款'
	</update>
</mapper>