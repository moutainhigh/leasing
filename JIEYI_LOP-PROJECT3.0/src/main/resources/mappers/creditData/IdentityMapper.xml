<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="IdentityMapper">

    <!-- 身份映射 -->
    <resultMap id="idMap" type="com.pqsoft.creditData.model.Identity">
        <result property="id" column="ID" jdbcType="INTEGER"/>
        <result property="fullName" column="FULL_NAME" jdbcType="VARCHAR"/>
        <result property="credentialType" column="CREDENTIAL_TYPE" jdbcType="VARCHAR"/>
        <result property="credentialNo" column="CREDENTIAL_NO" jdbcType="VARCHAR"/>
        <result property="gender" column="GENDER" jdbcType="VARCHAR"/>
        <result property="birthday" column="BIRTHDAY" jdbcType="VARCHAR"/>
        <result property="maritalStatus" column="MARITAL_STATUS" jdbcType="VARCHAR"/>
        <result property="highestEducation" column="HIGHEST_EDUCATION" jdbcType="VARCHAR"/>
        <result property="residencePhone" column="RESIDENCE_PHONE" jdbcType="VARCHAR"/>
        <result property="cellPhone" column="CELL_PHONE" jdbcType="VARCHAR"/>
        <result property="workingPhone" column="WORKING_PHONE" jdbcType="VARCHAR"/>
        <result property="email" column="EMAIL" jdbcType="VARCHAR"/>
        <result property="mailingProvince" column="MAILING_PROVINCE" jdbcType="VARCHAR"/>
        <result property="mailingCity" column="MAILING_CITY" jdbcType="VARCHAR"/>
        <result property="mailingCounty" column="MAILING_COUNTY" jdbcType="VARCHAR"/>
        <result property="mailingAddress" column="MAILING_ADDRESS" jdbcType="VARCHAR"/>
        <result property="mailingAddressZipCode" column="MAILING_ADDRESS_ZIP_CODE" jdbcType="VARCHAR"/>
        <result property="householdRegisterAddress" column="HOUSEHOLD_REGISTER_ADDRESS" jdbcType="VARCHAR"/>
        <result property="spouseName" column="SPOUSE_NAME" jdbcType="VARCHAR"/>
        <result property="spouseCredentialNo" column="SPOUSE_CREDENTIAL_NO" jdbcType="VARCHAR"/>
        <result property="spouseWorkingPlace" column="SPOUSE_WORKING_PLACE" jdbcType="VARCHAR"/>
        <result property="spousePhone" column="SPOUSE_PHONE" jdbcType="VARCHAR"/>
        <collection property="contactList" select="selectContactListByClientId" column="ID"/>
    </resultMap>

    <select id="selectCreditIds" resultType="integer">
        select ID
        from (select t.*, rownum rn
            from (select distinct fcc.ID
                from FIL_CUST_CLIENT fcc
                left outer join FIL_PROJECT_HEAD fph
                on fcc.ID = fph.CLIENT_ID
                left outer join fil_rent_plan_head_bas_max__v v
                on fph.ID = v.PROJECT_ID
                where fph.SIGNED_DATE is not null and v.START_DATE is not null and fph.status >= 20) t
                <where>
                    <if test="pageEnd != null">
                        rownum <![CDATA[<=]]> #{pageEnd, jdbcType=INTEGER}
                    </if>
                </where>)
        <where>
            <if test="pageStart != null">
                rn > #{pageStart, jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <!-- 查找身份信息 -->
    <select id="extractIdentity" parameterType="integer" resultMap="idMap">
        select fcc.ID,
            fcc.NAME FULL_NAME,  -- 姓名
            ct.VALUE CREDENTIAL_TYPE, -- 证件类型
            fcc.ID_CARD_NO CREDENTIAL_NO, -- 证件号
            cg.VALUE GENDER, -- 性别
            fcc.BIRTHDAY, -- 出生日期
            cm.VALUE MARITAL_STATUS, -- 婚姻状况
            ce.VALUE HIGHEST_EDUCATION, -- 最高学历
            fcc.PHONE RESIDENCE_PHONE, -- 住在电话
            fcc.TEL_PHONE CELL_PHONE, -- 手机号码
            ffn.TELEPHONE_UNIT WORK_PHONE, -- 单位电话
            ffn.DIANZIYOUXIANG EMAIL, -- 电子邮箱
            p.NAME MAILING_PROVINCE, -- 通讯省份
            ci.NAME MAILING_CITY, -- 通讯城市
            co.NAME MAILING_COUNTY, -- 通讯区县
            fcc.HOUSE_ADDRESS MAILING_ADDRESS, -- 通讯地址
            ffn.YOUZHENG MAILING_ADDRESS_ZIP_CODE, -- 通讯地址邮编
            ffn.HKSZD HOUSEHOLD_REGISTER_ADDRESS, -- 户籍地址
            fcs.NAME SPOUSE_NAME, -- 配偶姓名
            fcs.ID_CARD_NO SPOUSE_CREDENTIAL_NO, -- 配偶证件号码
            fcs.WORK_UNIT SPOUSE_WORKING_PLACE, -- 配偶工作单位
            fcs.TEL_PHONE SPOUSE_PHONE -- 配偶联系电话
        from FIL_CUST_CLIENT fcc -- fcc 客户基本信息
        left outer join T_CODE_ITEM ct
        on ct.REF_TYPE = '证件类型' and ct.REF_CODE = fcc.ID_CARD_TYPE -- ct 码表证件类型
        left outer join T_CODE_ITEM cg
        on cg.REF_TYPE = '性别' and cg.REF_CODE = fcc.SEX -- cg 码表性别
        left outer join T_CODE_ITEM cm
        on cm.REF_TYPE = '婚姻状况' and cm.REF_CODE = fcc.IS_MARRY -- cm 码表婚姻状况
        left outer join T_CODE_ITEM ce
        on ce.REF_TYPE = '文化程度' and ce.REF_CODE = fcc.DEGREE_EDU -- ce 码表最高学历
        left outer join T_SYS_AREA p
        on fcc.HOUSE_ADDRESS_PROVINCE = p.ID -- p 地址表省份
        left outer join T_SYS_AREA ci
        on fcc.HOUSE_ADDRESS_CITY = ci.ID -- ci 地址表城市
        left outer join T_SYS_AREA co
        on fcc.HOUSE_ADDRESS_COUNTY = co.ID -- co 地址表区县
        left outer join FCC_FK_NP ffn
        on fcc.ID = ffn.FK_ID -- ffn 客户拓展信息
        left outer join FIL_CUST_SPOUST fcs
        on fcc.ID = fcs.CLIENT_ID -- fcs 客户配偶信息
        where fcc.ID = #{id, jdbcType=INTEGER}
    </select>

    <!-- 根据客户id寻找联系人信息 -->
    <select id="selectContactListByClientId" parameterType="integer" resultType="com.pqsoft.creditData.model.Contact">
        select EMERGENCY_NAME NAME, --联系人姓名
            EMERGENCY_PHONE PHONE, --联系人电话
            EMERGENCY_RELATIONSHIP RELATIONSHIP --联系人与客户的关系
        from FIL_CUST_EMERGENCY_INFO
        where (EMERGENCY_NAME is not null or EMERGENCY_PHONE is not null or EMERGENCY_RELATIONSHIP is not null) and CLIENT_ID = #{id, jdbcType=INTEGER}
    </select>

    <insert id="insertBatch" parameterType="com.pqsoft.creditData.model.Identity">
        insert into t_credit_identity (ID, P2P_ORGAN_CODE, FULL_NAME, CREDENTIAL_TYPE, CREDENTIAL_NO, GENDER, BIRTHDAY, MARITAL_STATUS, HIGHEST_EDUCATION, HIGHEST_DEGREE,
        RESIDENCE_PHONE, CELL_PHONE, WORKING_PHONE, EMAIL, MAILING_ADDRESS, MAILING_ADDRESS_ZIP_CODE, HOUSEHOLD_REGISTER_ADDRESS, SPOUSE_NAME,
        SPOUSE_CREDENTIAL_TYPE, SPOUSE_CREDENTIAL_NO, SPOUSE_WORKING_PLACE, SPOUSE_PHONE, FIRST_CONTACT_NAME, FIRST_CONTACT_RELATIONSHIP,
        FIRST_CONTACT_PHONE, SECOND_CONTACT_NAME, SECOND_CONTACT_RELATIONSHIP, SECOND_CONTACT_PHONE, GENERATED_FILE_NAME, FORMER_ROW_NO)
        <foreach collection="list" open="(" close=")" separator=" union all " item="identity">
          select
            #{identity.id, jdbcType=VARCHAR}, #{identity.P2POrganCode, jdbcType=VARCHAR}, #{identity.fullName, jdbcType=VARCHAR}, #{identity.credentialType, jdbcType=CHAR},
            #{identity.credentialNo, jdbcType=VARCHAR}, #{identity.gender, jdbcType=CHAR}, #{identity.birthday, jdbcType=CHAR}, #{identity.maritalStatus, jdbcType=CHAR},
            #{identity.highestEducation, jdbcType=CHAR}, #{identity.highestDegree, jdbcType=CHAR}, #{identity.residencePhone, jdbcType=VARCHAR},
            #{identity.cellPhone, jdbcType=VARCHAR}, #{identity.workingPhone, jdbcType=VARCHAR}, #{identity.email, jdbcType=VARCHAR}, #{identity.mailingAddress, jdbcType=VARCHAR},
            #{identity.mailingAddressZipCode, jdbcType=CHAR}, #{identity.householdRegisterAddress, jdbcType=VARCHAR}, #{identity.spouseName, jdbcType=VARCHAR},
            #{identity.spouseCredentialType, jdbcType=CHAR}, #{identity.spouseCredentialNo, jdbcType=VARCHAR}, #{identity.spouseWorkingPlace, jdbcType=VARCHAR},
            #{identity.spousePhone, jdbcType=VARCHAR}, #{identity.firstContactName, jdbcType=VARCHAR}, #{identity.firstContactRelationship, jdbcType=CHAR},
            #{identity.firstContactPhone, jdbcType=VARCHAR}, #{identity.secondContactName, jdbcType=VARCHAR}, #{identity.secondContactRelationship, jdbcType=CHAR},
            #{identity.secondContactPhone, jdbcType=VARCHAR}, #{identity.generatedFileName, jdbcType=VARCHAR}, #{identity.formerRowNo, jdbcType=VARCHAR}
          from dual
        </foreach>
    </insert>

    <update id="updateIdentityBatch" parameterType="map">
        update T_CREDIT_IDENTITY
        <set>
            <if test="uploadId != null">
                UPLOAD_ID = #{uploadId, jdbcType=DECIMAL}
            </if>
        </set>
        where GENERATED_FILE_NAME in
        <foreach collection="mergedFileNames" item="mergedFileName" open="(" close=")" separator=",">
            #{mergedFileName, jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="selectIdentity" parameterType="string" resultMap="idMap">
        select ID, P2P_ORGAN_CODE, FULL_NAME, CREDENTIAL_TYPE, CREDENTIAL_NO, GENDER, BIRTHDAY, MARITAL_STATUS, HIGHEST_EDUCATION, HIGHEST_DEGREE,
            RESIDENCE_PHONE, CELL_PHONE, WORKING_PHONE, EMAIL, MAILING_ADDRESS, MAILING_ADDRESS_ZIP_CODE, HOUSEHOLD_REGISTER_ADDRESS, SPOUSE_NAME,
            SPOUSE_CREDENTIAL_TYPE, SPOUSE_CREDENTIAL_NO, SPOUSE_WORKING_PLACE, SPOUSE_PHONE, FIRST_CONTACT_NAME, FIRST_CONTACT_RELATIONSHIP,
            FIRST_CONTACT_PHONE, SECOND_CONTACT_NAME, SECOND_CONTACT_RELATIONSHIP, SECOND_CONTACT_PHONE, GENERATED_FILE_NAME, FORMER_ROW_NO
        from T_CREDIT_IDENTITY
        where GENERATED_FILE_NAME = #{generateFileName, jdbcType=VARCHAR}
    </select>

    <update id="updateIdentity" parameterType="com.pqsoft.creditData.model.Identity">
        update T_CREDIT_IDENTITY
        <set>
            <if test="fullName != null">
                FULL_NAME = #{fullName , jdbcType=VARCHAR},
            </if>
            <if test="credentialType != null">
                CREDENTIAL_TYPE = #{credentialType , jdbcType=VARCHAR},
            </if>
            <if test="credentialNo != null">
                CREDENTIAL_NO = #{credentialNo , jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                GENDER = #{gender , jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                BIRTHDAY = #{birthday , jdbcType=VARCHAR},
            </if>
            <if test="maritalStatus != null">
                MARITAL_STATUS = #{maritalStatus , jdbcType=VARCHAR},
            </if>
            <if test="highestEducation != null">
                HIGHEST_EDUCATION = #{highestEducation , jdbcType=VARCHAR},
            </if>
            <if test="highestDegree != null">
                HIGHEST_DEGREE = #{highestDegree , jdbcType=VARCHAR},
            </if>
            <if test="residencePhone != null">
                RESIDENCE_PHONE = #{residencePhone , jdbcType=VARCHAR},
            </if>
            <if test="cellPhone != null">
                CELL_PHONE = #{cellPhone , jdbcType=VARCHAR},
            </if>
            <if test="workingPhone != null">
                WORKING_PHONE = #{workingPhone , jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                EMAIL = #{email , jdbcType=VARCHAR},
            </if>
            <if test="mailingAddress != null">
                MAILING_ADDRESS = #{mailingAddress , jdbcType=VARCHAR},
            </if>
            <if test="mailingAddressZipCode != null">
                MAILING_ADDRESS_ZIP_CODE = #{mailingAddressZipCode , jdbcType=VARCHAR},
            </if>
            <if test="householdRegisterAddress != null">
                HOUSEHOLD_REGISTER_ADDRESS = #{householdRegisterAddress , jdbcType=VARCHAR},
            </if>
            <if test="spouseName != null">
                SPOUSE_NAME = #{spouseName , jdbcType=VARCHAR},
            </if>
            <if test="spouseCredentialType != null">
                SPOUSE_CREDENTIAL_TYPE = #{spouseCredentialType , jdbcType=VARCHAR},
            </if>
            <if test="spouseCredentialNo != null">
                SPOUSE_CREDENTIAL_NO = #{spouseCredentialNo , jdbcType=VARCHAR},
            </if>
            <if test="spouseWorkingPlace != null">
                SPOUSE_WORKING_PLACE = #{spouseWorkingPlace , jdbcType=VARCHAR},
            </if>
            <if test="spousePhone != null">
                SPOUSE_PHONE = #{spousePhone , jdbcType=VARCHAR},
            </if>
            <if test="firstContactName != null">
                FIRST_CONTACT_NAME = #{firstContactName , jdbcType=VARCHAR},
            </if>
            <if test="firstContactRelationship != null">
                FIRST_CONTACT_RELATIONSHIP = #{firstContactRelationship , jdbcType=VARCHAR},
            </if>
            <if test="firstContactPhone != null">
                FIRST_CONTACT_PHONE = #{firstContactPhone , jdbcType=VARCHAR},
            </if>
            <if test="secondContactName != null">
                SECOND_CONTACT_NAME = #{secondContactName , jdbcType=VARCHAR},
            </if>
            <if test="secondContactRelationship != null">
                SECOND_CONTACT_RELATIONSHIP = #{secondContactRelationship , jdbcType=VARCHAR},
            </if>
            <if test="secondContactPhone != null">
                SECOND_CONTACT_PHONE = #{secondContactPhone , jdbcType=VARCHAR},
            </if>
        </set>
        where GENERATED_FILE_NAME = #{generatedFileName , jdbcType=VARCHAR}
    </update>

</mapper>
