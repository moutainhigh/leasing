<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="refinanceIntoBill">
<select id="getRefinIntoBillList" parameterType="Map" resultType="Map">
SELECT * FROM (
  SELECT EQ.INVOICE_ID,
         EQ.PRO_EQUIPMENT_ID,
         EQ.INVOICE_CODE,
         TO_CHAR(EQ.INVOICE_DATE,'YYYY-MM-DD') INVOICE_DATE,
         EQ.INVOICE_AMOUNT,
         EQ.INVOICE_TAX,
         EQ.LEGA_STATUS NUM_LEGA_STATUS,
         EQ.TAI_NUM,
         EQ.DRAWER,
         EQ.INVOICE_MEMO,
         (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE = EQ.LEGA_STATUS AND DIC.TYPE= #{DIC_LEGA}) LEGA_STATUS,
         getdictdatabycode('发票_状态',EQ.INVOICE_STATUS) INVOICE_STATUS,
         TO_CHAR(EQ.LEGA_TIME,'YYYY-MM-DD') LEGA_TIME,
         EQ.LEGA_USER ,
         ROWNUM ROWNO
    FROM FI_INVOICE_EQUIPMENT EQ  
   WHERE EQ.LEGA_STATUS !=2 
     AND EQ.TYPE = 1
     <if test="INVOICE_STATUS !=null and INVOICE_STATUS !=''">AND EQ.INVOICE_STATUS= #{INVOICE_STATUS}</if>
     <if test="LEGA_STATUS !=null and LEGA_STATUS !=''">AND EQ.LEGA_STATUS = #{LEGA_STATUS}</if>
     <if test="INVOICE_CODE !=null and INVOICE_CODE !=''">AND EQ.INVOICE_CODE = #{INVOICE_CODE}</if>
     <if test="INVOICE_DATE !=null and INVOICE_DATE !=''">AND EQ.INVOICE_DATE = TO_DATE(#{INVOICE_DATE},'YYYY-MM-DD')</if>
     AND <![CDATA[ROWNUM<= #{PAGE_END}]]>
  )W WHERE W.ROWNO >= #{PAGE_BEGIN}
</select>

<select id="getRefinIntoBillCount" parameterType="Map" resultType="Int">
SELECT COUNT(1)
    FROM FI_INVOICE_EQUIPMENT EQ  
   WHERE EQ.LEGA_STATUS !=2 
     AND EQ.TYPE = 1
     <if test="INVOICE_STATUS !=null and INVOICE_STATUS !=''">AND EQ.INVOICE_STATUS= #{INVOICE_STATUS}</if>
     <if test="LEGA_STATUS !=null and LEGA_STATUS !=''">AND EQ.LEGA_STATUS = #{LEGA_STATUS}</if>
     <if test="INVOICE_CODE !=null and INVOICE_CODE !=''">AND EQ.INVOICE_CODE = #{INVOICE_CODE}</if>
     <if test="INVOICE_DATE !=null and INVOICE_DATE !=''">AND EQ.INVOICE_DATE = TO_DATE(#{INVOICE_DATE},'YYYY-MM-DD')</if>
</select>

<insert id="addIntoBill" parameterType="Map">
 INSERT INTO FI_INVOICE_EQUIPMENT
  (
    INVOICE_ID
    ,INVOICE_CODE
    ,INVOICE_DATE
    ,INVOICE_AMOUNT
    ,INVOICE_TAX
    <if test="INVOICE_MEMO !=null and INVOICE_MEMO !=''">,INVOICE_MEMO</if>
    <if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID</if>
    <if test="SALES_UNIT_ID !=null and SALES_UNIT_ID !=''">,SALES_UNIT_ID</if>
    ,DRAWER
    ,CREATE_TIME
    ,CREATE_USER
    <if test="TAI_NUM !=null and TAI_NUM !=''">,TAI_NUM</if>
    ,INVOICE_STATUS
    <if test="PRO_EQUIPMENT_ID != null and PRO_EQUIPMENT_ID !=''">,PRO_EQUIPMENT_ID</if>
    ,LEGA_STATUS
    <if test="LEGA_TIME !=null and LEGA_TIME !=''">,LEGA_TIME</if>
    <if test="LEGA_USER !=null and LEGA_USER !=''">,LEGA_USER </if>
    <if test="TYPE !=null and TYPE !=''">,TYPE</if>
  )
  VALUES
  (
    SEQ_FI_INVOICE_EQUIPMENT.NEXTVAL
    ,#{INVOICE_CODE}
    ,TO_DATE(#{INVOICE_DATE},'YYYY-MM-DD')
    ,#{INVOICE_AMOUNT}
    ,#{INVOICE_TAX}
    <if test="INVOICE_MEMO !=null and INVOICE_MEMO !=''">,#{INVOICE_MEMO}</if>
    <if test="PROJECT_ID !=null and PROJECT_ID">,#{PROJECT_ID}</if>
    <if test="SALES_UNIT_ID !=null and SALES_UNIT_ID !=''">,#{SALES_UNIT_ID}</if>
    ,#{DRAWER}
    ,SYSDATE
    ,#{CREATE_USER}
    <if test="TAI_NUM !=null and TAI_NUM !=''">,#{TAI_NUM}</if>
    ,1
    <if test="PRO_EQUIPMENT_ID != null and PRO_EQUIPMENT_ID !=''">,#{PRO_EQUIPMENT_ID}</if>
    ,0
    <if test="LEGA_TIME !=null and LEGA_TIME !=''">,TO_DATE(#{LEGA_TIME},'YYYY-MM-DD')</if>
    <if test="LEGA_USER !=null and LEGA_USER !=''">,#{LEGA_USER}</if>
    <if test="TYPE !=null and TYPE !=''">,#{TYPE}</if>
  )
</insert>

<update id="updateIntoBill" parameterType="Map">
 UPDATE FI_INVOICE_EQUIPMENT
	 SET INVOICE_ID = #{INVOICE_ID}
		<if test="INVOICE_CODE !=null and INVOICE_CODE !=''">,INVOICE_CODE = #{INVOICE_CODE}</if>
		<if test="INVOICE_DATE !=null and INVOICE_DATE !=''">,INVOICE_DATE = TO_DATE(#{INVOICE_DATE},'YYYY-MM-DD')</if>
		<if test="INVOICE_AMOUNT !=null and INVOICE_AMOUNT !=''">,INVOICE_AMOUNT = #{INVOICE_AMOUNT}</if>
		<if test="INVOICE_TAX !=null and INVOICE_TAX !=''">,INVOICE_TAX = #{INVOICE_TAX}</if>
		<if test="INVOICE_MEMO !=null and INVOICE_MEMO !=''">,INVOICE_MEMO = #{INVOICE_MEMO}</if>
		<if test="DRAWER !=null and DRAWER !=''">,DRAWER = #{DRAWER}</if>
		<if test="INVOICE_STATUS !=null and INVOICE_STATUS !=''">,INVOICE_STATUS = #{INVOICE_STATUS}</if>
		<if test="LEGA_STATUS !=null and LEGA_STATUS !=''">,LEGA_STATUS = #{LEGA_STATUS}</if>
		<if test="LEGA_TIME !=null and LEGA_TIME !=''">,LEGA_TIME = TO_DATE(#{LEGA_TIME},'YYYY-MM-DD')</if>
		<if test="LEGA_USER !=null and LEGA_USER !=''">,LEGA_USER = #{LEGA_USER}</if>
  WHERE INVOICE_ID = #{INVOICE_ID}
</update>

<delete id="delIntoBill" parameterType="Map">
  DELETE FROM FI_INVOICE_EQUIPMENT IE WHERE IE.INVOICE_ID = #{INVOICE_ID}
</delete>

<select id="getALlIntoBill" parameterType="Map" resultType="Map">
 SELECT EQ.INVOICE_ID,
         EQ.PRO_EQUIPMENT_ID,
         EQ.INVOICE_CODE,
         TO_CHAR(EQ.INVOICE_DATE,'YYYY-MM-DD') INVOICE_DATE,
         EQ.INVOICE_AMOUNT,
         EQ.INVOICE_TAX,
         EQ.LEGA_STATUS NUM_LEGA_STATUS,
         EQ.TAI_NUM,
         EQ.DRAWER,
         EQ.INVOICE_MEMO,
         (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE = EQ.LEGA_STATUS AND DIC.TYPE= #{DIC_LEGA}) LEGA_STATUS,
         getdictdatabycode('发票_状态',EQ.INVOICE_STATUS) INVOICE_STATUS,
         TO_CHAR(EQ.LEGA_TIME,'YYYY-MM-DD') LEGA_TIME,
         EQ.LEGA_USER 
    FROM FI_INVOICE_EQUIPMENT EQ  
   WHERE EQ.LEGA_STATUS !=2 
     AND EQ.TYPE = 1
     <if test="INVOICE_STATUS !=null and INVOICE_STATUS !=''">AND EQ.INVOICE_STATUS= #{INVOICE_STATUS}</if>
     <if test="LEGA_STATUS !=null and LEGA_STATUS !=''">AND EQ.LEGA_STATUS = #{LEGA_STATUS}</if>
     <if test="INVOICE_CODE !=null and INVOICE_CODE !=''">AND EQ.INVOICE_CODE = #{INVOICE_CODE}</if>
     <if test="INVOICE_DATE !=null and INVOICE_DATE !=''">AND EQ.INVOICE_DATE = TO_DATE(#{INVOICE_DATE},'YYYY-MM-DD')</if>
</select>
</mapper>