<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="refundLoan">
	<select id="toMgLoan" parameterType="Map" resultType="Map">
	SELECT TT.* FROM (SELECT T.* ,ROWNUM ROWNU FROM(
	SELECT T1.ID,
	       PROJECT_STATUS,
	       T1.PROJECT_NAME,
	       T1.PROJECT_CODE,
	       TRUNC(SYSDATE - T1.COMMIT_BANK) DATECOUNT,
	       TO_CHAR(T1.CREATE_TIME, 'YYYY-MM-DD') CREATE_TIME,
	       TO_CHAR(T1.COMMIT_BANK, 'YYYY-MM-DD') COMMIT_BANK,
	       T1.PAY_TOTAL,
	       T2.LOAN_AMOUNT,
	       (SELECT D.FLAG BAILOUTWAY_NAME
	          FROM T_SYS_DATA_DICTIONARY D
	         WHERE D.CODE = B.BAILOUTWAY_NAME
	           AND F.ID = B.JG_ID
	           AND D.TYPE = #{TYPE}) BAILOUTWAY_NAME,
	       F.ORGAN_NAME
	  FROM RE_REFINANCE_PROJECT T1
	  LEFT JOIN RE_REFINANCE_LOAN T2 ON T1.ID = T2.PROJECT_ID
	  LEFT JOIN RE_REFINANCE_BAILOUTWAY B ON T1.BAILOUTWAY_ID = B.ID
	  LEFT JOIN RE_REFINANCE_FHFA F ON B.JG_ID = F.ID
	 WHERE 1 = 1
	   <![CDATA[AND T1.PROJECT_STATUS >= 0]]>
	   AND T1.PROJECT_STATUS IS NOT NULL
	   <if test="PROJECT_STATUS !=null and PROJECT_STATUS !=''"> AND T1.PROJECT_STATUS = #{PROJECT_STATUS}</if>
	   <if test="PROJECT_NAME !=null and PROJECT_NAME !=''"> AND T1.PROJECT_NAME LIKE '%'||#{PROJECT_NAME}||'%'</if>
	   <if test="PROJECT_CODE !=null and PROJECT_CODE !=''"> AND T1.PROJECT_CODE LIKE '%'||#{PROJECT_CODE}||'%'</if>
	   <if test="CREATE_TIME !=null and CREATE_TIME !=''"> AND T1.CREATE_TIME = TO_DATE(#{CREATE_TIME},'YYYY-MM-DD')</if>
	   <if test="COMMIT_BANK !=null and COMMIT_BANK !=''"> AND T1.COMMIT_BANK = TO_DATE(#{COMMIT_BANK},'YYYY-MM-DD')</if>
	   <if test="PAY_TOTAL !=null and PAY_TOTAL !=''"> AND T1.PAY_TOTAL LIKE '%'||#{PAY_TOTAL}||'%'</if>
	   <if test="LOAN_AMOUNT !=null and LOAN_AMOUNT !=''"> AND T2.LOAN_AMOUNT LIKE '%'||#{LOAN_AMOUNT}||'%'</if>
	   <if test="ORGAN_NAME !=null and ORGAN_NAME !=''"> AND F.ORGAN_NAME LIKE '%'||#{ORGAN_NAME}||'%'</if>
	   <if test="PROJECT_ID !=null and PROJECT_ID !=''"> AND T1.ID = #{PROJECT_ID}</if>
	 order by T1.COMMIT_BANK)T)TT WHERE TT.ROWNU BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>
	
	<select id="toMgLoanCount" parameterType="Map" resultType="int">
	SELECT COUNT(1) FROM (SELECT T1.ID,
	       PROJECT_STATUS,
	       T1.PROJECT_NAME,
	       T1.PROJECT_CODE,
	       TRUNC(SYSDATE - T1.COMMIT_BANK) DATECOUNT,
	       TO_CHAR(T1.CREATE_TIME, 'YYYY-MM-DD') CREATE_TIME,
	       TO_CHAR(T1.COMMIT_BANK, 'YYYY-MM-DD') COMMIT_BANK,
	       T1.PAY_TOTAL,
	       T2.LOAN_AMOUNT,
	       (SELECT D.FLAG BAILOUTWAY_NAME
	          FROM T_SYS_DATA_DICTIONARY D
	         WHERE D.CODE = B.BAILOUTWAY_NAME
	           AND F.ID = B.JG_ID
	           AND D.TYPE = '再融资方式') BAILOUTWAY_NAME,
	       F.ORGAN_NAME,
	       ROWNUM R
	  FROM RE_REFINANCE_PROJECT T1
	  LEFT JOIN RE_REFINANCE_LOAN T2 ON T1.ID = T2.PROJECT_ID
	  LEFT JOIN RE_REFINANCE_BAILOUTWAY B ON T1.BAILOUTWAY_ID = B.ID
	  LEFT JOIN RE_REFINANCE_FHFA F ON B.JG_ID = F.ID
	 WHERE 1 = 1
	   <![CDATA[AND T1.PROJECT_STATUS >= 0]]>
	   AND T1.PROJECT_STATUS IS NOT NULL
	   <if test="PROJECT_STATUS !=null and PROJECT_STATUS !=''"> AND T1.PROJECT_STATUS = #{PROJECT_STATUS}</if>
	   <if test="PROJECT_NAME !=null and PROJECT_NAME !=''"> AND T1.PROJECT_NAME LIKE '%'||#{PROJECT_NAME}||'%'</if>
	   <if test="PROJECT_CODE !=null and PROJECT_CODE !=''"> AND T1.PROJECT_CODE LIKE '%'||#{PROJECT_CODE}||'%'</if>
	   <if test="CREATE_TIME !=null and CREATE_TIME !=''"> AND T1.CREATE_TIME = TO_DATE(#{CREATE_TIME},'YYYY-MM-DD')</if>
	   <if test="COMMIT_BANK !=null and COMMIT_BANK !=''"> AND T1.COMMIT_BANK = TO_DATE(#{COMMIT_BANK},'YYYY-MM-DD')</if>
	   <if test="PAY_TOTAL !=null and PAY_TOTAL !=''"> AND T1.PAY_TOTAL LIKE '%'||#{PAY_TOTAL}||'%'</if>
	   <if test="LOAN_AMOUNT !=null and LOAN_AMOUNT !=''"> AND T2.LOAN_AMOUNT LIKE '%'||#{LOAN_AMOUNT}||'%'</if>
	   <if test="ORGAN_NAME !=null and ORGAN_NAME !=''"> AND F.ORGAN_NAME LIKE '%'||#{ORGAN_NAME}||'%'</if>
	   <if test="PROJECT_ID !=null and PROJECT_ID !=''"> AND T1.ID = #{PROJECT_ID}</if>
	 order by T1.COMMIT_BANK)T
	</select>
	
	<select id="getPaytypeFromFhfa" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT T1.PAYMENT_TYPE AS REPAY_TYPE
		FROM RE_REFINANCE_FHFA T1,RE_REFINANCE_PROJECT T2,RE_REFINANCE_BAILOUTWAY T4
		WHERE T1.ID = T4.JG_ID  AND T4.ID = T2.BAILOUTWAY_ID AND T2.ID = #{PROJECT_ID} AND ROWNUM = 1
	</select>
	
	<select id="getPaytypeName" parameterType="java.util.Map" resultType="java.util.Map" >
	    SELECT D.FLAG,D.CODE
        FROM T_SYS_DATA_DICTIONARY D
        WHERE D.CODE IN(${REPAY_TYPE})
        AND D.TYPE = #{type}
	</select>
	
	<select id="getProject" parameterType="map" resultType="map">
		SELECT TRP.ID,
	       TRP.PROJECT_NAME,
	       TRP.PROJECT_CODE,
	       NVL(TRP.BAILOUTWAY_NSFR, TRB.BAILOUTWAY_NSFR) BAILOUTWAY_NSFR,
	       NVL(TRP.FINANCING_BASE, TRB.FINANCING_BASE) FINANCING_BASE,
	       NVL(TRP.POUNDAGE_SCALE, TRB.POUNDAGE_SCALE) POUNDAGE_SCALE,
	       NVL(round(TRP.PAY_TOTAL * NVL(TRP.POUNDAGE_SCALE, TRB.POUNDAGE_SCALE) / 100,
	             2),0) POUNDAGE_MONEY,
	       NVL(TRP.PREMIUM_SCALE, TRB.PREMIUM_SCALE) PREMIUM_SCALE,
	       NVL(round(TRP.PAY_TOTAL * NVL(TRP.PREMIUM_SCALE, TRB.PREMIUM_SCALE) / 100,
	             2),0) PREMIUM_MONEY,
	       NVL(TRP.MARGIN_SCALE, TRB.MARGIN_SCALE) MARGIN_SCALE,
	       NVL(round(TRP.PAY_TOTAL * NVL(TRP.MARGIN_SCALE, TRB.MARGIN_SCALE) / 100,
	             2),0) MARGIN_MONEY,
	       NVL(TRP.RATE_TYPE, TRB.RATE_TYPE) RATE_TYPE,
	       NVL(TRP.RATE_SCALE, TRB.RATE_SCALE) RATE_SCALE,
	       NVL(TRP.REST_SCALE, TRB.REST_SCALE) REST_SCALE,
	       NVL(round(TRP.PAY_TOTAL * NVL(TRP.REST_SCALE, TRB.REST_SCALE) / 100, 2),0) REST_MONEY,
	       NVL(round(TRP.PAY_TOTAL * NVL(TRP.BAILOUTWAY_NSFR, TRB.BAILOUTWAY_NSFR) / 100,
	             2),0) RZE
	  FROM RE_REFINANCE_PROJECT TRP, RE_REFINANCE_BAILOUTWAY TRB
	 WHERE TRP.BAILOUTWAY_ID = TRB.ID(+)
	   AND TRP.ID = #{PROJECT_ID}
	</select>
	
	<insert id="addLoan" parameterType="java.util.Map" >
		INSERT INTO RE_REFINANCE_LOAN(
								ID,
								PROJECT_ID,								
								EXPECT_TIME,
								COST_TOTAL,
								DEDUCT_ACCOUNT
								)
	 	 				VALUES(SEQ_REFINANCE_LOAN.nextval,
	 	 					   #{PROJECT_ID},	 	 					  
	 	 					   TO_DATE(#{EXPECT_TIME},'yyyy-MM-dd'),
	 	 					   #{COST_TOTAL}, 
	 	 					   #{DEDUCT_ACCOUNT}
	 	 					   )
	</insert>	
	
	<update id="updateProjectStatus" parameterType="java.util.Map">
		UPDATE RE_REFINANCE_PROJECT T 
		SET T.PROJECT_STATUS = #{PROJECT_STATUS}
		<if test="BANK_FEEDBACK_TIME != null">,T.BANK_FEEDBACK_TIME = TO_DATE(#{BANK_FEEDBACK_TIME},'YYYY-MM-DD')</if>
		WHERE T.ID= #{PROJECT_ID}
	</update>
	
	<insert id="addLoanFailureResaon" parameterType="java.util.Map" >
		INSERT INTO RE_REFINANCE_LOAN(
								ID,
								PROJECT_ID,
								LOANFAILURE
								)
	 	 				VALUES(SEQ_REFINANCE_LOAN.nextval,
	 	 					   #{PROJECT_ID},
	 	 					   #{LOANFAILURE}
	 	 					   )
	</insert>
	
	<select id="getLoanByID" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT ID,
		       PROJECT_ID,
		       LOAN_AMOUNT,
		       TO_CHAR(LOAN_TIME, 'yyyy-MM-dd') LOAN_TIME,
		       TO_CHAR(START_REPAY_TIME, 'yyyy-MM-dd') START_REPAY_TIME,
		       REPAY_NUMBER,
		       LOANFAILURE,
		       TO_CHAR(EXPECT_TIME, 'yyyy-MM-dd') EXPECT_TIME,
		       COST_TOTAL,
		       DEDUCT_ACCOUNT,
		       TO_CHAR(REALITY_TIME, 'yyyy-MM-dd') REALITY_TIME
		  FROM RE_REFINANCE_LOAN T
	    WHERE  PROJECT_ID = #{PROJECT_ID} AND ROWNUM = 1
	</select>
	
	<update id="updateLoan" parameterType="java.util.Map">
		UPDATE RE_REFINANCE_LOAN  SET ID= #{ID}
			<if test="LOAN_AMOUNT !=null">,LOAN_AMOUNT = #{LOAN_AMOUNT}</if>
			<if test="LOAN_TIME !=null">,LOAN_TIME = TO_DATE(#{LOAN_TIME},'YYYY-MM-DD')</if>
			<if test="START_REPAY_TIME !=null">,START_REPAY_TIME = TO_DATE(#{START_REPAY_TIME},'YYYY-MM-DD')</if>
			<if test="EXAM_PERSON !=null">,EXAM_PERSON = #{EXAM_PERSON}</if>
			<if test="EXAM_TIME !=null">,EXAM_TIME = TRUNC(sysdate)</if>
			<if test="NOTTHROUGHREASON !=null">,NOTTHROUGHREASON = #{NOTTHROUGHREASON}</if>
			<if test="CONFRIM_PERSON !=null">,CONFRIM_PERSON = #{CONFRIM_PERSON}</if>
			<if test="CONFRIM_TIME !=null">,CONFRIM_TIME = TRUNC(sysdate)</if>
			<if test="REALITY_TIME !=null">,REALITY_TIME = TO_DATE(#{REALITY_TIME},'YYYY-MM-DD')</if>
			<if test="PAYMENT_ACCOUNT !=null">,PAYMENT_ACCOUNT = #{PAYMENT_ACCOUNT}</if>
		WHERE ID= #{ID}
	</update>
	
	<select id="queryLoanDetail" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT T1.ID,
		       T1.PROJECT_ID,
		       T1.LOAN_AMOUNT,
		       TO_CHAR(T1.LOAN_TIME, 'YYYY-MM-DD') LOAN_TIME,
		       TO_CHAR(T1.START_REPAY_TIME, 'YYYY-MM-DD') START_REPAY_TIME,
		       T1.EXAM_PERSON,
		       TO_CHAR(T1.EXAM_TIME, 'YYYY-MM-DD') EXAM_TIME,
		       T1.CONFRIM_PERSON,
		       TO_CHAR(T1.CONFRIM_TIME, 'YYYY-MM-DD') CONFRIM_TIME,
		       T1.NOTTHROUGHREASON,
		       T1.LOANFAILURE,
		       T2.PROJECT_NAME,
		       T2.PROJECT_CODE,
		       T2.PROJECT_STATUS,
		       TO_CHAR(T2.CREATE_TIME, 'YYYY-MM-DD') CREATE_TIME,
		       T2.PAY_TOTAL,
		       TO_CHAR(T2.COMMIT_BANK, 'YYYY-MM-DD') COMMIT_BANK,
		       U.NAME CREATE_NAME,
		       T1.REPAY_TYPE
		  FROM RE_REFINANCE_LOAN T1, RE_REFINANCE_PROJECT T2,SECU_USER U 
		 WHERE T1.PROJECT_ID = T2.ID(+)
		   AND U.CODE(+) = T2.CREATE_CODE
		   AND T1.PROJECT_ID = #{PROJECT_ID} AND ROWNUM = 1
	</select>
	
	<select id="queryFhfaLoanProject" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT NVL(T3.LOAN_AMOUNT,0) LOAN_AMOUNT,T1.ID,T3.ID AS IDS,NVL(T1.PRACTICAL_LIMIT,0) PRACTICAL_LIMIT,NVL(T1.BALANCE,0) BALANCE,NVL(T3.LOAN_AMOUNT,0) LOAN_AMOUNT,
		NVL(T1.TOTAL_CREDIT,0) TOTAL_CREDIT 
		FROM RE_REFINANCE_FHFA T1,RE_REFINANCE_PROJECT T2,RE_REFINANCE_LOAN T3,RE_REFINANCE_BAILOUTWAY T4
		WHERE T1.ID = T4.JG_ID AND T2.ID = T3.PROJECT_ID AND T4.ID = T2.BAILOUTWAY_ID AND T2.ID = #{PROJECT_ID} AND ROWNUM = 1
	</select>
	
	 <select id="getBalanceCreditByPid"  resultType="map" parameterType="map">
	 SELECT   NVL(TRL.LOAN_AMOUNT,0) LOAN_AMOUNT, TRO.ID,TRO.JG_ID,TRO.TOTAL_CREDIT,NVL(TRO.PRACTICAL_LIMIT,0) PRACTICAL_LIMIT,NVL(TRO.BALANCE,0) BALANCE,
	 TRO.ITEM_ID ,TRO.STATUS  FROM RE_REFINANCE_ORGANREFUND TRO,RE_REFINANCE_LOAN TRL WHERE TRO.ITEM_ID = TRL.PROJECT_ID 
	 AND ITEM_ID=#{PROJECT_ID} AND ROWNUM=1
	 </select>
	 
	 <update id="updateCreditQuota" parameterType="java.util.Map">
		UPDATE RE_REFINANCE_FHFA SET ID = #{ID}
		<if test="PRACTICAL_LIMIT !=null and PRACTICAL_LIMIT !=''">,PRACTICAL_LIMIT = #{PRACTICAL_LIMIT}</if>
		<if test="BALANCE !=null and BALANCE !=''">,BALANCE = #{BALANCE}</if>
		WHERE ID= #{ID}
	</update>
	
	 <update id="updateBalanceCreditByPid" parameterType="map">
	 	UPDATE RE_REFINANCE_ORGANREFUND SET ITEM_ID=#{PROJECT_ID}
	 	<if test="BALANCE1 !=null and BALANCE1 !=''">,BALANCE = #{BALANCE1}</if>
	 	<if test="PRACTICAL_LIMIT1 !=null and PRACTICAL_LIMIT1 !=''">,PRACTICAL_LIMIT = #{PRACTICAL_LIMIT1}</if>
	 	 where ITEM_ID=#{PROJECT_ID}
	 </update>
	 
	 <update id="updateBailoutwayByPid" parameterType="java.util.Map">
		UPDATE RE_REFINANCE_BAILOUTWAY T
		   SET T.LAST_PRICE = (T.LAST_PRICE - ${LOAN_AMOUNT})
		 WHERE T.ID = (SELECT T2.BAILOUTWAY_ID
	                 FROM RE_REFINANCE_PROJECT T2
	                WHERE T2.ID = #{PROJECT_ID})
	</update>
	
	<update id="invalid" parameterType="map">
	UPDATE RE_REFINANCE_PROJECT
	   SET PROJECT_STATUS = 6
	 WHERE ID IN (SELECT T.ID
	                FROM (SELECT T21.ID, MAX(T23.PAY_DATE) PAY_DATE
	                        FROM RE_REFINANCE_PROJECT        T11,
	                             RE_REFINANCE_RENT_HEAD        T12,
	                             RE_REFINANCE_PROJECT        T21,
	                             RE_REFINANCE_RENT_HEAD        T22,
	                             re_refinance_payment_detail T23
	                       WHERE T11.ID = T12.RE_PRO_ID
	                             AND T21.ID = T22.RE_PRO_ID
	                             AND T12.PAYLIST_CODE = T22.PAYLIST_CODE
	                             AND T21.ID = T23.PROJECT_ID(+)
	                             AND T21.PROJECT_STATUS IN (1, 2, 4)
	                             AND T21.ID != T11.ID
	                             AND T11.ID = #{PROJECT_ID}
	                       GROUP BY T21.ID) T
	               WHERE (T.PAY_DATE IS NULL OR SYSDATE>T.PAY_DATE ))
	</update>
	
	<select id="getBankAccount" parameterType="Map" resultType="Map">
		select a.baba_id, a.account_name, a.account_no, a.account_type
  		  from T_SYS_BANK_ACCOUNT a
  	    order by a.baba_id desc
	</select>
	
	<select id="getLoanData" parameterType="Map" resultType="Map">
		SELECT * FROM RE_REFINANCE_LOAN WHERE PROJECT_ID=#{PROJECT_ID}
	</select>
	
	<delete id="delLoan" parameterType="Map">
		DELETE FROM RE_REFINANCE_LOAN WHERE ID=#{ID}
	</delete>
</mapper>
