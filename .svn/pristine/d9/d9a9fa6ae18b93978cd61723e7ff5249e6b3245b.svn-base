<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="project_withdrawn">
	<select id="whithDrawn_Msg" parameterType="java.util.Map"
		resultType="map">
		SELECT CCC.*, TO_CHAR(ROWNUM) ROW_NUM FROM (
		SELECT CC.*, ROWNUM ROWNO FROM (
		select a.cust_name--客户名称
		,a.PRO_CODE--项目编号
		,a.SUP_ID
		,a.COMPANY_NAMES--厂商名称
		,a.SUPPLIER_NAMES--供应商名称
		,a.PRODUCT_NAMES--租赁物名称
		,a.EQUIPMENT_AMOUNTS--台量
		,a.ENGINE_TYPES --产品机型
		,a.WHOLE_ENGINE_CODES--产品出厂编号
		,a.project_date--立项日期
		,a.START_DATE--起租确认日
		,a.LEASE_TOPRIC--租赁物购买价款
		,a.LEASE_TERM--租赁期限
		,a.PROJECT_ID
		,a.CLIENT_ID
		,round(nvl(h.ITEM_MONEY_ALL,0),2) ITEM_MONEY_ALL --租金总和
		,nvl(c.dun_period_count,0) dun_period_count--逾期期数
		,round(nvl(C.PENALTY_RECE_All,0),2) PENALTY_RECE_All --逾期金额
		,nvl(b.NUM_COUNT,0) COUNTED--已付期次
		,round(nvl(g.paidMoneyAll,0),2) paidMoneyAll--已付金额
		,nvl(e.NUM_COUNT,0) COUNTNUM--未付期次
		,round(nvl(g.MoneyAll,0),2) reayMoneyAll--未付金额
		,nvl(j.STATUS,1) STATUS --作废级别
		,a.PLAN_STATUS--项目状态位
		,a.FLAG_NAME--状态名称
		from (
		SELECT FCC.NAME CUST_NAME,FPH.PRO_CODE,FPH.COMPANY_NAME
		COMPANY_NAMES,FPH.SUP_ID
		,FPH.SUP_SHORTNAME SUPPLIER_NAMES,FPH.PRODUCT_NAME PRODUCT_NAMES,FPH.AMOUNT
		EQUIPMENT_AMOUNTS,FPH.ENGINE_TYPE ENGINE_TYPES
		,FPH.WHOLE_ENGINE_CODE WHOLE_ENGINE_CODES,TO_CHAR(FPH.CREATE_TIME,'YYYY-MM-DD') PROJECT_DATE
		,TO_CHAR(FPH.START_CONFIRM_DATE,'YYYY-MM-DD')
		START_DATE,FPH.LEASE_TOPRIC,FPH.LEASE_TERM,FPH.CLIENT_ID
		,FPH.STATUS PLAN_STATUS,TSDD.FLAG FLAG_NAME,FPH.ID PROJECT_ID
		FROM FIL_PROJECT_HEAD FPH
		LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID=FPH.CLIENT_ID
		LEFT JOIN T_SYS_DATA_DICTIONARY TSDD ON TSDD.TYPE='项目状态位' AND
		TSDD.CODE=FPH.STATUS
		WHERE FPH.STATUS IN (1,5,10,11,14,15,20,100,101)
		<if test="PRO_CODE !=null and PRO_CODE !=''"> and FPH.PRO_CODE like '%'||#{PRO_CODE}||'%'</if>
		<if test="SUP_NAME !=null and SUP_NAME !=''">and FPH.SUP_SHORTNAME like '%'||#{SUP_NAME}||'%'</if>
		<if test="COMPANY_NAME !=null and COMPANY_NAME !=''">and FPH.COMPANY_NAME like '%'||#{COMPANY_NAME}||'%'</if>
		<if test="CUST_NAME !=null and CUST_NAME !=''">and fcc.name like '%'||#{CUST_NAME}||'%'</if>
		<if test="PRODUCT_NAME !=null and PRODUCT_NAME !=''">and FPH.PRODUCT_NAME like '%'||#{PRODUCT_NAME}||'%'</if>
		<if test="PLAN_START_DATE !=null and PLAN_START_DATE !=''"> and
			fph.START_CONFIRM_DATE>=to_date(#{PLAN_START_DATE},'yyyy-mm-dd')</if>
		<if test="PLAN_END_DATE !=null and PLAN_END_DATE !=''"> and
			fph.START_CONFIRM_DATE&lt;=to_date(#{PLAN_END_DATE},'yyyy-mm-dd')
		</if>
		<if test="STATUS !=null and STATUS !=''">and fph.STATUS =#{STATUS}</if>
		) a
		left join (
		--计算租金总和
		select frph.project_id,sum(ITEM_MONEY) ITEM_MONEY_ALL from
		fil_rent_plan_head frph
		left join fil_rent_plan_detail frpd on frph.id=frpd.pay_id
		where item_name='租金' and ITEM_FLAG=2
		group by frph.project_id
		) h on a.PROJECT_ID=h.project_id
		left join (
		--计算逾期期数
		select t.PROJECT_ID,max(dun_period_count)
		dun_period_count,sum(PENALTY_RECE_All) PENALTY_RECE_All from (
		select fo.PROJECT_ID,fo.pay_code,count(id) dun_period_count
		,sum(nvl(fo.PENALTY_RECE,0)-nvl(fo.PENALTY_PAID,0)) PENALTY_RECE_All
		from fi_overdue fo
		where fo.CREATE_DATE=TRUNC(SYSDATE)
		group by fo.PROJECT_ID,fo.pay_code
		) t group by t.PROJECT_ID
		) c on a.PROJECT_ID=c.PROJECT_ID
		left join (
		--已付期次
		select frphm.PROJECT_ID,min(NUM_COUNT) NUM_COUNT from
		fil_rent_plan_head_max_v frphm
		left join (select t.paylist_code,count(BEGINNING_NUM) NUM_COUNT from (
		select
		PAYLIST_CODE,BEGINNING_NUM,sum(nvl(BEGINNING_MONEY,0)-nvl(BEGINNING_PAID,0))
		paid_money from fi_r_beginning where ITEM_FLAG=2 group by
		PAYLIST_CODE, BEGINNING_NUM
		) t where t.paid_money=0 group by t.paylist_code) t on
		frphm.PAYLIST_CODE=t.paylist_code group by frphm.PROJECT_ID
		) b on a.PROJECT_ID=b.PROJECT_ID
		left join (
		--未付期次
		select frphm.PROJECT_ID,max(NUM_COUNT) NUM_COUNT from
		fil_rent_plan_head_max_v frphm
		left join (select t.paylist_code,count(BEGINNING_NUM) NUM_COUNT from (
		select
		PAYLIST_CODE,BEGINNING_NUM,sum(nvl(BEGINNING_MONEY,0)-nvl(BEGINNING_PAID,0))
		paid_money from fi_r_beginning where ITEM_FLAG=2 group by
		PAYLIST_CODE, BEGINNING_NUM
		) t where t.paid_money>0 group by t.paylist_code) t on
		frphm.PAYLIST_CODE=t.paylist_code group by frphm.PROJECT_ID
		) e on a.PROJECT_ID=e.PROJECT_ID
		left join (
		--未付金额 已付金额
		select frphm.PROJECT_ID,sum(MoneyAll) MoneyAll,sum(paidMoneyAll)
		paidMoneyAll from fil_rent_plan_head_max_v frphm
		left join ( select
		PAYLIST_CODE,sum(nvl(BEGINNING_MONEY,0)-nvl(BEGINNING_PAID,0))
		MoneyAll,sum(nvl(BEGINNING_PAID,0)) paidMoneyAll from fi_r_beginning
		where ITEM_FLAG=2 group by PAYLIST_CODE
		) t on frphm.PAYLIST_CODE=t.paylist_code group by frphm.PROJECT_ID
		) g on a.PROJECT_ID=g.PROJECT_ID
		left join (
		select fph.id PROJECT_ID,
		case
		when (fps.value_str in (1,3,5) and sum(frb1.paidMoney)>0) or
		(fps.value_str in (2,4,6) and sum(frb.paidMoney)>0) then 4
		when sum(FO.PENALTY_RECE_All)>0 then 4
		when sum(fpsi.PLAN_MONEY)>0 then 3
		when fph.FIRST_APP_STATE in (2,3) then 2
		when fph.START_CONFIRM_DATE is null then 1
		else 1 end STATUS
		from fil_project_head fph
		left join fil_project_scheme fps on fph.id=fps.PROJECT_ID
		left join fil_rent_plan_head_max_v frphm on fph.id=frphm.project_id
		left join fil_proj_sub_info fpsi on fpsi.proj_id=fph.id
		left join (select frb.PAYLIST_CODE,sum(nvl(BEGINNING_PAID,0)) paidMoney
		from fi_r_beginning frb where ITEM_FLAG=2 and BEGINNING_NUM>1 group by
		frb.PAYLIST_CODE) frb on frb.paylist_code=frphm.paylist_code
		left join (select frb.PAYLIST_CODE,sum(nvl(BEGINNING_PAID,0)) paidMoney
		from fi_r_beginning frb where ITEM_FLAG=2 and BEGINNING_NUM>0 group by
		frb.PAYLIST_CODE) frb1 on frb1.paylist_code=frphm.paylist_code
		left join (select
		fo.pay_code,sum(nvl(fo.PENALTY_RECE,0)-nvl(fo.PENALTY_PAID,0))
		PENALTY_RECE_All from FI_OVERDUE fo where fo.CREATE_DATE
		=TRUNC(SYSDATE) group by fo.pay_code) fo on
		fo.pay_code=frphm.paylist_code
		where fps.key_name_en='PAY_WAY' and fph.STATUS IN
		(1,5,10,11,14,15,20,100,101)
		group by fph.id,fps.value_str,fph.FIRST_APP_STATE,fph.START_CONFIRM_DATE
		) j on a.PROJECT_ID=j.PROJECT_ID
		where j.STATUS>1
		order by a.company_names,a.supplier_names,a.cust_name,a.PRO_CODE
		) CC
		) CCC
		WHERE CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>

	<select id="whithDrawn_Msg_count" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(1)
		FROM FIL_PROJECT_HEAD FPH
		LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID=FPH.CLIENT_ID
		left join (
		select fph.id PROJECT_ID,
		case
		when (fps.value_str in (1,3,5) and sum(frb1.paidMoney)>0) or
		(fps.value_str in (2,4,6) and sum(frb.paidMoney)>0) then 4
		when sum(FO.PENALTY_RECE_All)>0 then 4
		when sum(fpsi.PLAN_MONEY)>0 then 3
		when fph.FIRST_APP_STATE in (2,3) then 2
		when fph.START_CONFIRM_DATE is null then 1
		else 1 end STATUS
		from fil_project_head fph
		left join fil_project_scheme fps on fph.id=fps.PROJECT_ID
		left join fil_rent_plan_head_max_v frphm on fph.id=frphm.project_id
		left join fil_proj_sub_info fpsi on fpsi.proj_id=fph.id
		left join (select frb.PAYLIST_CODE,sum(nvl(BEGINNING_PAID,0)) paidMoney
		from fi_r_beginning frb where ITEM_FLAG=2 and BEGINNING_NUM>1 group by
		frb.PAYLIST_CODE) frb on frb.paylist_code=frphm.paylist_code
		left join (select frb.PAYLIST_CODE,sum(nvl(BEGINNING_PAID,0)) paidMoney
		from fi_r_beginning frb where ITEM_FLAG=2 and BEGINNING_NUM>0 group by
		frb.PAYLIST_CODE) frb1 on frb1.paylist_code=frphm.paylist_code
		left join (select
		fo.pay_code,sum(nvl(fo.PENALTY_RECE,0)-nvl(fo.PENALTY_PAID,0))
		PENALTY_RECE_All from FI_OVERDUE fo where fo.CREATE_DATE
		=TRUNC(SYSDATE) group by fo.pay_code) fo on
		fo.pay_code=frphm.paylist_code
		where fps.key_name_en='PAY_WAY' and fph.STATUS IN
		(1,5,10,11,14,15,20,100,101)
		group by fph.id,fps.value_str,fph.FIRST_APP_STATE,fph.START_CONFIRM_DATE
		) j on FPH.ID=j.PROJECT_ID
		WHERE FPH.STATUS IN (1,5,10,11,14,15,20,100,101) and j.STATUS>1
		<if test="PRO_CODE !=null and PRO_CODE !=''"> and FPH.PRO_CODE like '%'||#{PRO_CODE}||'%'</if>
		<if test="SUP_NAME !=null and SUP_NAME !=''">and FPH.SUP_SHORTNAME like '%'||#{SUP_NAME}||'%'</if>
		<if test="COMPANY_NAME !=null and COMPANY_NAME !=''">and FPH.COMPANY_NAME like '%'||#{COMPANY_NAME}||'%'</if>
		<if test="CUST_NAME !=null and CUST_NAME !=''">and fcc.name like '%'||#{CUST_NAME}||'%'</if>
		<if test="PRODUCT_NAME !=null and PRODUCT_NAME !=''">and FPH.PRODUCT_NAME like '%'||#{PRODUCT_NAME}||'%'</if>
		<if test="PLAN_START_DATE !=null and PLAN_START_DATE !=''"> and
			fph.START_CONFIRM_DATE>=to_date(#{PLAN_START_DATE},'yyyy-mm-dd')</if>
		<if test="PLAN_END_DATE !=null and PLAN_END_DATE !=''"> and
			fph.START_CONFIRM_DATE&lt;=to_date(#{PLAN_END_DATE},'yyyy-mm-dd')
		</if>
		<if test="STATUS !=null and STATUS !=''">and fph.STATUS =#{STATUS}</if>
	</select>



	<update id="whithDrawn_STATUS" parameterType="java.util.Map">
		update
		fil_project_head set STATUS=#{STATUS} where id=#{PROJECT_ID}
	</update>

	<select id="payMentStatus3" parameterType="java.util.Map"
		resultType="java.util.Map">
		select PROJECT_CODE,round(sum(nvl(PAY_MONEY,0)),2)
		PAYMENT_MONEY from fi_fund_payment_detail where PAY_TYPE=1 and
		STATUS=2 and PROJECT_CODE=#{PROJECT_CODE} group by PROJECT_CODE
	</select>

	<select id="payMentStatus4" parameterType="java.util.Map"
		resultType="java.util.Map">
		select fph.ID PROJECT_ID,nvl(a.DUN_NUM,0)
		DUN_NUM,round(nvl(a.DUN_MONEY,0),2)
		DUN_MONEY,round(nvl(c.DUN_BEGGING_MONEY,0),2)
		DUN_BEGGING_MONEY,round(nvl(b.PRINCIPAL_MONEY,0),2) PRINCIPAL_MONEY
		from fil_project_head fph
		left join (
		select t.PROJECT_ID,max(dun_period_count) DUN_NUM,sum(PENALTY_RECE_All)
		DUN_MONEY from (
		select fo.PROJECT_ID,fo.pay_code,count(id) dun_period_count
		,sum(nvl(fo.PENALTY_RECE,0)-nvl(fo.PENALTY_PAID,0)) PENALTY_RECE_All
		from fi_overdue fo
		where fo.CREATE_DATE=TRUNC(SYSDATE) and project_id=#{PROJECT_ID}
		group by fo.PROJECT_ID,fo.pay_code
		) t group by t.PROJECT_ID
		) a on a.PROJECT_ID=fph.ID
		left join (
		select sum(nvl(frb.BEGINNING_MONEY,0)-nvl(frb.BEGINNING_PAID,0))
		DUN_BEGGING_MONEY,frph.project_id from fil_rent_plan_head_max_v frph
		left join fi_r_beginning frb on frb.paylist_code=frph.paylist_code
		where frph.project_id=#{PROJECT_ID} and
		frb.BEGINNING_RECEIVE_DATA&lt;TRUNC(SYSDATE) and frb.ITEM_FLAG=2
		group by frph.project_id
		) c on c.PROJECT_ID=fph.ID
		left join (
		select sum(nvl(frb.BEGINNING_MONEY,0)-nvl(frb.BEGINNING_PAID,0))
		PRINCIPAL_MONEY,frph.project_id from fil_rent_plan_head_max_v frph
		left join fi_r_beginning frb on frb.paylist_code=frph.paylist_code
		where frph.project_id=#{PROJECT_ID} and
		frb.BEGINNING_RECEIVE_DATA>=TRUNC(SYSDATE) and frb.ITEM_FLAG=2 and
		frb.BEGINNING_NAME='本金'
		group by frph.project_id, frph.paylist_code
		) b on b.PROJECT_ID=fph.ID
		where fph.ID=#{PROJECT_ID}
	</select>

	<select id="queryScheme_fee_List" parameterType="java.util.Map"
		resultType="java.util.Map">
		select KEY_NAME_EN,KEY_NAME_ZN,sum(nvl(VALUE_STR,0))
		VALUE_STR,PROJECT_ID,ITEM_FLAG from fil_scheme_fee_v
		where PROJECT_ID=#{PROJECT_ID}
		group by PROJECT_ID,ITEM_FLAG,KEY_NAME_EN,KEY_NAME_ZN
	</select>

	<select id="queryScheme_fee_List1" parameterType="java.util.Map"
		resultType="java.util.Map">
		select KEY_NAME_EN,KEY_NAME_ZN,sum(nvl(VALUE_STR,0))
		VALUE_STR,PROJECT_ID,ITEM_FLAG from fil_scheme_fee_v
		where PROJECT_ID=#{PROJECT_ID} and ITEM_FLAG=3
		group by PROJECT_ID,ITEM_FLAG,KEY_NAME_EN,KEY_NAME_ZN
	</select>

	<insert id="insertVoid_diff" parameterType="java.util.Map">
		INSERT INTO FIL_PROJECT_VOID_DIFF_LOAN
		(
		ID,
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">PROJECT_ID,</if>
		<if test="PROJECT_CODE !=null and PROJECT_CODE !=''">PROJECT_CODE,</if>
		<if test="PAYEE_NAME !=null and PAYEE_NAME !=''">PAYEE_NAME,</if>
		<if test="RECE_BANK !=null and RECE_BANK !=''">RECE_BANK,</if>
		<if test="RECE_BANK_ADDREES !=null and RECE_BANK_ADDREES !=''">RECE_BANK_ADDREES,</if>
		<if test="RECE_ACCOUNT !=null and RECE_ACCOUNT !=''">RECE_ACCOUNT,</if>
		<if test="PLAN_MONEY !=null and PLAN_MONEY !=''">PLAN_MONEY,</if>
		<if test="PLAN_DATE !=null and PLAN_DATE !=''">PLAN_DATE,</if>
		<if test="PAYABLE_MONEY !=null and PAYABLE_MONEY !=''">PAYABLE_MONEY,</if>
		<if test="STATUS !=null and STATUS !=''">STATUS,</if>
		<if test="RECEIVABLE_MONEY !=null and RECEIVABLE_MONEY !=''">RECEIVABLE_MONEY,</if>
		<if test="PAYMENT_MONEY !=null and PAYMENT_MONEY !=''">PAYMENT_MONEY,</if>
		<if test="DUN_BEGGING_MONEY !=null and DUN_BEGGING_MONEY !=''">DUN_BEGGING_MONEY,</if>
		<if test="DUN_MONEY !=null and DUN_MONEY !=''">DUN_MONEY,</if>
		<if test="PRINCIPAL_MONEY !=null and PRINCIPAL_MONEY !=''">PRINCIPAL_MONEY,</if>
		<if test="DUN_NUM !=null and DUN_NUM !=''">DUN_NUM,</if>
		CREATE_ID,
		CREATE_DATE
		)
		VALUES
		(
		#{ID},
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">#{PROJECT_ID},</if>
		<if test="PROJECT_CODE !=null and PROJECT_CODE !=''">#{PROJECT_CODE},</if>
		<if test="PAYEE_NAME !=null and PAYEE_NAME !=''">#{PAYEE_NAME},</if>
		<if test="RECE_BANK !=null and RECE_BANK !=''">#{RECE_BANK},</if>
		<if test="RECE_BANK_ADDREES !=null and RECE_BANK_ADDREES !=''">#{RECE_BANK_ADDREES},</if>
		<if test="RECE_ACCOUNT !=null and RECE_ACCOUNT !=''">#{RECE_ACCOUNT},</if>
		<if test="PLAN_MONEY !=null and PLAN_MONEY !=''">#{PLAN_MONEY},</if>
		<if test="PLAN_DATE !=null and PLAN_DATE !=''">to_date(#{PLAN_DATE},'yyyy-MM-dd'),</if>
		<if test="PAYABLE_MONEY !=null and PAYABLE_MONEY !=''">#{PAYABLE_MONEY},</if>
		<if test="STATUS !=null and STATUS !=''">#{STATUS},</if>
		<if test="RECEIVABLE_MONEY !=null and RECEIVABLE_MONEY !=''">#{RECEIVABLE_MONEY},</if>
		<if test="PAYMENT_MONEY !=null and PAYMENT_MONEY !=''">#{PAYMENT_MONEY},</if>
		<if test="DUN_BEGGING_MONEY !=null and DUN_BEGGING_MONEY !=''">#{DUN_BEGGING_MONEY},</if>
		<if test="DUN_MONEY !=null and DUN_MONEY !=''">#{DUN_MONEY},</if>
		<if test="PRINCIPAL_MONEY !=null and PRINCIPAL_MONEY !=''">#{PRINCIPAL_MONEY},</if>
		<if test="DUN_NUM !=null and DUN_NUM !=''">#{DUN_NUM},</if>
		#{CREATE_ID},
		sysdate
		)
	</insert>

	<insert id="insertVoid_Detail" parameterType="java.util.Map">
		insert into FIL_PROJECT_VOID_DIFF_DETAIL(
		ID
		<if test="HEAD_ID !=null and HEAD_ID !=''">,HEAD_ID</if>
		<if test="KEY_NAME_EN !=null and KEY_NAME_EN !=''">,KEY_NAME_EN</if>
		<if test="KEY_NAME_ZN !=null and KEY_NAME_ZN !=''">,KEY_NAME_ZN</if>
		<if test="VALUE_STR !=null and VALUE_STR !=''">,VALUE_STR</if>
		<if test="CHECKISF !=null and CHECKISF !=''">,CHECKISF</if>
		)
		values(
		SEQ_PROJECT_VOID_DIFF_DETAIL.NEXTVAL
		<if test="HEAD_ID !=null and HEAD_ID !=''">,#{HEAD_ID}</if>
		<if test="KEY_NAME_EN !=null and KEY_NAME_EN !=''">,#{KEY_NAME_EN}</if>
		<if test="KEY_NAME_ZN !=null and KEY_NAME_ZN !=''">,#{KEY_NAME_ZN}</if>
		<if test="VALUE_STR !=null and VALUE_STR !=''">,#{VALUE_STR}</if>
		<if test="CHECKISF !=null and CHECKISF !=''">,#{CHECKISF}</if>
		)
	</insert>

	<select id="queruHead_BaseInfo" parameterType="java.util.Map"
		resultType="java.util.Map">
		select
		fpvdl.ID,fpvdl.PROJECT_ID,fpvdl.PROJECT_CODE,fpvdl.PAYEE_NAME,fpvdl.RECE_BANK
		,fpvdl.RECE_BANK_ADDREES,fpvdl.RECE_ACCOUNT,fpvdl.PLAN_MONEY,to_char(fpvdl.PLAN_DATE,'yyyy-MM-dd')
		PLAN_DATE,fpvdl.PAYABLE_MONEY
		,fpvdl.STATUS,fpvdl.RECEIVABLE_MONEY,fpvdl.PAYMENT_MONEY,fpvdl.DUN_BEGGING_MONEY,fpvdl.DUN_MONEY
		,fpvdl.PRINCIPAL_MONEY,fpvdl.DUN_NUM,fpvdl.CREATE_ID,to_char(fpvdl.CREATE_DATE,'yyyy-MM-dd')
		CREATE_DATE
		,vesc.COMPANY_NAMES,vesc.SUPPLIER_NAMES,FCC.NAME CUST_NAME,FCC.ID CLIENT_ID,FCC.TYPE
		from FIL_PROJECT_VOID_DIFF_LOAN
		fpvdl
		left join V_EQUIPMENT_SUPS_COMS vesc on vesc.PROJECT_ID=fpvdl.PROJECT_ID
		LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID=vesc.CLIENT_ID
		where fpvdl.PROJECT_ID=#{PROJECT_ID}
	</select>

	<select id="queruDetalInfo" parameterType="java.util.Map"
		resultType="java.util.Map">
		select * from FIL_PROJECT_VOID_DIFF_DETAIL where
		HEAD_ID=#{HEAD_ID}
	</select>

	<delete id="deleteDatelByHeadId" parameterType="java.util.Map">
		delete
		FIL_PROJECT_VOID_DIFF_DETAIL where HEAD_ID=#{HEAD_ID}
	</delete>

	<delete id="deleteHeadByProject" parameterType="java.util.Map">
		delete
		FIL_PROJECT_VOID_DIFF_LOAN where PROJECT_ID=#{PROJECT_ID}
	</delete>

	<select id="queryProjectPayWay" parameterType="java.util.Map"
		resultType="java.util.Map">
		select * from fil_project_scheme fps where fps.project_id=#{PROJECT_ID} and
		fps.key_name_en='PAY_WAY' and fps.value_str in (2,4,6)
	</select>

	<select id="queryOneZujin" parameterType="java.util.Map"
		resultType="java.util.Map">
		select 'ONE_FUND' KEY_NAME_EN,'租金' KEY_NAME_ZN,sum(frb.BEGINNING_PAID)
		VALUE_STR,fph.id PROJECT_ID,2 ITEM_FLAG from fi_r_beginning frb
		left join fil_rent_plan_head_max_v frph on
		frph.paylist_code=frb.paylist_code
		left join fil_project_head fph on fph.id=frph.project_id
		where fph.id=#{PROJECT_ID} and frb.ITEM_FLAG=2 and frb.BEGINNING_NUM=1 and
		frb.BEGINNING_FLAG=1
		group by fph.id 
	</select>
</mapper>