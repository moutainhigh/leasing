<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="invoice">
	<select id="selectConfigPageData" parameterType="Map" resultType="Map">
		SELECT * FROM 
			(	 
				SELECT  CC.*,ROWNUM ROWNO FROM 
					(	
						SELECT * FROM FI_INVOICE_RULER_HEAD order by id
					) CC
				where rownum &lt;=  #{PAGE_END}
			) CCC
		WHERE CCC.ROWNO >= #{PAGE_BEGIN} 
	</select>
	
	<select id="selectConfigPageDataCount" parameterType="Map" resultType="Int">
		SELECT  COUNT(*) FROM 
		 (	
				SELECT * FROM FI_INVOICE_RULER_HEAD 
		 )
	</select>
	
	<select id="selectConfigHead" parameterType="Map" resultType="Map">
		SELECT TYPE,FLAG,STATUS,CODE,SHORTNAME FROM T_SYS_DATA_DICTIONARY WHERE TYPE=#{SQL_TYPE} AND  upper(CODE) NOT IN(
		SELECT COLUMN_NAME FROM  USER_TAB_COLS WHERE  TABLE_NAME = #{SQL_TABLENAME})  AND status = 0
	</select>
	<update id="alterConfigHead" parameterType="Map">
		ALTER TABLE FI_INVOICE_RULER_HEAD ADD  ${SQL_COL} VARCHAR2(300)
	</update>
	<select id="selectRulerValues" parameterType="Map" resultType="Map">
		SELECT 
		<if test="SQL_KEYS !=null and SQL_KEYS !=''"> ${SQL_KEYS} </if>
			 from T_SYS_DATA_DICTIONARY 
			where  status = 0 
		<if test="SQL_TYPE !=null and SQL_TYPE !=''"> and type=#{SQL_TYPE} </if>
		<if test="SQL_CODE !=null and SQL_CODE !=''"> and code=#{SQL_CODE} </if>
		<if test="SQL_FLAG !=null and SQL_FLAG !=''"> and flag=#{SQL_FLAG} </if> 
			order by level_num 
	</select>
	
	<select id="selectRulerValuesSite" parameterType="Map" resultType="Map">
		SELECT 
		<if test="SQL_KEYS !=null and SQL_KEYS !=''"> ${SQL_KEYS} </if>
			 from t_sys_site_dictionary 
			where  status = 0 
		<if test="SQL_TYPE !=null and SQL_TYPE !=''"> and type=#{SQL_TYPE} </if>
		<if test="SQL_CODE !=null and SQL_CODE !=''"> and code=#{SQL_CODE} </if>
		<if test="SQL_FLAG !=null and SQL_FLAG !=''"> and flag=#{SQL_FLAG} </if> 
			order by level_num 
	</select>
	
	<insert id="insertRuler" parameterType="Map">
		insert into FI_INVOICE_RULER_HEAD (
			id
			<if test="SQL_KEYS !=null and SQL_KEYS !=''">${SQL_KEYS} </if>
		)
		values (
			SEQ_fi_invoice_ruler_head.nextval
			<if test="SQL_VALUES !=null and SQL_VALUES !=''">${SQL_VALUES} </if>
		)
	</insert>
	<update id="updateRuler" parameterType="Map" >
		update FI_INVOICE_RULER_HEAD set 
			<if test="SQL_SET!=null and SQL_SET !=''"> ${SQL_SET} </if>
		where id = #{ID}
	</update>
	<delete id="deleteRuler" parameterType="Map">
		delete from FI_INVOICE_RULER_HEAD where id = #{ID}
	</delete>
	<delete id="deleteRulerConfig" parameterType="Map">
		delete from FI_INVOICE_RULER_config where ruler_id = #{ID}
	</delete>
	<select id="selectConfigDetail" parameterType="Map" resultType="Map">
		SELECT * FROM 
			(	 
				SELECT  CC.*,ROWNUM ROWNO FROM 
					(	
						select co.id,di.flag,co.show_node,co.receipt_node,
						case when co.if_invoice='1' then #{SQL_KAIJU} else '' end if_invoice,
						case when co.if_receipt='1' then #{SQL_KAIJU} else '' end if_receipt,
						co.merge,co.merge_name,co.tax_type,co.tax_rate  
						from T_SYS_DATA_DICTIONARY di
						left join (select * from fi_invoice_ruler_config where ruler_id = #{id} ) co
						on  di.flag = co.fund_type
						where  status = 0 and type = #{SQL_FUND_TYPE}	
						order by  di.level_num 
					) CC
				where rownum &lt;=  #{PAGE_END}
			) CCC
		WHERE CCC.ROWNO >= #{PAGE_BEGIN} 
		
	</select>
	<select id="selectConfigDetailCount" parameterType="Map" resultType="int">
		SELECT  COUNT(*) FROM 
		 (	
				select di.flag,co.if_invoice,co.if_receipt,co.merge,co.merge_name from  T_SYS_DATA_DICTIONARY di
				left join (select * from fi_invoice_ruler_config where ruler_id = #{id} ) co
				on  di.flag = co.fund_type 
				where  status = 0 and type = #{SQL_FUND_TYPE}	
		 )
	</select>
	<update id="updateConfigDetail" parameterType="Map" >
		UPDATE FI_INVOICE_RULER_CONFIG 
		SET 
		<if test="SQL_SETS != null and SQL_SETS !=''"> ${SQL_SETS}  </if>
		WHERE FUND_TYPE = #{FUND_TYPE} AND RULER_ID = #{RULER_ID} 
	</update>
	<delete id="deleteConfigDetail" parameterType="Map">
		delete from FI_INVOICE_RULER_CONFIG where not exists(select id from FI_INVOICE_RULER_HEAD where id = FI_INVOICE_RULER_CONFIG.ruler_id)
		or (IF_INVOICE='' and IF_RECEIPT='' and MERGE='' and MERGE_NAME='' and SHOW_NODE='' and RECEIPT_NODE='')
	</delete>
	<insert id="insertConfigDetail" parameterType="Map">
		INSERT INTO FI_INVOICE_RULER_CONFIG (
			ID,RULER_ID,FUND_TYPE,IF_INVOICE,IF_RECEIPT,MERGE ,MERGE_NAME,SHOW_NODE,RECEIPT_NODE,tax_type,tax_rate
		)
		select	seq_fi_invoice_ruler_config.NEXTVAL,
		 #{RULER_ID},#{FUND_TYPE} ${SQL_VALUES}
		from dual 
		where not exists(select * from FI_INVOICE_RULER_CONFIG where FUND_TYPE = #{FUND_TYPE} AND RULER_ID = #{RULER_ID} )
		
	</insert>
	
	<select id="selectConfigHeadFinal" parameterType="Map" resultType="Map">
		SELECT TYPE,FLAG,STATUS,CODE,SHORTNAME FROM T_SYS_DATA_DICTIONARY WHERE TYPE=#{SQL_TYPE} AND  upper(CODE) NOT IN(
		SELECT COLUMN_NAME FROM  USER_TAB_COLS WHERE  TABLE_NAME = #{SQL_TABLENAME})  AND status = 0
	</select>
	
	<update id="alterConfigHeadFinal" parameterType="Map">
		ALTER TABLE ${SQL_TABLENAME} ADD  ${SQL_COL} VARCHAR2(300)
	</update>
	<delete id="deleteRulerHeadFinal" parameterType="Map">
		delete from ${SQL_TABLENAME} 
	</delete>
	<insert id="insertRulerHeadFinal" parameterType="Map">
		insert into fi_invoice_ruler_head_final (ruler_head_id,
			id,ruler_name,descr,create_code,create_time,update_code,update_time${SQL_COLS1})
		select head.ruler_head_id,
			seq_fi_invoice_ruler_head_f.nextval,head.ruler_name,head.descr,head.create_code,head.create_time,head.update_code,head.update_time 
			${SQL_COLS2} 
		from ${SQL_TABLE_NAME} head 
		right join (select * from t_sys_data_dictionary where type = #{SQL_TYPE}) t 
		on 1=1
		where nvl(head.${SQL_COL},' ') =' ' 
	</insert>
	<!-- 插入 fi_invoice_ruler_head_final -->
	<insert id="insertIntoHeadFinalTool" parameterType="Map">
		insert into fi_invoice_ruler_head_final (ruler_head_id,id,ruler_name,descr,create_code,create_time,update_code,update_time
			${SQL_COLS1})
		select id,${SQL_SEQ_HEAD},ruler_name,descr,create_code,create_time,update_code,update_time 
			${SQL_COLS2} 
		from ${SQL_TABLE_NAME} 
	</insert>
	<!-- 插入 fi_invoice_ruler_config_final -->
	<insert id="insertIntoConfigFinalTool" parameterType="Map">
		insert into fi_invoice_ruler_config_final (
			id,ruler_id,fund_type,if_invoice,if_receipt,merge,merge_name,create_code,create_time,
			update_code,update_time,show_node,receipt_node,tax_type,TAX_RATE) 
		select seq_fi_invoice_ruler_config_f.nextval,head.id,config.fund_type,config.if_invoice,
			config.if_receipt,
		    config.merge,config.merge_name,config.create_code,
			config.create_time,config.update_code,config.update_time,config.show_node,config.receipt_node,config.tax_type,config.tax_rate  
		from fi_invoice_ruler_head_final head  right join fi_invoice_ruler_config config 
		    on head.ruler_head_id = config.ruler_id 
	</insert>
	
	<update id="insertErrMsg" parameterType="Map">
		UPDATE FI_SALEITEM_INVOICE T  SET T.ERRFLAG = #{ERRMSG}
		  WHERE T.ID = #{INVOICE_ID}
	</update>	
	
	<select id="selectCheckedInvoices" parameterType="map" resultType="map" >
		SELECT T.PRO_CODE, T.SUP_SHORTNAME, T.SUP_ID, I.*
			FROM (SELECT *
							FROM FIL_PROJECT_HEAD S
						 WHERE S.STATUS >= 20
							 AND TRUNC(S.START_CONFIRM_DATE) >
									 TRUNC(TO_DATE('2013-08-16', 'yyyy-mm-dd'))) T
			LEFT JOIN (SELECT DISTINCT D_PROJECT_CODE,
																 INVOICE_TARGET_ID,
																 INVOICE_TARGET_TYPE
									 FROM FI_FUND_DETAIL where  d_pay_project NOT like '%保证金%') TT
				ON T.PRO_CODE = TT.D_PROJECT_CODE
			LEFT JOIN VI_INVOICE_TARGET_INFO I
				ON TT.INVOICE_TARGET_ID = I.TARGET_ID
			 AND TT.INVOICE_TARGET_TYPE = I.TARGET_TYPE
			LEFT JOIN FI_SALEITEM_INVOICE F
				ON T.PRO_CODE = F.PROJ_CODE
			 AND TT.INVOICE_TARGET_ID = F.TARGET_ID
			 AND TT.INVOICE_TARGET_TYPE = F.TARGET_TYPE
		 WHERE NVL(F.STATUS, 0) = 0 AND tt.INVOICE_TARGET_ID IS NOT NULL  AND i.TARGET_TYPE IS NOT NULL 
		<if test="SUP_ID!=null and SUP_ID !=''"> 
			and 	t.sup_id like '%'||#{SUP_ID}||'%'		
		</if>
	</select>
	
	<update id="updateCheckedErrInfo"  parameterType="map">
	
		update FIL_PROJECT_HEAD t set t.INVOICE_FALSE_REASION = #{REASION} where t.pro_code = #{PRO_CODE}
	</update>
	
	<update id="updateChedkedAll" parameterType="map">
		update FIL_PROJECT_HEAD t set t.INVOICE_FALSE_REASION = ''
	</update>
	
	
	<select id="checkInvoiceData" parameterType="map" resultType="map">
		
		SELECT * FROM 
			(	 
				SELECT  CC.*,ROWNUM ROWNO FROM 
					(	
						select * from fil_project_head t 
						<where>
							and t.INVOICE_FALSE_REASION is not null and t.pro_code not like '%TEST%' 
							<if test="SUP_ID!=null and SUP_ID !=''"> 
								and 	t.sup_id like '%'||#{SUP_ID}||'%'		
							</if>
							<if test="PRO_CODE!=null and PRO_CODE !=''"> 
								and 	t.PRO_CODE like '%'||#{PRO_CODE}||'%'		
							</if>
							<if test="SUP_SHORTNAME!=null and SUP_SHORTNAME !=''"> 
								and 	t.SUP_SHORTNAME like '%'||#{SUP_SHORTNAME}||'%'		
							</if>
						</where>
						order by t.pro_code
					) CC
				where rownum &lt;=  #{PAGE_END}
			) CCC
		WHERE CCC.ROWNO >= #{PAGE_BEGIN} 
		
	</select>
	
	<select id="checkInvoiceDataCount" parameterType="map" resultType="int">
		select count(1) from fil_project_head t 
		<where>
			and t.INVOICE_FALSE_REASION is not null and t.pro_code not like '%TEST%'
			<if test="SUP_ID!=null and SUP_ID !=''"> 
				and 	t.sup_id like '%'||#{SUP_ID}||'%'		
			</if>
			<if test="PRO_CODE!=null and PRO_CODE !=''"> 
				and 	t.PRO_CODE like '%'||#{PRO_CODE}||'%'			
			</if>
			<if test="SUP_SHORTNAME!=null and SUP_SHORTNAME !=''"> 
				and 	t.SUP_SHORTNAME like '%'||#{SUP_SHORTNAME}||'%'		
			</if>
		</where>
		
	</select>
</mapper> 