<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="fundReport">
	<select id="showFundList" parameterType="map" resultType="map">
	SELECT 
		${SQL_COLUMN} 
	FROM (  SELECT CC.*,ROWNUM RN FROM (SELECT * FROM(
									SELECT
					         DISTINCT
					         FCC.NAME CUST_NAME,
						     FCC.CUST_LEVER
				         ,SEX.FLAG TYPE_NAME,
						     FPH.PROVINCE_NAME AREA_NAME,
						     YWLX.FLAG PLATFORM_NAME,
						     FPH.CLERK_NAME,
						     FRPH.PAYLIST_CODE,
					       FRB.ZJ ZUJIN,
					       FRB.BENJIN,
					       FRB.LIXI,
					       FRB.WYJ WEIYUEJIN,
					       FRB.SQK,
					       FRB.BZJ,
					       FRB.SXF,
					       FRB.BXF,
					       FRB.QTFY
           
						FROM 
						(SELECT ffd.d_pay_code,
							   TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM')PAY_DATE,
						       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
						       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
						       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
						       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
						       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
						       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
						       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
						       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
						       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY,
						       sum(NVL(ffd.d_pay_money,0)) allmoney
						  FROM fi_fund_detail ffd, fi_fund_head ffh
						 where ffd.d_fund_id = ffh.id
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						   and ffh.FI_STATUS in (2, 7)
						 group by ffd.d_pay_code,TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM'))FRB,
						 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
						 FIL_PROJECT_HEAD FPH,
						 FIL_CUST_CLIENT FCC,
						 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
						(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
						 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
						 AND FRPH.PROJECT_ID=FPH.ID
						 AND FPH.CLIENT_ID=FCC.ID
						 AND FCC.TYPE=SEX.CODE
						 AND FPH.PLATFORM_TYPE=YWLX.CODE
	   ) 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">ORDER BY PLATFORM_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">ORDER BY TYPE_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_LEVER DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY AREA_NAME DESC</if>
	  )CC <if test="PAGE_END!=null and PAGE_END!=''">	WHERE ROWNUM &lt;= #{PAGE_END}</if>) CCC <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''"> WHERE CCC.RN >= #{PAGE_BEGIN}</if>

	</select>
	
	<select id="showFundList_count" parameterType="map" resultType="int">
	SELECT 
		count(1)
	FROM (  SELECT CC.*,ROWNUM RN FROM (SELECT * FROM(
			SELECT
						         DISTINCT
						         FCC.NAME CUST_NAME,
							     FCC.CUST_LEVER
					         ,SEX.FLAG TYPE_NAME,
							     FPH.PROVINCE_NAME AREA_NAME,
							     YWLX.FLAG PLATFORM_NAME,
							     FPH.CLERK_NAME,
							     FRPH.PAYLIST_CODE,
						       FRB.ZJ ZUJIN,
						       FRB.BENJIN,
						       FRB.LIXI,
						       FRB.WYJ WEIYUEJIN,
						       FRB.SQK,
						       FRB.BZJ,
						       FRB.SXF,
						       FRB.BXF,
						       FRB.QTFY
	           
							FROM 
							(SELECT ffd.d_pay_code,
								   TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM')PAY_DATE,
							       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
							       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
							       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
							       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
							       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
							       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
							       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
							       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
							       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY,
							       sum(NVL(ffd.d_pay_money,0)) allmoney
							  FROM fi_fund_detail ffd, fi_fund_head ffh
							 where ffd.d_fund_id = ffh.id
							   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
							  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
							  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
							  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
							  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
							  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
							   and ffh.FI_STATUS in (2, 7)
							 group by ffd.d_pay_code,TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM'))FRB,
							 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
							 FIL_PROJECT_HEAD FPH,
							 FIL_CUST_CLIENT FCC,
							 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
							(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
							 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
							 AND FRPH.PROJECT_ID=FPH.ID
							 AND FPH.CLIENT_ID=FCC.ID
							 AND FCC.TYPE=SEX.CODE
							 AND FPH.PLATFORM_TYPE=YWLX.CODE
	   ) 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_LEVER DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY AREA_NAME DESC</if>
	  )CC) CCC 
	</select>
	
	<select id="showGroupFundType" parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME  DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME  DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE</if>
		from (
			SELECT 
	         DISTINCT  FCC.NAME CUST_NAME,
		     FCC.CUST_LEVER,SEX.FLAG TYPE_NAME,
		     TSA.NAME AREA_NAME,
		     YWLX.FLAG PLATFORM_NAME,
		     FPH.CLERK_NAME,
		     FRB.PAYLIST_CODE,
	       CASE
	         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
	          FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
	         ELSE
	          FRB.SQK_QC
	       END ZUJIN,
	       CASE
	         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
	          FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
	         ELSE
	          FRB.BENJIN
	       END BENJIN,
	       FRB.LIXI,
	       YSWYJ.WYJ + FO.FX WYJ,
	       CASE
	         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
	          FRB.SQK_QC
	         ELSE
	          FRB.SQK_QM
	       END SQK,
	       FRB.BZJ,
	       FRB.SXF,
	       FRB.ALLMONEY,
	       FRB.BXF,
	       FRB.QTFY
	  FROM (SELECT FR.PAYLIST_CODE,
	               FR.PROJECT_ID,
	               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', FR.BEGINNING_MONEY),
	                       0)) BENJIN,
	               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息', FR.BEGINNING_MONEY),
	                       0)) LIXI,
	               SUM(NVL(DECODE(FR.BEGINNING_NAME,
	                              '保证金',
	                              FR.BEGINNING_MONEY),
	                       0)) BZJ,
	               SUM(NVL(DECODE(FR.BEGINNING_NAME,
	                              '手续费',
	                              FR.BEGINNING_MONEY),
	                       0)) SXF,
	               SUM(NVL(DECODE(FR.BEGINNING_NAME,
	                              '保险费',
	                              FR.BEGINNING_MONEY),
	                       0)) BXF,
	               SUM(NVL(DECODE(FR.ITEM_FLAG, '2', FR.BEGINNING_MONEY), 0)) ZUJIN,
	               SUM(NVL(DECODE(FR.ITEM_FLAG, '1', FR.BEGINNING_MONEY), 0)) SQK_QM,
	               SUM(NVL(DECODE(FR.ITEM_FLAG, '1', FR.BEGINNING_MONEY), 0)) +
	               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1', FR.BEGINNING_MONEY), 0)) SQK_QC,
	               SUM(NVL(DECODE(FR.ITEM_FLAG, '4', FR.BEGINNING_MONEY), 0)) QTFY,
	               SUM(FR.BEGINNING_MONEY)ALLMONEY
	          FROM FI_R_BEGINNING FR
	          <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	          </where>
	         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG) FRB,
	       (SELECT FFD.D_PAY_CODE, SUM(NVL(FFD.D_RECEIVE_MONEY, 0)) WYJ
	          FROM FI_FUND_DETAIL FFD
	         WHERE FFD.D_PAY_PROJECT = '违约金'
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_RECEIVE_DATEE)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_RECEIVE_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_RECEIVE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_RECEIVE_DATE)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_RECEIVE_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_RECEIVE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_RECEIVE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_RECEIVE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	         GROUP BY FFD.D_PAY_CODE) YSWYJ,
	       (SELECT ZRR.PAY_CODE, SUM(NVL(ZRR.PENALTY_RECE, 0)) FX
	          FROM FI_OVERDUE ZRR
	         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
	               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	         GROUP BY ZRR.PAY_CODE) FO,
	       FIL_PROJECT_HEAD FPH,
	       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
	       FIL_CUST_CLIENT FCC,
				 T_SYS_AREA TSA,
       (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
       (SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
	 WHERE FRB.PAYLIST_CODE = YSWYJ.D_PAY_CODE(+)
	   AND FRB.PAYLIST_CODE = FO.PAY_CODE(+)
	   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
	   AND FRB.PROJECT_ID = FPH.ID
	   AND FPH.AREA_ID=TSA.ID
	   AND SEX.CODE=FCC.TYPE
	   AND YWLX.CODE=FPH.PLATFORM_TYPE
	   AND FPH.CLIENT_ID = FCC.ID
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">left join t_sys_data_dictionary tsdd on tsdd.type='客户类型' and tsdd.flag=aa.TYPE_NAME</if>
		
		group by 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME </if>
	</select>
	
	<select id="dictionaryByTypeCode" parameterType="map" resultType="map">
		select tsdd.TYPE,tsdd.FLAG,tsdd.CODE,tsdd.SHORTNAME from t_sys_data_dictionary tsdd where tsdd.type=#{TYPE} and tsdd.code=#{CODE} and rownum=1
	</select>
	
	<select id="showGroupFundFX" parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(t2.COUNTS,0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(ALLMONEY) COUNTS FROM (
				  	select to_char(aa.CREATE_TIME,'YYYY-MM') CREATE_DATE,AA.ALLMONEY
					from (
							SELECT 
						       DISTINCT  FCC.NAME CUST_NAME,
							     FCC.CUST_LEVER,SEX.FLAG TYPE_NAME,
							     TSA.NAME AREA_NAME,
							     YWLX.FLAG PLATFORM_NAME,
							     FPH.CLERK_NAME,
							     FRB.PAYLIST_CODE,
							     FPH.PLATFORM_TYPE,
							     TO_DATE(FRB.PAY_DATE,'YYYY-MM') CREATE_TIME,
						       CASE
						         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
						          FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
						         ELSE
						          FRB.SQK_QC
						       END ZUJIN,
						       CASE
						         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
						          FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
						         ELSE
						          FRB.BENJIN
						       END BENJIN,
						       FRB.LIXI,
						       NVL(YSWYJ.WYJ,0) + NVL(FO.FX,0) WYJ,
						       CASE
						         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
						          FRB.SQK_QC
						         ELSE
						          FRB.SQK_QM
						       END SQK,
						       FRB.BZJ,
						       FRB.SXF,
						       FRB.BXF,
						       NVL(FRB.ALLMONEY,0)+NVL(YSWYJ.WYJ,0)+NVL(FO.FX,0) ALLMONEY,
						       FRB.QTFY
						  FROM (SELECT FR.PAYLIST_CODE,
						               FR.PROJECT_ID,
						                TO_CHAR(FR.BEGINNING_RECEIVE_DATA,
                                                    'YYYY-MM') PAY_DATE,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', FR.BEGINNING_MONEY),
						                       0)) BENJIN,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息', FR.BEGINNING_MONEY),
						                       0)) LIXI,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME,
						                              '保证金',
						                              FR.BEGINNING_MONEY),
						                       0)) BZJ,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME,
						                              '手续费',
						                              FR.BEGINNING_MONEY),
						                       0)) SXF,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME,
						                              '保险费',
						                              FR.BEGINNING_MONEY),
						                       0)) BXF,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '2', FR.BEGINNING_MONEY), 0)) ZUJIN,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '1', FR.BEGINNING_MONEY), 0)) SQK_QM,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '1', FR.BEGINNING_MONEY), 0)) +
						               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1', FR.BEGINNING_MONEY), 0)) SQK_QC,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '4', FR.BEGINNING_MONEY), 0)) QTFY,
						               SUM(NVL(FR.BEGINNING_MONEY,0))ALLMONEY
						          FROM FI_R_BEGINNING FR
						          <where>
					  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						          </where>
						         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG,
						          TO_CHAR(FR.BEGINNING_RECEIVE_DATA,
                                                    'YYYY-MM')) FRB,
						       (SELECT FFD.D_PAY_CODE,
						       		   TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM') PAY_DATE, 
						       		   SUM(NVL(FFD.D_RECEIVE_MONEY, 0)) WYJ
						          FROM FI_FUND_DETAIL FFD
						         WHERE FFD.D_PAY_PROJECT = '违约金'
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_RECEIVE_DATEE)>=trunc(sysdate, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_RECEIVE_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_RECEIVE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_RECEIVE_DATE)>=trunc(sysdate, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_RECEIVE_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_RECEIVE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_RECEIVE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_RECEIVE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						         GROUP BY FFD.D_PAY_CODE,
						         TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM')) YSWYJ,
						       (SELECT ZRR.PAY_CODE,TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM') PAY_DATE, SUM(NVL(ZRR.PENALTY_RECE, 0)) FX
						          FROM FI_OVERDUE ZRR
						         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
						               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						         GROUP BY ZRR.PAY_CODE,TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM')) FO,
						       FIL_PROJECT_HEAD FPH,
						       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
						       FIL_CUST_CLIENT FCC,
									 T_SYS_AREA TSA,
					       (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
					       (SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
						 WHERE FRB.PAYLIST_CODE = YSWYJ.D_PAY_CODE(+)
						   AND FRB.PAYLIST_CODE = FO.PAY_CODE(+)
 						   AND FRB.PAY_DATE = YSWYJ.PAY_DATE(+)
                           AND FRB.PAY_DATE = FO.PAY_DATE(+)
						   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
						   AND FRB.PROJECT_ID = FPH.ID
						   AND FPH.AREA_ID=TSA.ID
						   AND SEX.CODE=FCC.TYPE
						   AND YWLX.CODE=FPH.PLATFORM_TYPE
						   AND FPH.CLIENT_ID = FCC.ID
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">AND aa.PLATFORM_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">AND aa.TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">AND aa.CUST_LEVER =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">AND aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">AND aa.AREA_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE
		
	</select>
	
	<select id="REPORT_X_MONTH" parameterType="map" resultType="map">
		 select b.CREATE_DATE X_VALUE from (
			SELECT 
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
			CREATE_DATE
	  		FROM DUAL CONNECT BY ROWNUM &lt;
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
		) b order by b.CREATE_DATE
	</select>
	
	<select id="CUSTCREATE_TIME" parameterType="map" resultType="map">
		select to_char(min(fcc.CREATE_TIME),'yyyy-MM-dd') START_TIME,to_char(sysdate,'yyyy-MM-dd') END_TIME
			from fil_cust_client fcc 
			left join (
			     select fph.client_id,count(fph.client_id) CUST_NUMBER from fil_project_head fph where fph.status>=8 and fph.status !=9 and fph.status !=27 group by fph.client_id
			) a on fcc.id=a.client_id
	</select>
	
	<select id="FUND_REPORT_TYPE"  parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME  DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER DATA_TYPE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME  DATA_TYPE</if>
		from (

							SELECT 
						       DISTINCT  FCC.NAME CUST_NAME,
							     FCC.CUST_LEVER,SEX.FLAG TYPE_NAME,
							     TSA.NAME AREA_NAME,
							     YWLX.FLAG PLATFORM_NAME,
							     FPH.CLERK_NAME,
							     FRB.PAYLIST_CODE,
							     FPH.PLATFORM_TYPE,
							     TO_DATE(FRB.PAY_DATE,'YYYY-MM') CREATE_TIME,
						       CASE
						         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
						          FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
						         ELSE
						          FRB.SQK_QC
						       END ZUJIN,
						       CASE
						         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
						          FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
						         ELSE
						          FRB.BENJIN
						       END BENJIN,
						       FRB.LIXI,
						       YSWYJ.WYJ + FO.FX WYJ,
						       CASE
						         WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
						          FRB.SQK_QC
						         ELSE
						          FRB.SQK_QM
						       END SQK,
						       FRB.BZJ,
						       FRB.SXF,
						       FRB.BXF,
						       FRB.QTFY
						  FROM (SELECT FR.PAYLIST_CODE,
						               FR.PROJECT_ID,
						                TO_CHAR(FR.BEGINNING_RECEIVE_DATA,
                                                    'YYYY-MM') PAY_DATE,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', FR.BEGINNING_MONEY),
						                       0)) BENJIN,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息', FR.BEGINNING_MONEY),
						                       0)) LIXI,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME,
						                              '保证金',
						                              FR.BEGINNING_MONEY),
						                       0)) BZJ,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME,
						                              '手续费',
						                              FR.BEGINNING_MONEY),
						                       0)) SXF,
						               SUM(NVL(DECODE(FR.BEGINNING_NAME,
						                              '保险费',
						                              FR.BEGINNING_MONEY),
						                       0)) BXF,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '2', FR.BEGINNING_MONEY), 0)) ZUJIN,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '1', FR.BEGINNING_MONEY), 0)) SQK_QM,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '1', FR.BEGINNING_MONEY), 0)) +
						               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1', FR.BEGINNING_MONEY), 0)) SQK_QC,
						               SUM(NVL(DECODE(FR.ITEM_FLAG, '4', FR.BEGINNING_MONEY), 0)) QTFY
						          FROM FI_R_BEGINNING FR
						          <where>
					  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						          </where>
						         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG,
						          TO_CHAR(FR.BEGINNING_RECEIVE_DATA,
                                                    'YYYY-MM')) FRB,
						       (SELECT FFD.D_PAY_CODE,
						       		   TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM') PAY_DATE, 
						       		   SUM(NVL(FFD.D_RECEIVE_MONEY, 0)) WYJ
						          FROM FI_FUND_DETAIL FFD
						         WHERE FFD.D_PAY_PROJECT = '违约金'
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_RECEIVE_DATEE)>=trunc(sysdate, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_RECEIVE_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_RECEIVE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_RECEIVE_DATE)>=trunc(sysdate, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_RECEIVE_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_RECEIVE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_RECEIVE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
								   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_RECEIVE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						         GROUP BY FFD.D_PAY_CODE,
						         TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM')) YSWYJ,
						       (SELECT ZRR.PAY_CODE,TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM') PAY_DATE, SUM(NVL(ZRR.PENALTY_RECE, 0)) FX
						          FROM FI_OVERDUE ZRR
						         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
						               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
									   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						         GROUP BY ZRR.PAY_CODE,TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM')) FO,
						       FIL_PROJECT_HEAD FPH,
						       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
						       FIL_CUST_CLIENT FCC,
									 T_SYS_AREA TSA,
					       (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
					       (SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
						 WHERE FRB.PAYLIST_CODE = YSWYJ.D_PAY_CODE(+)
						   AND FRB.PAYLIST_CODE = FO.PAY_CODE(+)
 						   AND FRB.PAY_DATE = YSWYJ.PAY_DATE(+)
                           AND FRB.PAY_DATE = FO.PAY_DATE(+)
						   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
						   AND FRB.PROJECT_ID = FPH.ID
						   AND FPH.AREA_ID=TSA.ID
						   AND SEX.CODE=FCC.TYPE
						   AND YWLX.CODE=FPH.PLATFORM_TYPE
						   AND FPH.CLIENT_ID = FCC.ID
						   <if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID IN ${SYS_ORGIDS_} </if>
						   <if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND FPH.CLERK_ID = #{SYS_CLERK_ID_} </if>
		) aa
<!-- 		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> where rownum=1</if> -->
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PLATFORM_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.TYPE_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CUST_LEVER </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">group by aa.CLERK_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">group by aa.AREA_NAME </if>
<!-- 		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.CUST_STATUS</if> -->
<!-- 		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CLERK_NAME,aa.CLERK_CODE</if> -->
		
	</select>
	
  <select id="showFundSSList" parameterType="map" resultType="map">
	SELECT 
		${SQL_COLUMN} 
	FROM (  SELECT CC.*,ROWNUM RN FROM (SELECT * FROM(
			SELECT
			FCC.NAME,
			SEX.FLAG TYPE_NAME,
			FCC.CUST_LEVER,
			FPH.CLERK_NAME,
			FPH.PROVINCE_NAME AREA_NAME,
			YWLX.FLAG PLATFORM_NAME,
			FRPH.PAYLIST_CODE,
			FRB.ZJ,
			FRB.BENJIN,
			FRB.LIXI,
			FRB.WYJ,
			FRB.SQK,
			FRB.BZJ,
			FRB.SXF,
			FRB.BXF,
			FRB.QTFY
			FROM 
			(SELECT ffd.d_pay_code,
			       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
			       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
			       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
			       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
			       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
			       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
			       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
			       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
			       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY
			  FROM fi_fund_detail ffd, fi_fund_head ffh
			 where ffd.d_fund_id = ffh.id
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
				  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
				  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
				  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
				  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
				  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			   and ffh.FI_STATUS in (2, 7)
			 group by ffd.d_pay_code)FRB,
			 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
			 FIL_PROJECT_HEAD FPH,
			 FIL_CUST_CLIENT FCC,
			 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
			(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
			 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
			 AND FRPH.PROJECT_ID=FPH.ID
			 AND FPH.CLIENT_ID=FCC.ID
			 AND FCC.TYPE=SEX.CODE
			 AND FPH.PLATFORM_TYPE=YWLX.CODE
	   ) 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">ORDER BY PLATFORM_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">ORDER BY TYPE_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_LEVER DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY AREA_NAME DESC</if>
	  )CC <if test="PAGE_END!=null and PAGE_END!=''">WHERE ROWNUM &lt;= #{PAGE_END}</if>) CCC <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''"> WHERE CCC.RN >= #{PAGE_BEGIN}</if>

	</select>
	
	
	<select id="showFundSSList_count" parameterType="map" resultType="int">
	SELECT 
		count(1)
	FROM (  SELECT CC.*,ROWNUM RN FROM (SELECT * FROM(SELECT
			FCC.NAME,
			SEX.FLAG TYPE_NAME,
			FCC.CUST_LEVER,
			FPH.CLERK_NAME,
			FPH.PROVINCE_NAME AREA_NAME,
			YWLX.FLAG PLATFORM_NAME,
			FRPH.PAYLIST_CODE,
			FRB.ZJ,
			FRB.BENJIN,
			FRB.LIXI,
			FRB.WYJ,
			FRB.SQK,
			FRB.BZJ,
			FRB.SXF,
			FRB.BXF,
			FRB.QTFY
			FROM 
			(SELECT ffd.d_pay_code,
			       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
			       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
			       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
			       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
			       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
			       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
			       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
			       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
			       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY
			  FROM fi_fund_detail ffd, fi_fund_head ffh
			 where ffd.d_fund_id = ffh.id
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			   and ffh.FI_STATUS in (2, 7)
			 group by ffd.d_pay_code)FRB,
			 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
			 FIL_PROJECT_HEAD FPH,
			 FIL_CUST_CLIENT FCC,
			 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
			(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
			 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
			 AND FRPH.PROJECT_ID=FPH.ID
			 AND FPH.CLIENT_ID=FCC.ID
			 AND FCC.TYPE=SEX.CODE
			 AND FPH.PLATFORM_TYPE=YWLX.CODE
	   ) 
	  )CC) CCC 
	</select>	
	
	
	<select id="showGroupFundSSType" parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME DATA_TYPE,sum(aa.allmoney) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME  DATA_TYPE,sum(aa.allmoney) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER DATA_TYPE,sum(aa.allmoney) DATA_VALUE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE,sum(aa.allmoney) DATA_VALUE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME  DATA_TYPE,sum(aa.allmoney) DATA_VALUE</if>
		from (
			SELECT
			FCC.NAME,
			SEX.FLAG TYPE_NAME,
			FCC.CUST_LEVER,
			FPH.CLERK_NAME,
			FPH.PROVINCE_NAME AREA_NAME,
			YWLX.FLAG PLATFORM_NAME,
			FRPH.PAYLIST_CODE,
			FRB.ALLMONEY,
			FRB.ZJ,
			FRB.BENJIN,
			FRB.LIXI,
			FRB.WYJ,
			FRB.SQK,
			FRB.BZJ,
			FRB.SXF,
			FRB.BXF,
			FRB.QTFY
			FROM 
			(SELECT ffd.d_pay_code,
			       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
			       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
			       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
			       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
			       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
			       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
			       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
			       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
			       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY,
			       sum(ffd.d_pay_money) allmoney
			  FROM fi_fund_detail ffd, fi_fund_head ffh
			 where ffd.d_fund_id = ffh.id
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			   and ffh.FI_STATUS in (2, 7)
			 group by ffd.d_pay_code)FRB,
			 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
			 FIL_PROJECT_HEAD FPH,
			 FIL_CUST_CLIENT FCC,
			 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
			(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
			 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
			 AND FRPH.PROJECT_ID=FPH.ID
			 AND FPH.CLIENT_ID=FCC.ID
			 AND FCC.TYPE=SEX.CODE
			 AND FPH.PLATFORM_TYPE=YWLX.CODE
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">left join t_sys_data_dictionary tsdd on tsdd.type='客户类型' and tsdd.flag=aa.TYPE_NAME</if>
		
		group by 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME </if>
	</select>
	
	
	<select id="FUNDSS_REPORT_TYPE"  parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME  DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER DATA_TYPE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME  DATA_TYPE</if>
		from (
			SELECT
			FCC.NAME,
			SEX.FLAG TYPE_NAME,
			FCC.CUST_LEVER,
			FPH.CLERK_NAME,
			FPH.PROVINCE_NAME AREA_NAME,
			YWLX.FLAG PLATFORM_NAME,
			FRPH.PAYLIST_CODE,
			FRB.ZJ,
			FRB.BENJIN,
			FRB.LIXI,
			FRB.WYJ,
			FRB.SQK,
			FRB.BZJ,
			FRB.SXF,
			FRB.BXF,
			FRB.QTFY
			FROM 
			(SELECT ffd.d_pay_code,
			       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
			       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
			       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
			       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
			       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
			       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
			       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
			       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
			       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY
			  FROM fi_fund_detail ffd, fi_fund_head ffh
			 where ffd.d_fund_id = ffh.id
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			   and ffh.FI_STATUS in (2, 7)
			 group by ffd.d_pay_code)FRB,
			 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
			 FIL_PROJECT_HEAD FPH,
			 FIL_CUST_CLIENT FCC,
			 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
			(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
			 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
			 AND FRPH.PROJECT_ID=FPH.ID
			 AND FPH.CLIENT_ID=FCC.ID
			 AND FCC.TYPE=SEX.CODE
			 AND FPH.PLATFORM_TYPE=YWLX.CODE
			 <if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID IN ${SYS_ORGIDS_} </if>
			 <if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND FPH.CLERK_ID = #{SYS_CLERK_ID_} </if>
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PLATFORM_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.TYPE_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CUST_LEVER </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">group by aa.CLERK_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">group by aa.AREA_NAME </if>
	</select>
	
	
	<select id="showGroupFundSSFX" parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(t2.COUNTS,0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(ALLMONEY) COUNTS FROM (
				  	select aa.CREATE_TIME CREATE_DATE,AA.ALLMONEY
					from (
						SELECT
						FRB.PAY_DATE CREATE_TIME,
						FCC.NAME,
						SEX.FLAG TYPE_NAME,
						FCC.CUST_LEVER,
						FPH.CLERK_NAME,
						FPH.PROVINCE_NAME AREA_NAME,
						YWLX.FLAG PLATFORM_NAME,
						FRPH.PAYLIST_CODE,
						FRB.ZJ,
						FRB.BENJIN,
						FRB.LIXI,
						FRB.WYJ,
						FRB.SQK,
						FRB.BZJ,
						FRB.SXF,
						FRB.BXF,
						FRB.QTFY,
						FRB.ALLMONEY
						FROM 
						(SELECT ffd.d_pay_code,
							   TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM')PAY_DATE,
						       sum(nvl(decode(ffd.D_STATUS, '1', ffd.d_pay_money), 0)) ZJ,
						       sum(nvl(decode(ffd.d_pay_project, '本金', ffd.d_pay_money), 0)) benjin,
						       sum(nvl(decode(ffd.d_pay_project, '利息', ffd.d_pay_money), 0)) lixi,
						       sum(nvl(decode(ffd.D_STATUS, '2', ffd.d_pay_money), 0)) wyj,
						       sum(nvl(decode(ffd.D_STATUS, '0', ffd.d_pay_money), 0)) SQK,
						       sum(nvl(decode(ffd.d_pay_project, '保证金', ffd.d_pay_money), 0)) bzj,
						       sum(nvl(decode(ffd.d_pay_project, '手续费', ffd.d_pay_money), 0)) sxf,
						       sum(nvl(decode(ffd.d_pay_project, '保险费', ffd.d_pay_money), 0)) bxf,
						       sum(nvl(decode(ffd.D_STATUS, '4', ffd.d_pay_money), 0)) QTFY,
						       sum(NVL(ffd.d_pay_money,0)) allmoney
						  FROM fi_fund_detail ffd, fi_fund_head ffh
						 where ffd.d_fund_id = ffh.id
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'mm')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'mm') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FFD.D_REALITY_DATE)>=trunc(sysdate, 'yy')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FFD.D_REALITY_DATE)&lt;trunc(sysdate, 'yy') and trunc(FFD.D_REALITY_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FFD.D_REALITY_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
						  <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FFD.D_REALITY_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
						   and ffh.FI_STATUS in (2, 7)
						 group by ffd.d_pay_code,TO_CHAR(FFD.D_RECEIVE_DATE,'YYYY-MM'))FRB,
						 FIL_RENT_PLAN_HEAD_MAX_V FRPH,
						 FIL_PROJECT_HEAD FPH,
						 FIL_CUST_CLIENT FCC,
						 (SELECT td.code,td.flag FROM T_SYS_DATA_DICTIONARY TD WHERE TD.TYPE='客户类型') sex,
						(SELECT td.code,td.flag FROM T_SYS_SITE_DICTIONARY TD WHERE TD.TYPE='业务类型') YWLX
						 WHERE FRB.D_PAY_CODE=FRPH.PAYLIST_CODE
						 AND FRPH.PROJECT_ID=FPH.ID
						 AND FPH.CLIENT_ID=FCC.ID
						 AND FCC.TYPE=SEX.CODE
						 AND FPH.PLATFORM_TYPE=YWLX.CODE
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">AND aa.PLATFORM_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">AND aa.TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">AND aa.CUST_LEVER =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">AND aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">AND aa.AREA_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE
	</select>
	<select id="showGroupFundWSType" parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME  DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME  DATA_TYPE,SUM(aa.ALLMONEY) DATA_VALUE</if>
		from (
SELECT DISTINCT FCC.NAME CUST_NAME,
                FCC.CUST_LEVER,
                SEX.FLAG TYPE_NAME,
                TSA.NAME AREA_NAME,
                YWLX.FLAG PLATFORM_NAME,
                FPH.CLERK_NAME,
                FRB.PAYLIST_CODE,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.SQK_QC
                END ZUJIN,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.BENJIN
                END BENJIN,
                FRB.LIXI,
                NVL(FO.FX,0) WYJ,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.SQK_QC
                  ELSE
                   FRB.SQK_QM
                END SQK,
                FRB.BZJ,
                FRB.SXF,
                FRB.ALLMONEY,
                FRB.BXF,
                FRB.QTFY
  FROM (SELECT FR.PAYLIST_CODE,
               FR.PROJECT_ID,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BENJIN,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) LIXI,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保证金',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BZJ,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '手续费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) SXF,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保险费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BXF,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '2',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) ZUJIN,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QM,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) +
               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QC,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '4',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) QTFY,
               SUM(  CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END) ALLMONEY
          FROM FI_R_BEGINNING FR
	          <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	          </where>
         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG) FRB,
       
       (SELECT ZRR.PAY_CODE, SUM(NVL(ZRR.PENALTY_RECE-NVL(ZRR.PENALTY_PAID,0), 0)) FX
          FROM FI_OVERDUE ZRR
         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
         GROUP BY ZRR.PAY_CODE) FO,
       FIL_PROJECT_HEAD FPH,
       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
       FIL_CUST_CLIENT FCC,
       T_SYS_AREA TSA,
       (SELECT td.code, td.flag
          FROM T_SYS_DATA_DICTIONARY TD
         WHERE TD.TYPE = '客户类型') sex,
       (SELECT td.code, td.flag
          FROM T_SYS_SITE_DICTIONARY TD
         WHERE TD.TYPE = '业务类型') YWLX
 WHERE FRB.PAYLIST_CODE = FO.PAY_CODE(+)
   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
   AND FRB.PROJECT_ID = FPH.ID
   and fph.area_id = tsa.id
   AND SEX.CODE = FCC.TYPE
   AND YWLX.CODE = FPH.PLATFORM_TYPE
   AND FPH.CLIENT_ID = FCC.ID
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">left join t_sys_data_dictionary tsdd on tsdd.type='客户类型' and tsdd.flag=aa.TYPE_NAME</if>
		
		group by 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME </if>
	</select>
	<select id="showFundWSList" parameterType="map" resultType="map">
	SELECT 
		${SQL_COLUMN} 
	FROM (  SELECT CC.*,ROWNUM RN FROM (SELECT * FROM(
		SELECT DISTINCT FCC.NAME CUST_NAME,
		                FCC.CUST_LEVER,
		                SEX.FLAG TYPE_NAME,
		                TSA.NAME AREA_NAME,
		                YWLX.FLAG PLATFORM_NAME,
		                FPH.CLERK_NAME,
		                FRB.PAYLIST_CODE,
		                CASE
		                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
		                   FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
		                  ELSE
		                   FRB.SQK_QC
		                END ZUJIN,
		                CASE
		                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
		                   FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
		                  ELSE
		                   FRB.BENJIN
		                END BENJIN,
		                FRB.LIXI,
		                NVL(FO.FX,0) WYJ,
		                CASE
		                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
		                   FRB.SQK_QC
		                  ELSE
		                   FRB.SQK_QM
		                END SQK,
		                FRB.BZJ,
		                FRB.SXF,
		                FRB.ALLMONEY,
		                FRB.BXF,
		                FRB.QTFY
		  FROM (SELECT FR.PAYLIST_CODE,
		               FR.PROJECT_ID,
		               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
		                       0)) BENJIN,
		               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
		                       0)) LIXI,
		               SUM(NVL(DECODE(FR.BEGINNING_NAME,
		                              '保证金',
		                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
		                       0)) BZJ,
		               SUM(NVL(DECODE(FR.BEGINNING_NAME,
		                              '手续费',
		                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
		                       0)) SXF,
		               SUM(NVL(DECODE(FR.BEGINNING_NAME,
		                              '保险费',
		                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
		                       0)) BXF,
		               SUM(NVL(DECODE(FR.ITEM_FLAG, '2',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) ZUJIN,
		               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QM,
		               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) +
		               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QC,
		               SUM(NVL(DECODE(FR.ITEM_FLAG, '4',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) QTFY,
		               SUM(  CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END) ALLMONEY
		          FROM FI_R_BEGINNING FR
			          <where>
		  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
					   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
					   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
					   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
					   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
					   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			          </where>
		         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG) FRB,
		       
		       (SELECT ZRR.PAY_CODE, SUM(NVL(ZRR.PENALTY_RECE-NVL(ZRR.PENALTY_PAID,0), 0)) FX
		          FROM FI_OVERDUE ZRR
		         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
		               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
						   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
		         GROUP BY ZRR.PAY_CODE) FO,
		       FIL_PROJECT_HEAD FPH,
		       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
		       FIL_CUST_CLIENT FCC,
		       T_SYS_AREA TSA,
		       (SELECT td.code, td.flag
		          FROM T_SYS_DATA_DICTIONARY TD
		         WHERE TD.TYPE = '客户类型') sex,
		       (SELECT td.code, td.flag
		          FROM T_SYS_SITE_DICTIONARY TD
		         WHERE TD.TYPE = '业务类型') YWLX
		 WHERE FRB.PAYLIST_CODE = FO.PAY_CODE(+)
		   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
		   AND FRB.PROJECT_ID = FPH.ID
		   and fph.area_id = tsa.id
		   AND SEX.CODE = FCC.TYPE
		   AND YWLX.CODE = FPH.PLATFORM_TYPE
		   AND FPH.CLIENT_ID = FCC.ID
	   ) 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">ORDER BY PLATFORM_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">ORDER BY TYPE_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_LEVER DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY AREA_NAME DESC</if>
	  )CC <if test="PAGE_END!=null and PAGE_END!=''">	WHERE ROWNUM &lt;= #{PAGE_END}</if>) CCC <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''"> WHERE CCC.RN >= #{PAGE_BEGIN}</if>

	</select>
	
	<select id="showFundWSList_count" parameterType="map" resultType="int">
	SELECT 
		count(1)
FROM (  SELECT CC.*,ROWNUM RN FROM (SELECT * FROM(
SELECT DISTINCT FCC.NAME CUST_NAME,
                FCC.CUST_LEVER,
                SEX.FLAG TYPE_NAME,
                TSA.NAME AREA_NAME,
                YWLX.FLAG PLATFORM_NAME,
                FPH.CLERK_NAME,
                FRB.PAYLIST_CODE,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.SQK_QC
                END ZUJIN,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.BENJIN
                END BENJIN,
                FRB.LIXI,
                NVL(FO.FX,0) WYJ,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.SQK_QC
                  ELSE
                   FRB.SQK_QM
                END SQK,
                FRB.BZJ,
                FRB.SXF,
                FRB.ALLMONEY,
                FRB.BXF,
                FRB.QTFY
  FROM (SELECT FR.PAYLIST_CODE,
               FR.PROJECT_ID,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BENJIN,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) LIXI,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保证金',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BZJ,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '手续费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) SXF,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保险费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BXF,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '2',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) ZUJIN,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QM,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) +
               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QC,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '4',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) QTFY,
               SUM(  CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END) ALLMONEY
          FROM FI_R_BEGINNING FR
	          <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	          </where>
         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG) FRB,
       
       (SELECT ZRR.PAY_CODE, SUM(NVL(ZRR.PENALTY_RECE-NVL(ZRR.PENALTY_PAID,0), 0)) FX
          FROM FI_OVERDUE ZRR
         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
         GROUP BY ZRR.PAY_CODE) FO,
       FIL_PROJECT_HEAD FPH,
       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
       FIL_CUST_CLIENT FCC,
       T_SYS_AREA TSA,
       (SELECT td.code, td.flag
          FROM T_SYS_DATA_DICTIONARY TD
         WHERE TD.TYPE = '客户类型') sex,
       (SELECT td.code, td.flag
          FROM T_SYS_SITE_DICTIONARY TD
         WHERE TD.TYPE = '业务类型') YWLX
 WHERE FRB.PAYLIST_CODE = FO.PAY_CODE(+)
   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
   AND FRB.PROJECT_ID = FPH.ID
   and fph.area_id = tsa.id
   AND SEX.CODE = FCC.TYPE
   AND YWLX.CODE = FPH.PLATFORM_TYPE
   AND FPH.CLIENT_ID = FCC.ID
	   ) 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_LEVER DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_NAME DESC</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY AREA_NAME DESC</if>
	  )CC) CCC 
	</select>
	<select id="FUNDWS_REPORT_TYPE"  parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PLATFORM_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.TYPE_NAME  DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_LEVER DATA_TYPE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.AREA_NAME  DATA_TYPE</if>
		from (

SELECT DISTINCT FCC.NAME CUST_NAME,
                FCC.CUST_LEVER,
                SEX.FLAG TYPE_NAME,
                TSA.NAME AREA_NAME,
                YWLX.FLAG PLATFORM_NAME,
                FPH.CLERK_NAME,
                FRB.PAYLIST_CODE,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.SQK_QC
                END ZUJIN,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.BENJIN
                END BENJIN,
                FRB.LIXI,
                NVL(FO.FX,0) WYJ,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.SQK_QC
                  ELSE
                   FRB.SQK_QM
                END SQK,
                FRB.BZJ,
                FRB.SXF,
                FRB.ALLMONEY,
                FRB.BXF,
                FRB.QTFY
  FROM (SELECT FR.PAYLIST_CODE,
               FR.PROJECT_ID,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BENJIN,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) LIXI,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保证金',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BZJ,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '手续费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) SXF,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保险费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BXF,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '2',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) ZUJIN,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QM,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) +
               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QC,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '4',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) QTFY,
               SUM(  CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END) ALLMONEY
          FROM FI_R_BEGINNING FR
	          <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	          </where>
         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG) FRB,
       
       (SELECT ZRR.PAY_CODE, SUM(NVL(ZRR.PENALTY_RECE-NVL(ZRR.PENALTY_PAID,0), 0)) FX
          FROM FI_OVERDUE ZRR
         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
         GROUP BY ZRR.PAY_CODE) FO,
       FIL_PROJECT_HEAD FPH,
       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
       FIL_CUST_CLIENT FCC,
       T_SYS_AREA TSA,
       (SELECT td.code, td.flag
          FROM T_SYS_DATA_DICTIONARY TD
         WHERE TD.TYPE = '客户类型') sex,
       (SELECT td.code, td.flag
          FROM T_SYS_SITE_DICTIONARY TD
         WHERE TD.TYPE = '业务类型') YWLX
 WHERE FRB.PAYLIST_CODE = FO.PAY_CODE(+)
   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
   AND FRB.PROJECT_ID = FPH.ID
   and fph.area_id = tsa.id
   AND SEX.CODE = FCC.TYPE
   AND YWLX.CODE = FPH.PLATFORM_TYPE
   AND FPH.CLIENT_ID = FCC.ID
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PLATFORM_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.TYPE_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CUST_LEVER </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">group by aa.CLERK_NAME </if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">group by aa.AREA_NAME </if>
	</select>
	<select id="showGroupFundWSFX" parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(t2.COUNTS,0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(ALLMONEY) COUNTS FROM (
				  	select  aa.CREATE_TIME  CREATE_DATE,AA.ALLMONEY
					from (
SELECT DISTINCT FCC.NAME CUST_NAME,
                FCC.CUST_LEVER,
                SEX.FLAG TYPE_NAME,
                TSA.NAME AREA_NAME,
                YWLX.FLAG PLATFORM_NAME,
                FRB.PAY_DATE CREATE_TIME,
                FPH.CLERK_NAME,
                FRB.PAYLIST_CODE,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.ZUJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.SQK_QC
                END ZUJIN,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.BENJIN + FRB.SQK_QM - FRB.SQK_QC
                  ELSE
                   FRB.BENJIN
                END BENJIN,
                FRB.LIXI,
                NVL(FO.FX,0) WYJ,
                CASE
                  WHEN FRPHV.PAY_WAY IN ('2', '4', '6') THEN
                   FRB.SQK_QC
                  ELSE
                   FRB.SQK_QM
                END SQK,
                FRB.BZJ,
                FRB.SXF,
                FRB.ALLMONEY,
                FRB.BXF,
                FRB.QTFY
  FROM (SELECT FR.PAYLIST_CODE,
               FR.PROJECT_ID,
               TO_CHAR(FR.BEGINNING_RECEIVE_DATA,'YYYY-MM') PAY_DATE,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '本金', CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BENJIN,
               SUM(NVL(DECODE(FR.BEGINNING_NAME, '利息',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) LIXI,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保证金',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BZJ,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '手续费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) SXF,
               SUM(NVL(DECODE(FR.BEGINNING_NAME,
                              '保险费',
                                CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END),
                       0)) BXF,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '2',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) ZUJIN,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QM,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) +
               SUM(NVL(DECODE(FR.BEGINNING_NUM, '1',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) SQK_QC,
               SUM(NVL(DECODE(FR.ITEM_FLAG, '4',   CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END), 0)) QTFY,
               SUM(  CASE WHEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY>0 THEN FR.BEGINNING_MONEY-FR.BEGINNING_PAID-FR.VINUAL_MONEY ELSE 0 END) ALLMONEY
          FROM FI_R_BEGINNING FR
	          <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'mm') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(FR.BEGINNING_RECEIVE_DATA)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;trunc(sysdate, 'yy') and trunc(FR.BEGINNING_RECEIVE_DATA) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(FR.BEGINNING_RECEIVE_DATA)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
	          </where>
         GROUP BY FR.PAYLIST_CODE, FR.PROJECT_ID, FR.ITEM_FLAG,TO_CHAR(FR.BEGINNING_RECEIVE_DATA,'YYYY-MM')) FRB,
       
       (SELECT ZRR.PAY_CODE, TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM') PAY_DATE,SUM(NVL(ZRR.PENALTY_RECE-NVL(ZRR.PENALTY_PAID,0), 0)) FX
          FROM FI_OVERDUE ZRR
         WHERE TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM-DD') =
               TO_CHAR(SYSDATE, 'YYYY-MM-DD')
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(ZRR.CREATE_DATE)>=trunc(sysdate, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(ZRR.CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(ZRR.CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(ZRR.CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
				   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(ZRR.CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
         GROUP BY ZRR.PAY_CODE,TO_CHAR(ZRR.CREATE_DATE, 'YYYY-MM')) FO,
       FIL_PROJECT_HEAD FPH,
       FIL_RENT_PLAN_HEAD_MAX_V FRPHV,
       FIL_CUST_CLIENT FCC,
       T_SYS_AREA TSA,
       (SELECT td.code, td.flag
          FROM T_SYS_DATA_DICTIONARY TD
         WHERE TD.TYPE = '客户类型') sex,
       (SELECT td.code, td.flag
          FROM T_SYS_SITE_DICTIONARY TD
         WHERE TD.TYPE = '业务类型') YWLX
 WHERE FRB.PAYLIST_CODE = FO.PAY_CODE(+)
 	AND FRB.PAY_DATE=FO.PAY_DATE(+)
   AND FRB.PAYLIST_CODE = FRPHV.PAYLIST_CODE
   AND FRB.PROJECT_ID = FPH.ID
   and fph.area_id = tsa.id
   AND SEX.CODE = FCC.TYPE
   AND YWLX.CODE = FPH.PLATFORM_TYPE
   AND FPH.CLIENT_ID = FCC.ID
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">AND aa.PLATFORM_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">AND aa.TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">AND aa.CUST_LEVER =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">AND aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">AND aa.AREA_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE
		
	</select>
</mapper>