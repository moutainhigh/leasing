<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="reportBase">

    <select id="queryTableDataPage" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
		
			SELECT ${COLUMN_NAMES}
			   FROM ${V_NAME}
			  
			   <if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			   </if> 
			   
		 ) CC  WHERE ROWNUM &lt;= ${PAGE_END}	
			) CCC  WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				
		 
	</select>
	<select id="queryTableCountTotal"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT COUNT(ID)
		   FROM ${V_NAME}
		 <if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
		</if> 
	</select>
	
	<select id="queryTableExplorData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
			
			SELECT ${COLUMN_NAMES}
			   FROM ${V_NAME}
			  
			   <if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			   </if> 
			   
		 
	</select>

   
	<select id="queryT1042SONTableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
	
	SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
	<![CDATA[
   SELECT 
       SUP_SHORTNAME  COLUMN1,
       COLUMN1  COLUMN2 ,  --月度
       SUM(NVL(COLUMN2,0)) COLUMN3,
       SUM(NVL(COLUMN3,0)) COLUMN4,
       SUM(NVL(COLUMN4,0)) COLUMN5,
       SUM(NVL(COLUMN5,0)) COLUMN6,
       SUM(NVL(COLUMN6,0)) COLUMN7,
       SUM(NVL(COLUMN7,0)) COLUMN8,
       (SELECT SUM(NVL(COLUMN46,0)) FROM FIL_SUPER_TABLE  WHERE SUBSTR(COLUMN28,0,7)= HJ.COLUMN1 AND STATUS=20 AND SUP_ID='${SUP_ID}' ) COLUMN9, --应收留购价款
       COLUMN1 ID
  FROM 
    (SELECT SUBSTR(R.POINT_DATE,0,7)  COLUMN1 , --节点日期
     R.COLUMN2 AS SUP_SHORTNAME,
    (SELECT SUM(NVL(F.COLUMN25,0)) FROM FIL_REPORT_T101 F WHERE F.COLUMN21=R.POINT_DATE AND F.STATUS=20 AND SUP_ID='${SUP_ID}') COLUMN2 ,  --租金余额
    (SELECT SUM(NVL(F.COLUMN26,0)) FROM FIL_REPORT_T101 F WHERE F.COLUMN21=R.POINT_DATE AND F.STATUS=20 AND SUP_ID='${SUP_ID}') COLUMN3 ,  --本金余额
    (SELECT SUM(NVL(F.COLUMN25,0)-NVL(F.COLUMN26,0)) FROM FIL_REPORT_T101 F WHERE F.COLUMN21=R.POINT_DATE AND F.STATUS=20 AND SUP_ID='${SUP_ID}') COLUMN4 ,  --利息余额
    (SELECT SUM(NVL(F.COLUMN22,0)) FROM FIL_REPORT_T101 F WHERE F.COLUMN21=R.POINT_DATE AND F.STATUS=20 AND SUP_ID='${SUP_ID}') COLUMN5 , --预收租金
    (SELECT SUM(NVL(F.COLUMN23,0)) FROM FIL_REPORT_T101 F WHERE F.COLUMN21=R.POINT_DATE AND F.STATUS=20 AND SUP_ID='${SUP_ID}') COLUMN6 ,  --预收本金
    (SELECT SUM(NVL(F.COLUMN24,0)) FROM FIL_REPORT_T101 F WHERE F.COLUMN21=R.POINT_DATE AND F.STATUS=20 AND SUP_ID='${SUP_ID}' ) COLUMN7 ,  --预收利息
     ROWNUM AS ID
     FROM  (SELECT DISTINCT T.COLUMN21 POINT_DATE,T.COLUMN2   FROM FIL_REPORT_T101 T  WHERE COLUMN21>TO_CHAR(SYSDATE,'YYYY-MM-DD')AND SUP_ID='${SUP_ID}'  ) R
     ORDER BY R.POINT_DATE) HJ
  GROUP BY COLUMN1,SUP_SHORTNAME ORDER BY COLUMN1
  ]]>	
	 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
				
				
	</select>
	<select id="queryT1042SONTableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	         
     SELECT COUNT(1) FROM (
SELECT * 
  FROM 
     (SELECT SUBSTR(R.POINT_DATE,0,7)  COLUMN1 
FROM  (SELECT DISTINCT T.COLUMN21 POINT_DATE,T.COLUMN2   FROM FIL_REPORT_T101 T  WHERE COLUMN21>TO_CHAR(SYSDATE,'YYYY-MM-DD')AND SUP_ID='${SUP_ID}'  ) R
) HJ
 GROUP BY COLUMN1
 
 )
	</select>
	
	<select id="queryTableT1041CountTotal"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	         
      SELECT COUNT(1) FROM (
 SELECT *
  FROM (SELECT SUBSTR(R.POINT_DATE,0,7)  COLUMN1
 
 FROM  (SELECT DISTINCT T.COLUMN21 POINT_DATE   FROM FIL_REPORT_T101 T  WHERE COLUMN21>TO_CHAR(SYSDATE,'YYYY-MM-DD') ) R
) HJ
 GROUP BY COLUMN1)
             
	</select>
	
	<select id="queryTableT1043CountTotal"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	         
      SELECT       
     COUNT(1)
    FROM  (SELECT DISTINCT T.COLUMN21 POINT_DATE   FROM FIL_REPORT_T101 T  WHERE COLUMN21>TO_CHAR(SYSDATE,'YYYY-MM-DD') ) R

             
	</select>
	
	<select id="queryT103TableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
	SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
	SELECT * FROM (
	SELECT SUP.SUP_ID ID,
	<![CDATA[
    TSA.NAME  COLUMN1,   --   区域
    TSC.COMPANY_NAME COLUMN2 ,   --   厂商
    SUP.SUP_SHORTNAME COLUMN3 ,   --   供应商简称

    NVL(YQ.YQ1,0)      COLUMN4,  -- 逾期一期项目数
    NVL(YQ.AMOUNT1,0)  COLUMN5,  -- 逾期一期设备数
    NVL(YQ.YQ_RENT1,0) COLUMN6 , --逾期一期金额

    NVL(YQ.YQ2,0)      COLUMN7 , -- 逾期两期项目数
    NVL(YQ.AMOUNT2,0)  COLUMN8,  -- 逾期两期设备数
    NVL(YQ.YQ_RENT2,0) COLUMN9 ,--逾期两期金额

    NVL(YQ.YQ3,0)      COLUMN10,  -- 逾期三期项目数
    NVL(YQ.AMOUNT3,0)  COLUMN11,  -- 逾期三期设备数
    NVL(YQ.YQ_RENT3,0) COLUMN12 ,--逾期三期金额

    NVL(YQ.YQ4,0)      COLUMN13,  -- 逾期超三期项目数
    NVL(YQ.AMOUNT4,0)  COLUMN14,  -- 逾期超三期设备数
    NVL(YQ.YQ_RENT4,0) COLUMN15 ,--逾期超三期金额

    NVL(AMOUNT,0)      COLUMN16, -- 在租台量
    NVL(YQ_AMOUNT,0)   COLUMN17, --  逾期台量
    ROUND(NVL(YQ_AMOUNT,0)*100/DECODE(NVL(AMOUNT,0),0,1,AMOUNT),2)    COLUMN18, --台量逾期率

    NVL(LEFT_RENT,0)   COLUMN19,  --  剩余租金
    NVL(YQ_RENT,0)     COLUMN20,  --  逾期租金
    ROUND(NVL(YQ_RENT,0)*100/DECODE(NVL(LEFT_RENT,0),0,1,LEFT_RENT),2) COLUMN21, --租金逾期率
    NVL(YQ.MATURE_RENT,0)  COLUMN22, --到期租金
    ROUND(NVL(YQ.YQ_RENT,0)*100/DECODE(NVL(YQ.MATURE_RENT,0),0,1,YQ.MATURE_RENT),2) COLUMN23,     -- 到期租金逾期率

    SUP.COMPANY_ID
 FROM T_SYS_SUPPLIERS SUP
 LEFT JOIN (SELECT SUM(DECODE(COLUMN71,1,1,0)) AS YQ1,
                   SUM(DECODE(COLUMN71,1,COLUMN21,0)) AS AMOUNT1,
                   SUM(DECODE(COLUMN71,1,COLUMN64,0)) AS YQ_RENT1 , -- 逾期 租金
                   SUM(DECODE(COLUMN71,2,1,0)) AS YQ2,
                   SUM(DECODE(COLUMN71,2,COLUMN21,0)) AS AMOUNT2,
                   SUM(DECODE(COLUMN71,2,COLUMN64,0)) AS YQ_RENT2 , -- 逾期 租金
                   SUM(DECODE(COLUMN71,3,1,0)) AS YQ3,
                   SUM(DECODE(COLUMN71,3,COLUMN21,0)) AS AMOUNT3,
                   SUM(DECODE(COLUMN71,3,COLUMN64,0)) AS YQ_RENT3 , -- 逾期 租金
                   SUM(CASE WHEN COLUMN71>3 THEN 1 ELSE 0 END ) AS YQ4,
                   SUM(CASE WHEN COLUMN71>3 THEN COLUMN21 ELSE 0 END ) AS AMOUNT4,
                   SUM(CASE WHEN COLUMN71>3 THEN COLUMN64 ELSE 0 END ) AS YQ_RENT4,
                   --SUM(DECODE(STATUS,20,NVL(COLUMN21,0),0)) AS AMOUNT,--在租台量
                   SUM(CASE WHEN COLUMN62>0 OR STATUS=20 THEN NVL(COLUMN21,0) ELSE 0 END ) AS AMOUNT,  --  在租台量  剩余本金大于0
                   SUM(CASE WHEN COLUMN71>0 THEN NVL(COLUMN21,0) ELSE 0 END ) AS YQ_AMOUNT,--逾期总台量
                   SUM(NVL(COLUMN64,0)) AS YQ_RENT , -- 逾期 租金
                   SUM(NVL(COLUMN61,0)) AS LEFT_RENT, -- 租金余额
                   SUM(DECODE(STATUS,20,MATURE_RENT,0) ) AS MATURE_RENT , --到期租金

                   SUP_ID

            FROM   FIL_SUPER_TABLE  WHERE STATUS>=20 
            	]]>
              <if test="PARAM2!=null and PARAM2!=''">
					AND COLUMN26 >= '${PARAM2}'	
			 </if> 
			 <if test="PARAM3!=null and PARAM3!=''">
					AND COLUMN26 &lt;= '${PARAM3}'	
			 </if> 
            GROUP BY SUP_ID
            )YQ
 ON SUP.SUP_ID=YQ.SUP_ID
 LEFT JOIN T_SYS_AREA TSA
 ON TSA.ID= SUP.AREA_ID
 LEFT JOIN T_SYS_COMPANY TSC
 ON TSC.COMPANY_ID=SUP.COMPANY_ID
 WHERE SUP.SUP_SHORTNAME NOT LIKE '%测试%'
       )
			   <if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			   </if> 
 
 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
	
	</select>
	
 <select id="queryT103TableDataCountTotal" parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	
	SELECT COUNT(1) FROM (
	SELECT SUP.SUP_ID ID,
	SUP.SUP_SHORTNAME COLUMN3 ,  
    SUP.COMPANY_ID
 FROM T_SYS_SUPPLIERS SUP
 LEFT JOIN T_SYS_AREA TSA
 ON TSA.ID= SUP.AREA_ID
 WHERE SUP.SUP_SHORTNAME IS NOT NULL
       )
			   <if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			   </if> 
	
	
</select>
	
<select id="queryT103TableExplorData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
	
	SELECT * FROM (
	SELECT SUP.SUP_ID ID,
	<![CDATA[
    TSA.NAME  COLUMN1,   --   区域
    TSC.COMPANY_NAME COLUMN2 ,   --   厂商
    SUP.SUP_SHORTNAME COLUMN3 ,   --   供应商简称

    NVL(YQ.YQ1,0)      COLUMN4,  -- 逾期一期项目数
    NVL(YQ.AMOUNT1,0)  COLUMN5,  -- 逾期一期设备数
    NVL(YQ.YQ_RENT1,0) COLUMN6 , --逾期一期金额

    NVL(YQ.YQ2,0)      COLUMN7 , -- 逾期两期项目数
    NVL(YQ.AMOUNT2,0)  COLUMN8,  -- 逾期两期设备数
    NVL(YQ.YQ_RENT2,0) COLUMN9 ,--逾期两期金额

    NVL(YQ.YQ3,0)      COLUMN10,  -- 逾期三期项目数
    NVL(YQ.AMOUNT3,0)  COLUMN11,  -- 逾期三期设备数
    NVL(YQ.YQ_RENT3,0) COLUMN12 ,--逾期三期金额

    NVL(YQ.YQ4,0)      COLUMN13,  -- 逾期超三期项目数
    NVL(YQ.AMOUNT4,0)  COLUMN14,  -- 逾期超三期设备数
    NVL(YQ.YQ_RENT4,0) COLUMN15 ,--逾期超三期金额

    NVL(AMOUNT,0)      COLUMN16, -- 在租台量
    NVL(YQ_AMOUNT,0)   COLUMN17, --  逾期台量
    ROUND(NVL(YQ_AMOUNT,0)*100/DECODE(NVL(AMOUNT,0),0,1,AMOUNT),2)    COLUMN18, --台量逾期率

    NVL(LEFT_RENT,0)   COLUMN19,  --  剩余租金
    NVL(YQ_RENT,0)     COLUMN20,  --  逾期租金
    ROUND(NVL(YQ_RENT,0)*100/DECODE(NVL(LEFT_RENT,0),0,1,LEFT_RENT),2) COLUMN21, --租金逾期率
    NVL(YQ.MATURE_RENT,0)  COLUMN22, --到期租金
    ROUND(NVL(YQ.YQ_RENT,0)*100/DECODE(NVL(YQ.MATURE_RENT,0),0,1,YQ.MATURE_RENT),2) COLUMN23,     -- 到期租金逾期率

    SUP.COMPANY_ID
 FROM T_SYS_SUPPLIERS SUP
 LEFT JOIN (SELECT SUM(DECODE(COLUMN71,1,1,0)) AS YQ1,
                   SUM(DECODE(COLUMN71,1,COLUMN21,0)) AS AMOUNT1,
                   SUM(DECODE(COLUMN71,1,COLUMN64,0)) AS YQ_RENT1 , -- 逾期 租金
                   SUM(DECODE(COLUMN71,2,1,0)) AS YQ2,
                   SUM(DECODE(COLUMN71,2,COLUMN21,0)) AS AMOUNT2,
                   SUM(DECODE(COLUMN71,2,COLUMN64,0)) AS YQ_RENT2 , -- 逾期 租金
                   SUM(DECODE(COLUMN71,3,1,0)) AS YQ3,
                   SUM(DECODE(COLUMN71,3,COLUMN21,0)) AS AMOUNT3,
                   SUM(DECODE(COLUMN71,3,COLUMN64,0)) AS YQ_RENT3 , -- 逾期 租金
                   SUM(CASE WHEN COLUMN71>3 THEN 1 ELSE 0 END ) AS YQ4,
                   SUM(CASE WHEN COLUMN71>3 THEN COLUMN21 ELSE 0 END ) AS AMOUNT4,
                   SUM(CASE WHEN COLUMN71>3 THEN COLUMN64 ELSE 0 END ) AS YQ_RENT4,
                   --SUM(DECODE(STATUS,20,NVL(COLUMN21,0),0)) AS AMOUNT,--在租台量
                   SUM(CASE WHEN COLUMN62>0 OR STATUS=20 THEN NVL(COLUMN21,0) ELSE 0 END ) AS AMOUNT,  --  在租台量  剩余本金大于0
                   SUM(CASE WHEN COLUMN71>0 THEN NVL(COLUMN21,0) ELSE 0 END ) AS YQ_AMOUNT,--逾期总台量
                   SUM(NVL(COLUMN64,0)) AS YQ_RENT , -- 逾期 租金
                   SUM(NVL(COLUMN61,0)) AS LEFT_RENT, -- 租金余额
                   SUM(DECODE(STATUS,20,MATURE_RENT,0) ) AS MATURE_RENT , --到期租金

                   SUP_ID

            FROM   FIL_SUPER_TABLE  WHERE STATUS>=20 
            	]]>
              <if test="PARAM2!=null and PARAM2!=''">
					AND COLUMN26 >= '${PARAM2}'	
			 </if> 
			 <if test="PARAM3!=null and PARAM3!=''">
					AND COLUMN26 &lt;= '${PARAM3}'	
			 </if> 
            GROUP BY SUP_ID
            )YQ
 ON SUP.SUP_ID=YQ.SUP_ID
 LEFT JOIN T_SYS_AREA TSA
 ON TSA.ID= SUP.AREA_ID
 LEFT JOIN T_SYS_COMPANY TSC
 ON TSC.COMPANY_ID=SUP.COMPANY_ID
 WHERE SUP.SUP_SHORTNAME NOT LIKE '%测试%'
       )
			   <if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			   </if> 
 
	
	</select>

























	<select id="queryTableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
			SELECT ${COLUMN_NAMES}
			   FROM ${V_NAME}
			  <where>
				<if test="exportAll!='true'">
					<if test="PARAM0!=null and PARAM0!='' "> 
						AND COLUMN1 LIKE '%' ||  '${PARAM0}' || '%' 
					</if>
					<if test="PARAM1!=null and PARAM1!='' "> 
						AND COLUMN2 LIKE '%' ||  '${PARAM1}' || '%' 
					</if>
					<if test="PARAM2!=null and PARAM2!='' "> 
						AND COLUMN5 LIKE '%' ||  '${PARAM2}' || '%' 
					</if>
					<if test="PARAM3!=null and PARAM3!='' "> 
						AND COLUMN14 LIKE '%' ||  '${PARAM3}' || '%' 
					</if>
					<if test="PARAM4!=null and PARAM4!='' "> 
						AND TO_DATE(COLUMN26,'YYYY-MM-DD') >= TO_DATE('${PARAM4}','YYYY-MM-DD')
					</if>
					<if test="PARAM5!=null and PARAM5!='' "> 
						AND TO_DATE(COLUMN26,'YYYY-MM-DD') &lt;= TO_DATE('${PARAM5}','YYYY-MM-DD')
					</if>
					<if test="PARAM6!=null and PARAM6!='' "> 
						AND COLUMN15 LIKE '%' ||  '${PARAM6}' || '%' 
					</if>
					<if test="PARAM7!=null and PARAM7!='' "> 
						AND COLUMN7 LIKE '%' ||  '${PARAM7}' || '%' 
					</if>
					<if test="PARAM8!=null and PARAM8!='' "> 
						AND COLUMN75 LIKE '%' ||  '${PARAM8}' || '%' 
					</if>
					<if test="PARAM9!=null and PARAM9!='' "> 
						AND COLUMN17 LIKE '%' ||  '${PARAM9}' || '%' 
					</if>
					<if test="PARAM10!=null and PARAM10!='' "> 
						AND COLUMN76 LIKE '%' ||  '${PARAM10}' || '%' 
					</if>
					<if test="PARAM11!=null and PARAM11!='' "> 
						AND COLUMN9 LIKE '%' ||  '${PARAM11}' || '%' 
					</if>
					<if test="PARAM12!=null and PARAM12!='' "> 
						AND COLUMN94  = '${PARAM12}'
					</if>
					<if test="DATA_TIME !=null and DATA_TIME !='' "> 
						AND PACK_VIEW_PARAM.SET_PARAM1('${DATA_TIME}') = '${DATA_TIME}'
					</if>
					
					<if test="SUP_TYPE !=null and SUP_TYPE !='' "> 
						AND SUP_ID = '${SUP_TYPE}'   --  数据权限   供应商只能查看本身数据
					</if>
					<if test="COM_TYPE !=null and COM_TYPE !='' "> 
						AND SUP_ID IN(SELECT S.SUP_ID FROM T_SYS_SUPPLIERS  S WHERE S.COMPANY_ID ='${COM_TYPE}')  --  数据权限   生产商只能查看自身下属供应商数据
					</if>
					<if test="COMPANY_ID !=null and COMPANY_ID !='' "> 
						AND COMPANY_ID = '${COMPANY_ID}' --   数据权限   生产商只能查看自身数据
					</if>
					
				</if>
			
				<if test="exportAll!=null and exportAll!='' and exportAll=='false'">
					AND ID IN(${sqlData})
				</if>
			 </where>
				 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
		 
	</select>
	<select id="queryTableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT COUNT(1)
		   FROM ${V_NAME}
		  <where>  
					<if test="PARAM0!=null and PARAM0!='' "> 
						AND COLUMN1 LIKE '%' ||  '${PARAM0}' || '%' 
					</if>
					<if test="PARAM1!=null and PARAM1!='' "> 
						AND COLUMN2 LIKE '%' ||  '${PARAM1}' || '%' 
					</if>
					<if test="PARAM2!=null and PARAM2!='' "> 
						AND COLUMN5 LIKE '%' ||  '${PARAM2}' || '%' 
					</if>
					<if test="PARAM3!=null and PARAM3!='' "> 
						AND COLUMN14 LIKE '%' ||  '${PARAM3}' || '%' 
					</if>
					<if test="PARAM4!=null and PARAM4!='' "> 
						AND TO_DATE(COLUMN26,'YYYY-MM-DD') >= TO_DATE('${PARAM4}','YYYY-MM-DD')
					</if>
					<if test="PARAM5!=null and PARAM5!='' "> 
						AND TO_DATE(COLUMN26,'YYYY-MM-DD') &lt;= TO_DATE('${PARAM5}','YYYY-MM-DD')
					</if>
					<if test="PARAM6!=null and PARAM6!='' "> 
						AND COLUMN15 LIKE '%' ||  '${PARAM6}' || '%' 
					</if>
					<if test="PARAM7!=null and PARAM7!='' "> 
						AND COLUMN7 LIKE '%' ||  '${PARAM7}' || '%' 
					</if>
					<if test="PARAM8!=null and PARAM8!='' "> 
						AND COLUMN75 LIKE '%' ||  '${PARAM8}' || '%' 
					</if>
					<if test="PARAM9!=null and PARAM9!='' "> 
						AND COLUMN17 LIKE '%' ||  '${PARAM9}' || '%' 
					</if>
					<if test="PARAM10!=null and PARAM10!='' "> 
						AND COLUMN76 LIKE '%' ||  '${PARAM10}' || '%' 
					</if>
					<if test="PARAM11!=null and PARAM11!='' "> 
						AND COLUMN9 LIKE '%' ||  '${PARAM11}' || '%' 
					</if>
					<if test="PARAM12!=null and PARAM12!='' "> 
						AND COLUMN6 LIKE '%' ||  '${PARAM12}' || '%' 
					</if>
					<if test="DATA_TIME !=null and DATA_TIME !='' "> 
						AND PACK_VIEW_PARAM.SET_PARAM1('${DATA_TIME}') = '${DATA_TIME}'
					</if>
					
					<if test="SUP_TYPE !=null and SUP_TYPE !='' "> 
						AND SUP_ID = '${SUP_TYPE}'   --  数据权限   供应商只能查看本身数据
					</if>
					<if test="COM_TYPE !=null and COM_TYPE !='' "> 
						AND SUP_ID IN(SELECT S.SUP_ID FROM T_SYS_SUPPLIERS  S WHERE S.COMPANY_ID ='${COM_TYPE}')  --  数据权限   生产商只能查看自身下属供应商数据
					</if>
					<if test="COMPANY_ID !=null and COMPANY_ID !='' "> 
						AND COMPANY_ID = '${COMPANY_ID}' --   数据权限   生产商只能查看自身数据
					</if>
		 </where>
	</select>

	
	
	<insert id="insertReportColumnByReportAndUser">
		INSERT INTO T_REPORT_COLUMNS
	      (ID, USER_CODE, REPORT_NAME, COLUMN_NAMES)
	    VALUES
	      (SEQ_T_REPORT_COLUMNS.NEXTVAL,#{USER_CODE},#{REPORT_NAME},#{COLUMN_NAMES})
	</insert>
	
	<delete id="delReportColumnByReportAndUser" parameterType="java.util.Map">
		DELETE FROM T_REPORT_COLUMNS T WHERE T.USER_CODE =#{USER_CODE} AND T.REPORT_NAME =#{REPORT_NAME}
	</delete>
	
	<select id="queryReportColumnByReportAndUser"  parameterType="java.util.Map" resultType="String">
	 	SELECT MAX(T.COLUMN_NAMES) COLUMN_NAMES FROM T_REPORT_COLUMNS T WHERE T.USER_CODE =#{USER_CODE} AND T.REPORT_NAME =#{REPORT_NAME}
	</select>
	
	<select id="getCatentNameByComId"  parameterType="java.util.Map" resultType="java.util.Map">
	 	SELECT DISTINCT CATENA_NAME FROM T_PRODUCT_TYPE WHERE COMPANY_ID = #{COMPANY_ID}
	</select>
	

	<select id="queryT404SONTableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
			SELECT ${COLUMN_NAMES}
				  FROM FIL_PROJECT_EQUIPMENT SB
				  LEFT JOIN T_PRODUCT_TYPE XL
				    ON XL.ID = SB.SPEC_ID
				  LEFT JOIN FIL_PROJECT_HEAD XM
				    ON XM.SUP_ID = SB.SUPPLIERS_ID
				 WHERE SB.COMPANY_ID = ${COMPANY_ID}
				   AND XL.COMPANY_ID = ${COMPANY_ID}
				   AND TRUNC(XM.DELIVER_DATE, 'month') &lt;=
				       TRUNC(TO_DATE('2013-11-03', 'yyyy-mm-dd'), 'month')
				 GROUP BY SB.COMPANY_ID, SB.SUPPLIERS_ID
				 ) CC
				 <where>  
						<if test="PARAM1!=null and PARAM1!='' "> 
							AND COLUMN2 LIKE '%' ||  '${PARAM1}' || '%' 
						</if>
						<if test="PAGE_END!=null and PAGE_END!=''">
							AND ROWNUM &lt;= ${PAGE_END}	
						</if>
				 </where>
				
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
		 
	</select>
	<select id="queryT404SONTableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT COUNT(*) FROM (
			SELECT MAX(XM.SUP_SHORTNAME) COLUMN2 
				  FROM FIL_PROJECT_EQUIPMENT SB
				  LEFT JOIN T_PRODUCT_TYPE XL
				    ON XL.ID = SB.SPEC_ID
				  LEFT JOIN FIL_PROJECT_HEAD XM
				    ON XM.SUP_ID = SB.SUPPLIERS_ID
				 WHERE SB.COMPANY_ID = ${COMPANY_ID}
				   AND XL.COMPANY_ID = ${COMPANY_ID}
				   AND XM.STATUS = 20
				   AND TRUNC(XM.DELIVER_DATE, 'month') &lt;=
				       TRUNC(TO_DATE('2013-11-03', 'yyyy-mm-dd'), 'month')
				 GROUP BY SB.COMPANY_ID, SB.SUPPLIERS_ID
				 ) CC
						<if test="PARAM1!=null and PARAM1!='' "> 
							WHERE CC.COLUMN2 LIKE '%' ||  '${PARAM1}' || '%' 
						</if>
	</select>
	
	
	
	
	
	<select id="queryT202TableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
			SELECT ${COLUMN_NAMES} FROM (
			   SELECT  (SELECT DISTINCT(QY1.NAME) FROM  T_SYS_AREA QY1, T_SYS_AREA QY2 WHERE QY1.ID = QY2.PARENT_ID(+) AND DLS.AREA_ID = QY1.ID(+) )  COLUMN1  ,   --   区域
       				MAX(DLS.SUP_SHORTNAME) COLUMN2  ,   --   供应商
				       ZH_CONCAT(DISTINCT(TSC.COMPANY_NAME))   COLUMN3  ,   --   厂商
				      SUM( CASE WHEN TRUNC(XMZB.CREATE_TIME ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN4  ,   --   申请(台量)
				      SUM( CASE WHEN TRUNC(XMZB.CREATE_TIME ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN5  ,   --   申请(金额)
				      SUM( CASE WHEN TRUNC(XMZB.CREDIT_RATIFY_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN6  ,   --   立项(台量)
				      SUM( CASE WHEN TRUNC(XMZB.CREDIT_RATIFY_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN7  ,   --   立项(金额)
				      SUM( CASE WHEN TRUNC(XMZB.SIGNED_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN8  ,   --   签约(台量)
				      SUM( CASE WHEN TRUNC(XMZB.SIGNED_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN9  ,   --   签约(金额)
				      SUM( CASE WHEN TRUNC(XMZB.START_CONFIRM_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN10  ,   --   起租(台量)
				      SUM( CASE WHEN TRUNC(XMZB.START_CONFIRM_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN11  ,   --   起租(金额)
				      SUM( CASE WHEN  (SELECT  TRUNC(MAX(ZJ.RESERVE_DATE))  FROM FI_FUND_PAYMENT_DETAIL ZJ  WHERE ZJ.PAY_TYPE = 1 AND ZJ.PROJECT_CODE = XMZB.PRO_CODE  GROUP BY ZJ.PROJECT_CODE)= TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))    THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN12  ,   --   放款(台量)
				      SUM( CASE WHEN  (SELECT  TRUNC(MAX(ZJ.RESERVE_DATE))  FROM FI_FUND_PAYMENT_DETAIL ZJ  WHERE ZJ.PAY_TYPE = 1 AND ZJ.PROJECT_CODE = XMZB.PRO_CODE  GROUP BY ZJ.PROJECT_CODE)= TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))    THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN13  ,   --   放款(金额)
				      SUM( CASE WHEN TRUNC(XMZB.START_CONFIRM_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD')) AND (SELECT GETDICTDATABYCODE('保险方式', T.INSURANCE)    FROM V_PROJECT_SCHEME T   WHERE T.PROJECT_ID = XMZB.ID) = '租赁'   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN14  ,   --   保险(台量)
				      SUM( CASE WHEN TRUNC(XMZB.START_CONFIRM_DATE ) = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD')) AND (SELECT GETDICTDATABYCODE('保险方式', T.INSURANCE)    FROM V_PROJECT_SCHEME T   WHERE T.PROJECT_ID = XMZB.ID) = '租赁'    THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN15  ,   --   保险(金额)
				      SUM( CASE WHEN (SELECT TRUNC(MAX(T.CREATE_DATE))  FROM FIL_PROJECT_VOID_DIFF_LOAN T WHERE T.PROJECT_ID = XMZB.ID)= TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN16  ,   --   项目撤销(台量)
				      SUM( CASE WHEN (SELECT TRUNC(MAX(T.CREATE_DATE))  FROM FIL_PROJECT_VOID_DIFF_LOAN T WHERE T.PROJECT_ID = XMZB.ID)= TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))  THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN17  ,   --   项目撤销(金额)
				      SUM( CASE WHEN XMZB.STATUS = 30   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN18  ,   --   提前还租(台量)
				      SUM( CASE WHEN XMZB.STATUS = 30   THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN19  ,   --   提前还租(金额)
				      SUM( CASE WHEN (SELECT TRUNC(MAX(T.REALITY_DATE))  FROM FIL_BUY_BACK T WHERE T.PROJECT_ID =XMZB.ID) =   TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))  THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN20  ,   --   设备回购(台量)
				      SUM( CASE WHEN (SELECT TRUNC(MAX(T.REALITY_DATE))  FROM FIL_BUY_BACK T WHERE T.PROJECT_ID =XMZB.ID) =   TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'))  THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN21  ,   --   设备回购(金额)
				      SUM( CASE WHEN XMZB.STATUS = 40   THEN TO_NUMBER(XMZB.AMOUNT) ELSE 0 END ) COLUMN22  ,   --   项目留购(台量)
				      SUM( CASE WHEN XMZB.STATUS = 40   THEN TO_NUMBER(XMZB.LEASE_TOPRIC) ELSE 0 END ) COLUMN23  ,   --   项目留购(金额)
				       MAX(XMZB.SUP_ID) ID
				  FROM T_SYS_SUPPLIERS DLS
				    LEFT JOIN FIL_PROJECT_HEAD XMZB
				    ON DLS.SUP_ID  = XMZB.SUP_ID
				    LEFT JOIN T_SYS_COMPANY TSC ON
				    TSC.COMPANY_ID = DLS.COMPANY_ID
				    WHERE DLS.SUP_SHORTNAME IS NOT NULL
					<if test="PARAM1!=null and PARAM1!='' "> 
						AND DLS.SUP_SHORTNAME LIKE '%' ||  '${PARAM1}' || '%' 
					</if>
				 GROUP BY DLS.SUP_ID , DLS.AREA_ID
				 )
			  <where>			
				<if test="exportAll!=null and exportAll!='' and exportAll=='false'">
					AND ID IN(${sqlData})
				</if>
			 </where>
				 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
		 
	</select>
	
	<select id="queryT202TableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT  COUNT(1) FROM T_SYS_SUPPLIERS DLS
			WHERE DLS.SUP_SHORTNAME IS NOT NULL
		<if test="PARAM1!=null and PARAM1!='' "> 
			AND DLS.SUP_SHORTNAME LIKE '%' ||  '${PARAM1}' || '%' 
		</if>
			   
				 
	</select>
	
	
	<select id="insertT108TableData" statementType="CALLABLE">  
	    <![CDATA[  
	        {call PRC_T108_UPDATE ()}  
	    ]]>  
	</select>
	
	<select id="queryT108TableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
			SELECT ${COLUMN_NAMES} FROM FIL_REPORT_T108 T 
					  <where>
					  	<if test="DATA_TIME!=null and DATA_TIME!='' "> 
							AND TRUNC(T.DATA_TIME,'month') = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'),'month')
						</if>
						<if test="PARAM2!=null and PARAM2!='' "> 
							AND T.COLUMN2 LIKE '%' ||  '${PARAM2}' || '%' 
						</if>
						<if test="exportAll!=null and exportAll!='' and exportAll=='false'">
							AND ID IN(${sqlData})
						</if>
					 </where>
				 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC 
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
			ORDER BY CCC.COLUMN1
		 
	</select>
	
	<select id="queryT108TableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT  COUNT(1) FROM FIL_REPORT_T108 T 
					  <where>
					  	<if test="DATA_TIME!=null and DATA_TIME!='' "> 
							AND TRUNC(T.DATA_TIME,'month') = TRUNC(TO_DATE('${DATA_TIME}','YYYY-MM-DD'),'month')
						</if>
						<if test="PARAM2!=null and PARAM2!='' "> 
							AND T.COLUMN2 LIKE '%' ||  '${PARAM2}' || '%' 
						</if>
					 </where>
	</select>
	
	
	
	
	<select id="queryT403SONTableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
			SELECT ${COLUMN_NAMES}
			   FROM ${V_NAME}
			  <where>
				<if test="exportAll!='true'">
					<if test="PARAM1!=null and PARAM1!='' "> 
						AND COLUMN2 LIKE '%' ||  '${PARAM1}' || '%' 
					</if>
					<if test="PARAM2!=null and PARAM2!='' "> 
						AND COLUMN5 LIKE '%' ||  '${PARAM2}' || '%' 
					</if>
					<if test="PARAM3!=null and PARAM3!='' "> 
						AND COLUMN7 LIKE '%' ||  '${PARAM3}' || '%' 
					</if>
					<if test="COMPANY_ID !=null and COMPANY_ID !='' "> 
						AND COMPANY_ID = '${COMPANY_ID}'
					</if>
				</if>
			
				<if test="exportAll!=null and exportAll!='' and exportAll=='false'">
					AND ID IN(${sqlData})
				</if>
			 </where>
				 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
		 
	</select>
	<select id="queryTSysCompany"  parameterType="java.util.Map" resultType="Map">
	 	SELECT COMPANY_NAME FROM T_SYS_COMPANY
	</select>
	<select id="queryT403SONTableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT COUNT(1)
		   FROM ${V_NAME}
		  <where>  
				<if test="exportAll!='true'">
					<if test="PARAM1!=null and PARAM1!='' "> 
						AND COLUMN2 LIKE '%' ||  '${PARAM1}' || '%' 
					</if>
					<if test="PARAM2!=null and PARAM2!='' "> 
						AND COLUMN5 LIKE '%' ||  '${PARAM2}' || '%' 
					</if>
					<if test="PARAM3!=null and PARAM3!='' "> 
						AND COLUMN7 LIKE '%' ||  '${PARAM3}' || '%' 
					</if>
					<if test="COMPANY_ID !=null and COMPANY_ID !='' "> 
						AND COMPANY_ID = '${COMPANY_ID}'
					</if>
				</if>
		 </where>
	</select>
	
	
	

	<select id="queryT306TableData" parameterType="java.util.Map" resultType="map" statementType="STATEMENT">
		SELECT * FROM (SELECT CC.*,ROWNUM ROWNO FROM (
			SELECT ${COLUMN_NAMES}
			   FROM (SELECT MAX(T.COLUMN47) COLUMN1,
       MAX(T.COLUMN5) COLUMN2,
       MAX(T.COLUMN14) COLUMN3,
       MAX(T.COLUMN15) COLUMN4,
       MAX(T.COLUMN8)  COLUMN5,
       MAX(T.COLUMN2)  COLUMN6,
       MAX(T.COLUMN13)  COLUMN7,
       MAX(DECODE(T.COLUMN18, 1 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN8 ,
       MAX(DECODE(T.COLUMN18, 2 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN9 ,
       MAX(DECODE(T.COLUMN18, 3 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN10,
       MAX(DECODE(T.COLUMN18, 4 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN11,
       MAX(DECODE(T.COLUMN18, 5 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN12,
       MAX(DECODE(T.COLUMN18, 6 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN13,
       MAX(DECODE(T.COLUMN18, 7 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN14,
       MAX(DECODE(T.COLUMN18, 8 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN15,
       MAX(DECODE(T.COLUMN18, 9 , DECODE(T.COLUMN29,'已核销',1,0)) )  COLUMN16,
       MAX(DECODE(T.COLUMN18, 10 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN17,
       MAX(DECODE(T.COLUMN18, 11 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN18,
       MAX(DECODE(T.COLUMN18, 12 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN19,
       MAX(DECODE(T.COLUMN18, 13 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN20,
       MAX(DECODE(T.COLUMN18, 14 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN21,
       MAX(DECODE(T.COLUMN18, 15 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN22,
       MAX(DECODE(T.COLUMN18, 16 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN23,
       MAX(DECODE(T.COLUMN18, 17 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN24,
       MAX(DECODE(T.COLUMN18, 18 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN25,
       MAX(DECODE(T.COLUMN18, 19 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN26,
       MAX(DECODE(T.COLUMN18, 20 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN27,
       MAX(DECODE(T.COLUMN18, 21 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN28,
       MAX(DECODE(T.COLUMN18, 22 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN29,
       MAX(DECODE(T.COLUMN18, 23 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN30,
       MAX(DECODE(T.COLUMN18, 24 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN31,
       MAX(DECODE(T.COLUMN18, 25 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN32,
       MAX(DECODE(T.COLUMN18, 26 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN33,
       MAX(DECODE(T.COLUMN18, 27 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN34,
       MAX(DECODE(T.COLUMN18, 28 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN35,
       MAX(DECODE(T.COLUMN18, 29 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN36,
       MAX(DECODE(T.COLUMN18, 30 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN37,
       MAX(DECODE(T.COLUMN18, 31 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN38,
       MAX(DECODE(T.COLUMN18, 32 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN39,
       MAX(DECODE(T.COLUMN18, 33 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN40,
       MAX(DECODE(T.COLUMN18, 34 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN41,
       MAX(DECODE(T.COLUMN18, 35 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN42,
       MAX(DECODE(T.COLUMN18, 36 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN43,
       MAX(DECODE(T.COLUMN18, 37 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN44,
       MAX(DECODE(T.COLUMN18, 38 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN45,
       MAX(DECODE(T.COLUMN18, 39 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN46,
       MAX(DECODE(T.COLUMN18, 40 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN47,
       MAX(DECODE(T.COLUMN18, 41 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN48,
       MAX(DECODE(T.COLUMN18, 42 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN49,
       MAX(DECODE(T.COLUMN18, 43 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN50,
       MAX(DECODE(T.COLUMN18, 44 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN51,
       MAX(DECODE(T.COLUMN18, 45 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN52,
       MAX(DECODE(T.COLUMN18, 46 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN53,
       MAX(DECODE(T.COLUMN18, 47 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN54,
       MAX(DECODE(T.COLUMN18, 48 , DECODE(T.COLUMN29,'已核销',1,0)) ) COLUMN55,
       MAX(T.COLUMN46) COLUMN56,
       SUM(DECODE(T.COLUMN29,'未核销',T.COLUMN22,0)) COLUMN57,
       COUNT(1) COLUMN58 , SUM(DECODE(T.COLUMN29,'未核销',1,0))  COLUMN59 , MAX( T.COLUMN13) SUP_ID , 
       MAX(T.COLUMN47) ID
  FROM FIL_REPORT_T101 T
 				<if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			    </if> 
 GROUP BY T.COLUMN47)
			 
				 ) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
		 
	</select>
	<select id="queryT306TableCount"  parameterType="java.util.Map" resultType="int" statementType="STATEMENT">
	 	SELECT COUNT(DISTINCT T.COLUMN47)
  			FROM FIL_REPORT_T101 T
 				<if test="WHERESTRING!=null and WHERESTRING!='' "> 
				  ${WHERESTRING}
			    </if> 
	</select>

	<select id="querySuperTableAll" parameterType="java.util.Map" resultType="map" >
		SELECT  ${SQL_COLUMN} FROM (
			SELECT CC.*,ROWNUM ROWNO FROM(
			SELECT * FROM (
				SELECT PRO.PROVINCE_NAME,
			       PRO.CITY_NAME,
			       PRO.SUB_COMPANY_NAME,
			       PRO.PRO_CODE,
			       (SELECT B.FLAG
			          FROM T_SYS_SITE_DICTIONARY B
			         WHERE B.TYPE = '业务类型'
			           AND B.STATUS = 0
			           AND B.CODE = PRO.PLATFORM_TYPE) PLATFORM_TYPE, --业务类型
			       PRO.PLATFORM_TYPE PLATFORM_TYPE_D,
			       TO_CHAR(PRO.CREATE_TIME, 'yyyy-MM-dd') APPLY_DATE,
			       TO_CHAR(PRO.CREDIT_RATIFY_DATE, 'yyyy-MM-dd') CONFIRM_DATE,
			       WIND.WIND_RESULT, --申请日期、批准日期、批准状态
			       TO_CHAR(PRO.SIGNED_DATE, 'yyyy-MM-dd') SIGNED_DATE,
			       CLI.NAME CLIENT_NAME,
			       CLI.CUST_ID CLIENT_CODE,
			       CLI.ID_CARD_NO,
			       CASE
			         WHEN CLI.TYPE = 'LP' THEN
			          CLI.LEGAL_PERSON_PHONE
			         ELSE
			          CLI.TEL_PHONE
			       END CONTACT_WAY, --联系方式
			       (SELECT B.FLAG
			          FROM T_SYS_DATA_DICTIONARY B
			         WHERE B.TYPE = '客户类型'
			           AND B.STATUS = 0
			           AND B.CODE = CLI.TYPE) CLIENT_TYPE, --客户类型
			       CLI.TYPE CLIENT_TYPE_D,
			       (SELECT B.FLAG
			          FROM T_SYS_DATA_DICTIONARY B
			         WHERE B.TYPE = '纳税资质'
			           AND B.STATUS = 0
			           AND B.CODE = CLI.TAX_QUALIFICATION) TAX_QUALIFICATION, --纳税资质
			       CLI.HOUSR_RE_ADDRESS,
			       EQU.PRODUCT_NAME,
			       EQU.SPEC_NAME,
			       EQU.COMPANY_NAME,
			       EQU.SUPPLIERS_NAME,
			       PRO.RENT_PAYMENT_TYPE,
			       EQU.WHOLE_ENGINE_CODE,
			       EQU.AMOUNT,
			       TO_CHAR(RECE.RECEIVE_DATE, 'yyyy-MM-dd') ACCEPT_DATE,
			       TO_CHAR(PAY.START_DATE, 'yyyy-MM-dd') ON_HIRE_DATE,
			       PAY.LEASE_TERM,
			       TO_CHAR(PAY.END_DATE, 'yyyy-MM-dd') END_DATE,
			       EQU.DELIVER_ADDRESS,
			       CASE SUBSTR(MORT.STATE, -1)
			         WHEN '0' THEN
			          '已抵押'
			         WHEN '1' THEN
			          '已解押'
			         ELSE
			          '未抵押'
			       END MORT_STATE,
			       CASE
			         WHEN EQU.WHETHER_CREATE_INSURE IS NULL THEN
			          '未创建'
			         WHEN EQU.WHETHER_CREATE_INSURE = 'yes' THEN
			          '已创建'
			       END INSURE_STATE,
			       CASE PAYMENT.IS_PAY_WHY
			         WHEN 1 THEN
			          '是'
			         WHEN 0 THEN
			          '否'
			       END IS_LOAN, --是否放款
			       TO_CHAR(PAYMENT.RESERVE_DATE, 'yyyy-MM-dd') EXPECT_LOAN_DATE, --预计放款日期
			       TO_CHAR(PAYMENT.REALITY_DATE, 'yyyy-MM-dd') REAL_LOAN_DATE, --实际放款日期
			       PAY.LEASE_TOPRIC,
			       PAY.TOPRIC_SUBFIRENT,
			       PAY_MIN.YEAR_INTEREST YD_INTEREST,
			       PAY.YEAR_INTEREST,
			       PAY.FIRSTRENT_VALUE,
			       PAY.FIRSTRENT_RATE,
			       (SELECT MAX(PAY_D.ITEM_MONEY)
			          FROM FIL_RENT_PLAN_DETAIL PAY_D
			         WHERE PAY_D.PAY_ID = PAY.ID
			           AND PAY_D.PERIOD_NUM = 1
			           AND PAY_D.ITEM_NAME = '租金') FIRST_RENTMONEY, --第一期租金
			       PAY.DEPOSIT_VALUE,
			       PAY.INSURANCE_PERCENT * 0.01 * PAY.LEASE_TOPRIC INSURANCE_VALUE,
			       PAY.POUNDAGE_PRICE,
			       PAY.POUNDAGE_VALUE,
			       EQU.STAYBUY_PRICE,
			       PAY.FIRST_MONEY_ALL,
			       (SELECT SUM(P.ITEM_MONEY)
			          FROM FIL_RENT_PLAN_DETAIL P
			         WHERE P.PAY_ID = PAY.ID
			           AND P.ITEM_FLAG = 4) OTHER_SUM, --其他费用合计
			       PAY.FIRSTPAYDATE,
			       PAY.MONEY_ALL,
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.ITEM_FLAG = 2
			           AND BEG.BEGINNING_NAME = '利息') INTEREST_SUM, --利息合计
			       (SELECT MAX(BEG.BEGINNING_NUM)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID != 0
			           AND BEG.ITEM_FLAG = 2) PAID_COUNT, --已还期数
			       (SELECT SUM(BEG.BEGINNING_PAID)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID != 0
			           AND BEG.ITEM_FLAG = 2) PAID_SUM, --已还租金
			       PAY.LEASE_TERM - (SELECT MAX(BEG.BEGINNING_NUM)
			                           FROM FI_R_BEGINNING BEG
			                          WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			                            AND BEG.BEGINNING_PAID != 0
			                            AND BEG.ITEM_FLAG = 2) UNPAID_COUNT, --剩余期数
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID = 0
			           AND BEG.ITEM_FLAG = 2) UNPAID_MONEY, --租金余额
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID = 0
			           AND BEG.ITEM_FLAG = 2
			           AND BEG.BEGINNING_NAME = '本金') UNPAID_PRINCIPAL, --剩余本金
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID = 0
			           AND BEG.ITEM_FLAG = 2
			           AND BEG.BEGINNING_NAME = '利息') UNPAID_INTEREST, --剩余利息
			       (SELECT SUM(OVE.RENT_RECE - OVE.RENT_PAID)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) OVER_MONEY, --逾期租金
			       (SELECT MAX(OVE.PENALTY_DAY)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) OVER_DAYS, --逾期天数
			       (SELECT SUM(OVE.PENALTY_RECE)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) PENAL_SUM, --违约金合计
			       (SELECT SUM(OVE.PENALTY_PAID)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) PENAL_PAID, --已收违约金
			       (SELECT SUM(OVE.PENALTY_RECE - OVE.PENALTY_PAID)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) PENAL_UNPAID, --未收违约金
			       0 PENAL_RELIEF, --减免违约金
			       (SELECT COUNT(1)
			          FROM FI_OVERDUE OVE
			         WHERE TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')
			           AND OVE.PAY_CODE = PAY.PAYLIST_CODE) OVER_PERIOD, --逾期期数
			       (SELECT SUM(P)
			          FROM (SELECT PAY_CODE, PERIOD, MAX(PENALTY_DAY) P
			                  FROM FI_OVERDUE
			                 GROUP BY PERIOD, PAY_CODE) OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE) OVER_DAYS_SUM, --累计逾期天数
			       (SELECT COUNT(1)
			          FROM (SELECT PAY_CODE, PERIOD
			                  FROM FI_OVERDUE
			                 GROUP BY PERIOD, PAY_CODE) OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE) OVER_PERIOD_SUM, --累计逾期期数（累计的，都是加上历史的）
			       BANK.BANK_NAME,
			       BANK.BANK_ACCOUNT,
			       '' BANK_STATUS,
			       CASE
			         WHEN PRO.GUARANTEE = '4assuretype' THEN
			          '是'
			         ELSE
			          '否'
			       END THIRD_GUA,
			       '' GUAR_NAME, --担保人
			       (SELECT B.FLAG
			          FROM T_SYS_DATA_DICTIONARY B
			         WHERE B.TYPE = '开票方式'
			           AND B.STATUS = 0
			           AND B.CODE = INVOICE.INVOICEPATTERN) INVOICEPATTERN --开票方式
			  FROM FIL_PROJECT_HEAD              PRO,
			       FIL_CUST_CLIENT               CLI,
			       FIL_PROJECT_EQUIPMENT         EQU,
			       FIL_RENT_PLAN_HEAD_BAS_MAX__V PAY,
			       FIL_LEASEMORTGAGE             MORT,
			       FIL_RENT_PLAN_HEAD_BAS_MIN__V PAY_MIN,
			       FIL_CUST_OPENINGBANK          BANK,
			       FIL_WIND_CONTROL_SUMMARY      WIND,
			       FIL_EQUIPMENT_SENDNOTICE      NOTICE,
			       FIL_EQUIMENT_RECEIPT          RECE,
			       FI_FUND_PAYMENT_DETAIL        PAYMENT,
			       FIL_INVOICE_APPLICATION       INVOICE
			 WHERE 1 = 1
			   AND PAY.PROJECT_ID = PRO.ID --连接项目表----以支付表为主
			   AND PRO.CLIENT_ID = CLI.ID --连接客户表
			   AND PAY.PAYLIST_CODE = EQU.PAYLIST_CODE
			   AND EQU.ID = (SELECT MAX(O.ID)
			                   FROM FIL_PROJECT_EQUIPMENT O
			                  WHERE O.PAYLIST_CODE = PAY.PAYLIST_CODE) --连接设备表,取其中的一条数据
			   AND EQU.ID = MORT.FPE_ID(+) --连接抵押表
			   AND PAY.PAYLIST_CODE = PAY_MIN.PAYLIST_CODE --连接最小版本号支付表视图
			   AND CLI.ID = BANK.CLIENT_ID(+)
			   AND BANK.ID = (SELECT MAX(Q.ID)
			                    FROM FIL_CUST_OPENINGBANK Q
			                   WHERE Q.CLIENT_ID = CLI.ID) --连接开户银行表，取其中的一条数据
			   AND PRO.ID = WIND.PROJECT_ID(+) --连接风控表
			   AND PAY.ID = NOTICE.PAY_ID(+)
			   AND RECE.SENDNOTICE_ID(+) = NOTICE.ID --连接发货验收表
			   AND PAYMENT.PAYLIST_CODE(+) = PAY.PAYLIST_CODE --连接放款表
			   AND INVOICE.PAY_ID(+) = PAY.ID --连接开票协议表
			   ) aa
				where 1=1			
				<if test="SQRQ_START !=null and  SQRQ_START!=''">and aa.APPLY_DATE>=#{SQRQ_START}</if>
				<if test="SQRQ_END !=null and SQRQ_END !='' ">and aa.APPLY_DATE &lt;#{SQRQ_END}</if>
				<if test="QYRQ_START !=null and QYRQ_START !=''">and aa.SIGNED_DATE>=#{QYRQ_START}</if>
				<if test="QYRQ_END !=null and QYRQ_END !=''">and aa.SIGNED_DATE &lt;#{QYRQ_END}</if>					
				<if test="SF !=null and SF !=''" >and aa.PROVINCE_NAME = #{SF} </if>					
				<if test="FZJG !=null and FZJG !=''">and aa.SUB_COMPANY_NAME = #{FZJG} </if>
				<if test="YWLX !=null and YWLX !='' ">and aa.PLATFORM_TYPE_D = #{YWLX}</if>					
				<if test="KHLX !=null and KHLX !=''" >and aa.CLIENT_TYPE_D = #{KHLX} </if>					
				<if test="PZZT !=null and PZZT !=''">and aa.WIND_RESULT = #{PZZT} </if>
				<if test="YQTS_START !=null and YQTS_START !='' ">and aa.OVER_DAYS >= #{YQTS_START}</if>
				<if test="YQTS_END !=null and YQTS_END !='' ">and aa.OVER_DAYS &lt;#{YQTS_END}</if>
				<if test="FKSJ_START !=null and FKSJ_START !='' ">and aa.REAL_LOAN_DATE >= #{FKSJ_START}</if>
				<if test="FKSJ_END !=null and FKSJ_END !='' ">and aa.REAL_LOAN_DATE &lt; #{FKSJ_END}</if>
				         
			) CC
				<if test="PAGE_END!=null and PAGE_END!=''">
					WHERE ROWNUM &lt;= ${PAGE_END}	
				</if>
			) CCC
			
				<if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">
					WHERE CCC.ROWNO >= ${PAGE_BEGIN} 
				</if>
		 
	</select>
	
	<select id="querySuperTableCount"  parameterType="java.util.Map" resultType="int" >
	 	SELECT COUNT(1) 
  			FROM (
  					SELECT * FROM (
				SELECT PRO.PROVINCE_NAME,
			       PRO.CITY_NAME,
			       PRO.SUB_COMPANY_NAME,
			       PRO.PRO_CODE,
			       (SELECT B.FLAG
			          FROM T_SYS_SITE_DICTIONARY B
			         WHERE B.TYPE = '业务类型'
			           AND B.STATUS = 0
			           AND B.CODE = PRO.PLATFORM_TYPE) PLATFORM_TYPE, --业务类型
			       PRO.PLATFORM_TYPE PLATFORM_TYPE_D,
			       TO_CHAR(PRO.CREATE_TIME, 'yyyy-MM-dd') APPLY_DATE,
			       TO_CHAR(PRO.CREDIT_RATIFY_DATE, 'yyyy-MM-dd') CONFIRM_DATE,
			       WIND.WIND_RESULT, --申请日期、批准日期、批准状态
			       TO_CHAR(PRO.SIGNED_DATE, 'yyyy-MM-dd') SIGNED_DATE,
			       CLI.NAME CLIENT_NAME,
			       CLI.CUST_ID CLIENT_CODE,
			       CLI.ID_CARD_NO,
			       CASE
			         WHEN CLI.TYPE = 'LP' THEN
			          CLI.LEGAL_PERSON_PHONE
			         ELSE
			          CLI.TEL_PHONE
			       END CONTACT_WAY, --联系方式
			       (SELECT B.FLAG
			          FROM T_SYS_DATA_DICTIONARY B
			         WHERE B.TYPE = '客户类型'
			           AND B.STATUS = 0
			           AND B.CODE = CLI.TYPE) CLIENT_TYPE, --客户类型
			       CLI.TYPE CLIENT_TYPE_D,
			       (SELECT B.FLAG
			          FROM T_SYS_DATA_DICTIONARY B
			         WHERE B.TYPE = '纳税资质'
			           AND B.STATUS = 0
			           AND B.CODE = CLI.TAX_QUALIFICATION) TAX_QUALIFICATION, --纳税资质
			       CLI.HOUSR_RE_ADDRESS,
			       EQU.PRODUCT_NAME,
			       EQU.SPEC_NAME,
			       EQU.COMPANY_NAME,
			       EQU.SUPPLIERS_NAME,
			       PRO.RENT_PAYMENT_TYPE,
			       EQU.WHOLE_ENGINE_CODE,
			       EQU.AMOUNT,
			       TO_CHAR(RECE.RECEIVE_DATE, 'yyyy-MM-dd') ACCEPT_DATE,
			       TO_CHAR(PAY.START_DATE, 'yyyy-MM-dd') ON_HIRE_DATE,
			       PAY.LEASE_TERM,
			       TO_CHAR(PAY.END_DATE, 'yyyy-MM-dd') END_DATE,
			       EQU.DELIVER_ADDRESS,
			       CASE SUBSTR(MORT.STATE, -1)
			         WHEN '0' THEN
			          '已抵押'
			         WHEN '1' THEN
			          '已解押'
			         ELSE
			          '未抵押'
			       END MORT_STATE,
			       CASE
			         WHEN EQU.WHETHER_CREATE_INSURE IS NULL THEN
			          '未创建'
			         WHEN EQU.WHETHER_CREATE_INSURE = 'yes' THEN
			          '已创建'
			       END INSURE_STATE,
			       CASE PAYMENT.IS_PAY_WHY
			         WHEN 1 THEN
			          '是'
			         WHEN 0 THEN
			          '否'
			       END IS_LOAN, --是否放款
			       TO_CHAR(PAYMENT.RESERVE_DATE, 'yyyy-MM-dd') EXPECT_LOAN_DATE, --预计放款日期
			       TO_CHAR(PAYMENT.REALITY_DATE, 'yyyy-MM-dd') REAL_LOAN_DATE, --实际放款日期
			       PAY.LEASE_TOPRIC,
			       PAY.TOPRIC_SUBFIRENT,
			       PAY_MIN.YEAR_INTEREST YD_INTEREST,
			       PAY.YEAR_INTEREST,
			       PAY.FIRSTRENT_VALUE,
			       PAY.FIRSTRENT_RATE,
			       (SELECT MAX(PAY_D.ITEM_MONEY)
			          FROM FIL_RENT_PLAN_DETAIL PAY_D
			         WHERE PAY_D.PAY_ID = PAY.ID
			           AND PAY_D.PERIOD_NUM = 1
			           AND PAY_D.ITEM_NAME = '租金') FIRST_RENTMONEY, --第一期租金
			       PAY.DEPOSIT_VALUE,
			       PAY.INSURANCE_PERCENT * 0.01 * PAY.LEASE_TOPRIC INSURANCE_VALUE,
			       PAY.POUNDAGE_PRICE,
			       PAY.POUNDAGE_VALUE,
			       EQU.STAYBUY_PRICE,
			       PAY.FIRST_MONEY_ALL,
			       (SELECT SUM(P.ITEM_MONEY)
			          FROM FIL_RENT_PLAN_DETAIL P
			         WHERE P.PAY_ID = PAY.ID
			           AND P.ITEM_FLAG = 4) OTHER_SUM, --其他费用合计
			       PAY.FIRSTPAYDATE,
			       PAY.MONEY_ALL,
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.ITEM_FLAG = 2
			           AND BEG.BEGINNING_NAME = '利息') INTEREST_SUM, --利息合计
			       (SELECT MAX(BEG.BEGINNING_NUM)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID != 0
			           AND BEG.ITEM_FLAG = 2) PAID_COUNT, --已还期数
			       (SELECT SUM(BEG.BEGINNING_PAID)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID != 0
			           AND BEG.ITEM_FLAG = 2) PAID_SUM, --已还租金
			       PAY.LEASE_TERM - (SELECT MAX(BEG.BEGINNING_NUM)
			                           FROM FI_R_BEGINNING BEG
			                          WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			                            AND BEG.BEGINNING_PAID != 0
			                            AND BEG.ITEM_FLAG = 2) UNPAID_COUNT, --剩余期数
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID = 0
			           AND BEG.ITEM_FLAG = 2) UNPAID_MONEY, --租金余额
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID = 0
			           AND BEG.ITEM_FLAG = 2
			           AND BEG.BEGINNING_NAME = '本金') UNPAID_PRINCIPAL, --剩余本金
			       (SELECT SUM(BEG.BEGINNING_MONEY)
			          FROM FI_R_BEGINNING BEG
			         WHERE BEG.PAYLIST_CODE = PAY.PAYLIST_CODE
			           AND BEG.BEGINNING_PAID = 0
			           AND BEG.ITEM_FLAG = 2
			           AND BEG.BEGINNING_NAME = '利息') UNPAID_INTEREST, --剩余利息
			       (SELECT SUM(OVE.RENT_RECE - OVE.RENT_PAID)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) OVER_MONEY, --逾期租金
			       (SELECT MAX(OVE.PENALTY_DAY)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) OVER_DAYS, --逾期天数
			       (SELECT SUM(OVE.PENALTY_RECE)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) PENAL_SUM, --违约金合计
			       (SELECT SUM(OVE.PENALTY_PAID)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) PENAL_PAID, --已收违约金
			       (SELECT SUM(OVE.PENALTY_RECE - OVE.PENALTY_PAID)
			          FROM FI_OVERDUE OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE
			           AND TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')) PENAL_UNPAID, --未收违约金
			       0 PENAL_RELIEF, --减免违约金
			       (SELECT COUNT(1)
			          FROM FI_OVERDUE OVE
			         WHERE TO_CHAR(OVE.CREATE_DATE, 'yyyy-MM-dd') =
			               TO_CHAR(SYSDATE - 2, 'yyyy-MM-dd')
			           AND OVE.PAY_CODE = PAY.PAYLIST_CODE) OVER_PERIOD, --逾期期数
			       (SELECT SUM(P)
			          FROM (SELECT PAY_CODE, PERIOD, MAX(PENALTY_DAY) P
			                  FROM FI_OVERDUE
			                 GROUP BY PERIOD, PAY_CODE) OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE) OVER_DAYS_SUM, --累计逾期天数
			       (SELECT COUNT(1)
			          FROM (SELECT PAY_CODE, PERIOD
			                  FROM FI_OVERDUE
			                 GROUP BY PERIOD, PAY_CODE) OVE
			         WHERE OVE.PAY_CODE = PAY.PAYLIST_CODE) OVER_PERIOD_SUM, --累计逾期期数（累计的，都是加上历史的）
			       BANK.BANK_NAME,
			       BANK.BANK_ACCOUNT,
			       '' BANK_STATUS,
			       CASE
			         WHEN PRO.GUARANTEE = '4assuretype' THEN
			          '是'
			         ELSE
			          '否'
			       END THIRD_GUA,
			       '' GUAR_NAME, --担保人
			       (SELECT B.FLAG
			          FROM T_SYS_DATA_DICTIONARY B
			         WHERE B.TYPE = '开票方式'
			           AND B.STATUS = 0
			           AND B.CODE = INVOICE.INVOICEPATTERN) INVOICEPATTERN --开票方式
			  FROM FIL_PROJECT_HEAD              PRO,
			       FIL_CUST_CLIENT               CLI,
			       FIL_PROJECT_EQUIPMENT         EQU,
			       FIL_RENT_PLAN_HEAD_BAS_MAX__V PAY,
			       FIL_LEASEMORTGAGE             MORT,
			       FIL_RENT_PLAN_HEAD_BAS_MIN__V PAY_MIN,
			       FIL_CUST_OPENINGBANK          BANK,
			       FIL_WIND_CONTROL_SUMMARY      WIND,
			       FIL_EQUIPMENT_SENDNOTICE      NOTICE,
			       FIL_EQUIMENT_RECEIPT          RECE,
			       FI_FUND_PAYMENT_DETAIL        PAYMENT,
			       FIL_INVOICE_APPLICATION       INVOICE
			 WHERE 1 = 1
			   AND PAY.PROJECT_ID = PRO.ID --连接项目表----以支付表为主
			   AND PRO.CLIENT_ID = CLI.ID --连接客户表
			   AND PAY.PAYLIST_CODE = EQU.PAYLIST_CODE
			   AND EQU.ID = (SELECT MAX(O.ID)
			                   FROM FIL_PROJECT_EQUIPMENT O
			                  WHERE O.PAYLIST_CODE = PAY.PAYLIST_CODE) --连接设备表,取其中的一条数据
			   AND EQU.ID = MORT.FPE_ID(+) --连接抵押表
			   AND PAY.PAYLIST_CODE = PAY_MIN.PAYLIST_CODE --连接最小版本号支付表视图
			   AND CLI.ID = BANK.CLIENT_ID(+)
			   AND BANK.ID = (SELECT MAX(Q.ID)
			                    FROM FIL_CUST_OPENINGBANK Q
			                   WHERE Q.CLIENT_ID = CLI.ID) --连接开户银行表，取其中的一条数据
			   AND PRO.ID = WIND.PROJECT_ID(+) --连接风控表
			   AND PAY.ID = NOTICE.PAY_ID(+)
			   AND RECE.SENDNOTICE_ID(+) = NOTICE.ID --连接发货验收表
			   AND PAYMENT.PAYLIST_CODE(+) = PAY.PAYLIST_CODE --连接放款表
			   AND INVOICE.PAY_ID(+) = PAY.ID --连接开票协议表
			   ) aa
				where 1=1			
				<if test="SQRQ_START !=null and  SQRQ_START!=''">and aa.APPLY_DATE>=#{SQRQ_START}</if>
				<if test="SQRQ_END !=null and SQRQ_END !='' ">and aa.APPLY_DATE &lt;#{SQRQ_END}</if>
				<if test="QYRQ_START !=null and QYRQ_START !=''">and aa.SIGNED_DATE>=#{QYRQ_START}</if>
				<if test="QYRQ_END !=null and QYRQ_END !=''">and aa.SIGNED_DATE &lt;#{QYRQ_END}</if>					
				<if test="SF !=null and SF !=''" >and aa.PROVINCE_NAME = #{SF} </if>					
				<if test="FZJG !=null and FZJG !=''">and aa.SUB_COMPANY_NAME = #{FZJG} </if>
				<if test="YWLX !=null and YWLX !='' ">and aa.PLATFORM_TYPE_D = #{YWLX}</if>					
				<if test="KHLX !=null and KHLX !=''" >and aa.CLIENT_TYPE_D = #{KHLX} </if>					
				<if test="PZZT !=null and PZZT !=''">and aa.WIND_RESULT = #{PZZT} </if>
				<if test="YQTS_START !=null and YQTS_START !='' ">and aa.OVER_DAYS >= #{YQTS_START}</if>
				<if test="YQTS_END !=null and YQTS_END !='' ">and aa.OVER_DAYS &lt;#{YQTS_END}</if>
				<if test="FKSJ_START !=null and FKSJ_START !='' ">and aa.REAL_LOAN_DATE >= #{FKSJ_START}</if>
				<if test="FKSJ_END !=null and FKSJ_END !='' ">and aa.REAL_LOAN_DATE &lt; #{FKSJ_END}</if>
		                                                          
  			)
 				
	</select>
	
	<select id="getProvince1" parameterType="Map" resultType="Map">
		SELECT ID AREA_ID, NAME, AREA_CODE
		  FROM T_SYS_AREA
		 WHERE SHORT_NAME IS NOT NULL and AREA_LEVEL=3
		 ORDER BY nlssort(NAME,'NLS_SORT=SCHINESE_PINYIN_M')
	</select>
	
	<select id="getBranches"  resultType="Map">
		SELECT DISTINCT PRO.SUB_COMPANY_NAME BRANCH_NAME FROM FIL_PROJECT_HEAD PRO
	</select>
	
	<select id="getApplyStatus"  resultType="Map">
		SELECT DISTINCT WIND.WIND_RESULT FROM FIL_WIND_CONTROL_SUMMARY WIND
	</select>
</mapper>