<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="SupplierBailPool">
<select id="getSupDbBailList" parameterType="Map" resultType="Map">
	SELECT * FROM (
		SELECT T.*,ROWNUM ROWNO FROM (
			SELECT S.SUP_ID,
			       S.SCODE,
			       S.SUP_SHORTNAME,
			       SUM(P.BASE_MONEY) BASE_MONEY,
			       SUM(P.CANUSE_MONEY) CANUSE_MONEY  
			  FROM FI_DEPOSIT_POOL P ,
			       T_SYS_SUPPLIERS S 
			 WHERE P.OWNER_ID=S.SUP_ID AND <![CDATA[P.STATUS <2 ]]> AND P.TYPE = 1
			GROUP BY S.SCODE, S.SUP_SHORTNAME,S.SUP_ID
		)T
		WHERE 1=1
		<if test="SUP_SHORTNAME !=null and SUP_SHORTNAME !=''">AND T.SUP_SHORTNAME LIKE '%${SUP_SHORTNAME}%'</if>
		<if test="SCODE !=null and SCODE !=''">AND T.SCODE = #{SCODE}</if>
		<if test="PAGE_END !=null and PAGE_END !=''">AND <![CDATA[ROWNUM <= #{PAGE_END}]]></if>
	)TT WHERE TT.ROWNO >= #{PAGE_BEGIN}  
</select>

<select id="getSupDbBailCount" parameterType="Map" resultType="int">
	SELECT COUNT(1) FROM (
		SELECT S.SUP_ID,
		       S.SCODE,
		       S.SUP_SHORTNAME,
		       SUM(P.BASE_MONEY) BASE_MONEY,
		       SUM(P.CANUSE_MONEY) CANUSE_MONEY  
		  FROM FI_DEPOSIT_POOL P ,
		       T_SYS_SUPPLIERS S 
		 WHERE P.OWNER_ID=S.SUP_ID AND <![CDATA[P.STATUS <2 ]]> AND P.TYPE = 1
		GROUP BY S.SCODE, S.SUP_SHORTNAME, S.SUP_ID
	)T
	WHERE 1=1
	<if test="SUP_SHORTNAME !=null and SUP_SHORTNAME !=''">AND T.SUP_SHORTNAME LIKE '%${SUP_SHORTNAME}%'</if>
	<if test="SCODE !=null and SCODE !=''">AND T.SCODE = #{SCODE}</if>
</select>

<select id="getOneSupFunds" parameterType="Map" resultType="Map">
SELECT SU.SUP_NAME,
       SU.SCODE,
       SU.SUP_ID,
       P.PROJECT_ID,
       CU.NAME CUST_NAME,
       H.CLERK_NAME,
       H.PRO_NAME,
       H.PRO_CODE,
       H.STATUS PROJECT_STATUS,
       H.DELIVER_DATE ,
       P.BASE_MONEY,
       P.CANUSE_MONEY,
       (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE=P.STATUS AND DIC.TYPE= #{DB_STATUS}) STATUS,
       TO_CHAR(P.THAW_TIME,'YYYY-MM-DD') THAW_TIME,
       TO_CHAR(P.PAY_TIME,'YYYY-MM-DD') PAY_TIME,
       P.TYPE,
       P.POOL_ID ,
       P.RE_ID
  FROM FI_DEPOSIT_POOL P ,
       T_SYS_SUPPLIERS SU ,
       FIL_PROJECT_HEAD H ,
       FIL_CUST_CLIENT CU
 WHERE P.OWNER_ID = SU.SUP_ID(+) 
   AND P.PROJECT_ID = H.ID(+)
   AND H.CLIENT_ID = CU.ID(+)
   AND P.POOL_ID = #{POOL_ID}
</select>

<select id="getDbBailList" parameterType="Map" resultType="Map">
SELECT SU.SUP_NAME,
       SU.SCODE,
       SU.SUP_ID,
       P.PROJECT_ID,
       CU.NAME CUST_NAME,
       H.CLERK_NAME,
       H.PRO_NAME,
       H.PRO_CODE,
       FRP.PAYLIST_CODE,
       H.STATUS PROJECT_STATUS,
       H.DELIVER_DATE ,
       P.BASE_MONEY,
       P.CANUSE_MONEY,
       (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE=P.STATUS AND DIC.TYPE= #{DB_STATUS}) STATUS,
       TO_CHAR(P.THAW_TIME,'YYYY-MM-DD') THAW_TIME,
       TO_CHAR(P.PAY_TIME,'YYYY-MM-DD') PAY_TIME,
       P.TYPE,
       P.POOL_ID ,
       P.RE_ID
  FROM FI_DEPOSIT_POOL P ,
       T_SYS_SUPPLIERS SU ,
       FIL_PROJECT_HEAD H ,
       FIL_CUST_CLIENT CU,
       FIL_RENT_PLAN_HEAD_MAX_V FRP
 WHERE P.OWNER_ID = SU.SUP_ID(+) 
   AND P.PROJECT_ID = H.ID(+)
   AND H.CLIENT_ID = CU.ID(+)
   and H.ID = FRP.PROJECT_ID(+)
   AND P.TYPE = 1
   <if test="STATUS !=null and STATUS !=''">AND <![CDATA[P.STATUS <2]]></if>
   <if test="STATUS2 !=null and STATU2 !=''">AND P.STATUS IN(2,3) </if>
   <if test="SUP_ID !=null and SUP_ID !=''">AND SU.SUP_ID = #{SUP_ID}</if>
   <if test="RE_ID !=null and RE_ID !=''">AND P.RE_ID = #{RE_ID}</if>
   <if test="PROJECT_ID !=null and PROJECT_ID !=''">AND P.PROJECT_ID = #{PROJECT_ID}</if>
   ORDER BY P.THAW_TIME 
</select>

<insert id="addFunds" parameterType="Map">
INTO FI_DEPOSIT_POOL
  (
    POOL_ID
    <if test="OWNER_ID !=null and OWNER_ID !=''">,OWNER_ID</if>
    <if test="PROJECT_ID !=null and PROJECT_ID !=''">,PROJECT_ID</if>
    <if test="BASE_MONEY !=null and BASE_MONEY !=''">,BASE_MONEY</if>
    <if test="CANUSE_MONEY !=null and CANUSE_MONEY !=''">,CANUSE_MONEY</if>
    <if test="STATUS !=null and STATUS !=''">,STATUS</if>
    <if test="PAY_TIME !=null and PAY_TIME !=''">,PAY_TIME</if>
    <if test="THAW_TIME !=null and THAW_TIME !=''">,THAW_TIME</if>
    <if test="TYPE !=null and TYPE !=''">,TYPE</if> 
    <if test="PAYER !=null and PAYER!=''">,PAYER </if>
    <if test="SOURCE_ID !=null and SOURCE_ID !=''">,SOURCE_ID</if>
  ) 
  VALUES
  (
    SEQ_FI_DEPOSIT_POOL.NEXTVAL
    <if test="OWNER_ID !=null and OWNER_ID !=''">,#{OWNER_ID}</if>
    <if test="PROJECT_ID !=null and PROJECT_ID !=''">,#{PROJECT_ID}</if>
    <if test="BASE_MONEY !=null and BASE_MONEY !=''">,#{BASE_MONEY}</if>
    <if test="CANUSE_MONEY !=null and CANUSE_MONEY !=''">,#{CANUSE_MONEY}</if>
    <if test="STATUS !=null and STATUS !=''">,#{STATUS}</if>
    <if test="PAY_TIME !=null and PAY_TIME !=''">,TO_DATE(#{PAY_TIME},'YYYY-MM-DD')</if>
    <if test="THAW_TIME !=null and THAW_TIME !=''">,TO_DATE(#{THAW_TIME},'YYYY-MM-DD')</if>
    <if test="TYPE !=null and TYPE !=''">,#{TYPE}</if>
    <if test="PAYER !=null and PAYER!=''">,#{PAYER}</if>
    <if test="SOURCE_ID !=null and SOURCE_ID !=''">,#{SOURCE_ID}</if>
  )
</insert>

<update id="updateFundsPool" parameterType="Map">
UPDATE FI_DEPOSIT_POOL
   SET POOL_ID = #{POOL_ID}
       <if test="CANUSE_MONEY !=null and CANUSE_MONEY !=''">,CANUSE_MONEY = #{CANUSE_MONEY}</if>
       <if test="STATUS !=null and STATUS !=''">,STATUS = #{STATUS}</if>
       <if test="PAY_TIME !=null and PAY_TIME !=''">,PAY_TIME = TO_DATE(#{PAY_TIME},'YYYY-MM-DD')</if>
       <if test="THAW_TIME !=null and THAW_TIME !=''">,THAW_TIME = TO_DATE(#{THAW_TIME},'YYYY-MM-DD')</if>
 WHERE POOL_ID = #{POOL_ID}
</update>

<select id="getSupRefundMess" parameterType="Map" resultType="Map">
   SELECT SUP.SUP_ID,
          SUP.SCODE,
		  SUP.SUP_SHORTNAME,
		  SUP.COMPANY_ID,
		  COM.COMPANY_NAME,
		  SUP.SUP_NAME,
		  SUP.SUP_ADDRESS,
		  SUP.OPEN_BANK,
		  SUP.OPEN_BANK_NUMBER,
		  SUP.OPEN_BANK_ADDR,
		  SUP.LOANS_OWN_UNIT ,
		  SUP.LOANS_OWN_ADDR ,
		  SUP.LOANS_OWN_BANK ,
		  SUP.LOANS_OWN_ACCOUNT, 
		  SUP.STATUS
	 FROM T_SYS_SUPPLIERS SUP,
	      T_SYS_COMPANY COM
	WHERE SUP.COMPANY_ID = COM.COMPANY_ID(+)
	<if test="SUP_ID !=null and SUP_ID !=''">AND SUP.SUP_ID = #{SUP_ID}</if>
</select>

<update id="updateSupDbRefundId" parameterType="Map">
UPDATE FI_DEPOSIT_POOL P
   SET P.STATUS = #{STATUS}
      ,P.RE_ID = #{RE_ID}
       <if test="THAW_TIME !=null and THAW_TIME !=''">,P.THAW_TIME = SYSDATE</if>
 WHERE P.POOL_ID IN  <foreach collection="POOL_ID" close=")" open="(" separator="," item="item">#{item}</foreach>
</update>

<update id="updateDepositMoney" parameterType="Map">
UPDATE FI_DEPOSIT_POOL P
   SET P.CANUSE_MONEY = #{CANUSE_MONEY}
 WHERE P.POOL_ID = #{POOL_ID}
</update>


<insert id="addRefundDan" parameterType="Map">
INSERT INTO FI_REFUND_HEAD
  (
    RE_ID,
    RE_CODE,
    RE_DATE,
    RE_MONEY,
    RE_PROJECT_COUNT,
    RE_TYPE,
    RE_APPLY_NAME,
    RE_APPLY_TIME,
    RE_PAYEE_TYPE,
    CUST_ID,
    <if test="RE_PAYEE_NAME !=null and RE_PAYEE_NAME !=''">RE_PAYEE_NAME,</if>
    <if test="RE_PAYEE_UNIT !=null and RE_PAYEE_UNIT !=''">RE_PAYEE_UNIT,</if>
    <if test="RE_PAYEE_ADDRESS !=null and RE_PAYEE_ADDRESS !=''">RE_PAYEE_ADDRESS,</if>
    <if test="RE_PAYEE_BANK !=null and RE_PAYEE_BANK !=''">RE_PAYEE_BANK,</if>
    <if test="RE_PAYEE_ACCOUNT !=null and RE_PAYEE_ACCOUNT !=''">RE_PAYEE_ACCOUNT,</if>
    <if test="RE_PAYEE_BANK_ADDR !=null and RE_PAYEE_BANK_ADDR !=''">RE_PAYEE_BANK_ADDR,</if>
    RE_STATUS,
    CREATE_TIME 
  )
  VALUES
  (
    #{RE_ID},
    #{RE_CODE},
    TO_DATE(#{RE_DATE},'YYYY-MM-DD'),
    #{RE_MONEY},
    #{RE_PROJECT_COUNT},
    #{RE_TYPE},
    #{RE_APPLY_NAME},
    TO_DATE(#{RE_APPLY_TIME},'YYYY-MM-DD'),
    #{RE_PAYEE_TYPE},
    #{CUST_ID},
    <if test="RE_PAYEE_NAME !=null and RE_PAYEE_NAME !=''">#{RE_PAYEE_NAME},</if>
    <if test="RE_PAYEE_UNIT !=null and RE_PAYEE_UNIT !=''">#{RE_PAYEE_UNIT},</if>
    <if test="RE_PAYEE_ADDRESS !=null and RE_PAYEE_ADDRESS !=''">#{RE_PAYEE_ADDRESS},</if>
    <if test="RE_PAYEE_BANK !=null and RE_PAYEE_BANK !=''">#{RE_PAYEE_BANK},</if>
    <if test="RE_PAYEE_ACCOUNT !=null and RE_PAYEE_ACCOUNT !=''">#{RE_PAYEE_ACCOUNT},</if>
    <if test="RE_PAYEE_BANK_ADDR !=null and RE_PAYEE_BANK_ADDR !=''">#{RE_PAYEE_BANK_ADDR},</if>
    #{RE_STATUS},
    SYSDATE
  ) 

</insert>

<select id="getDbRefundDanList" parameterType="Map" resultType="Map">
SELECT * FROM (
  SELECT T.*,ROWNUM ROWNO FROM (
     SELECT HE.RE_ID,
            HE.RE_CODE,
            TO_CHAR(HE.RE_DATE,'YYYY-MM-DD') RE_DATE,
            HE.RE_MONEY,
            HE.RE_PROJECT_COUNT,
            HE.RE_TYPE,
            HE.RE_APPLY_NAME,
            TO_CHAR(HE.RE_APPLY_TIME,'YYYY-MM-DD') RE_APPLY_TIME,
            HE.RE_CHECKED_NAME,
            TO_CHAR(HE.RE_CHECKED_TIME,'YYYY-MM-DD') RE_CHECKED_TIME,
            HE.RE_PAYEE_TYPE,
            HE.CUST_ID,
            SU.SUP_ID,
            SU.SCODE,
            SU.SUP_NAME,
            SU.SUP_SHORTNAME,
            HE.RE_PAYEE_NAME,
            HE.RE_PAYEE_UNIT,
            HE.RE_PAYEE_ADDRESS,
            HE.RE_PAYEE_BANK,
            HE.RE_PAYEE_ACCOUNT,
            HE.RE_PAYEE_BANK_ADDR,
            TO_CHAR(HE.RE_REAL_TIME,'YYYY-MM-DD') RE_REAL_TIME,
            HE.RE_STATUS,
            (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE=HE.RE_STATUS AND DIC.TYPE= #{DIC_RE_STATUS}) STATUS,
            TO_CHAR(HE.CREATE_TIME,'YYYY-MM-DD') CREATE_TIME,
            HE.RE_REMARK 
       FROM FI_REFUND_HEAD HE,T_SYS_SUPPLIERS SU
      WHERE HE.CUST_ID = SU.SUP_ID(+)
        AND HE.RE_TYPE = 1
        AND HE.RE_STATUS = '2'
        
      <if test="RE_PAYEE_NAME !=null and RE_PAYEE_NAME !=''">AND HE.RE_PAYEE_NAME LIKE '%${RE_PAYEE_NAME}%'</if>
      <if test="RE_DATE !=null and RE_DATE !=''">AND HE.RE_DATE = TO_DATE(#{RE_DATE},'YYYY-MM-DD')</if>
      <if test="SUP_SHORTNAME !=null and SUP_SHORTNAME !=''">AND SU.SUP_SHORTNAME LIKE '%${SUP_SHORTNAME}%'</if>
  )T WHERE <![CDATA[ROWNUM <= #{PAGE_END}]]> )TT WHERE TT.ROWNO >= #{PAGE_BEGIN}   
</select>

<select id="getDbRefundDanCount" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM (
     SELECT HE.RE_ID,
            HE.RE_CODE,
            TO_CHAR(HE.RE_DATE,'YYYY-MM-DD') RE_DATE,
            HE.RE_MONEY,
            HE.RE_PROJECT_COUNT,
            HE.RE_TYPE,
            HE.RE_APPLY_NAME,
            TO_CHAR(HE.RE_APPLY_TIME,'YYYY-MM-DD') RE_APPLY_TIME,
            HE.RE_CHECKED_NAME,
            TO_CHAR(HE.RE_CHECKED_TIME,'YYYY-MM-DD') RE_CHECKED_TIME,
            HE.RE_PAYEE_TYPE,
            HE.CUST_ID,
            SU.SUP_ID,
            SU.SCODE,
            SU.SUP_NAME,
            SU.SUP_SHORTNAME,
            HE.RE_PAYEE_NAME,
            HE.RE_PAYEE_UNIT,
            HE.RE_PAYEE_ADDRESS,
            HE.RE_PAYEE_BANK,
            HE.RE_PAYEE_ACCOUNT,
            HE.RE_PAYEE_BANK_ADDR,
            TO_CHAR(HE.RE_REAL_TIME,'YYYY-MM-DD') RE_REAL_TIME,
            HE.RE_STATUS,
            TO_CHAR(HE.CREATE_TIME,'YYYY-MM-DD') CREATE_TIME,
            HE.RE_REMARK 
       FROM FI_REFUND_HEAD HE,T_SYS_SUPPLIERS SU
      WHERE HE.CUST_ID = SU.SUP_ID(+)
        AND HE.RE_TYPE = 1
        AND HE.RE_STATUS = '2'
      <if test="RE_PAYEE_UNIT !=null and RE_PAYEE_UNIT !=''">AND HE.RE_PAYEE_UNIT LIKE '%${RE_PAYEE_UNIT}%'</if>
      <if test="RE_DATE !=null and RE_DATE !=''">AND HE.RE_DATE = TO_DATE(#{RE_DATE},'YYYY-MM-DD')</if>
      <if test="SUP_SHORTNAME !=null and SUP_SHORTNAME !=''">AND SU.SUP_SHORTNAME LIKE '%${SUP_SHORTNAME}%'</if>
  )T 
</select>

<update id="updateRefundMess" parameterType="Map">
 UPDATE FI_REFUND_HEAD H 
    SET H.RE_ID = #{RE_ID}
        <if test="RE_MONEY !=null and RE_MONEY !=''">,H.RE_MONEY = #{RE_MONEY}</if>
        <if test="RE_STATUS !=null and RE_STATUS !=''">,H.RE_STATUS = #{RE_STATUS}</if>
        <if test="RE_PROJECT_COUNT !=null and RE_PROJECT_COUNT !=''">,H.RE_PROJECT_COUNT = #{RE_PROJECT_COUNT}</if> 
  WHERE H.RE_ID= #{RE_ID}
</update>

<delete id="delRefundMess" parameterType="Map">
 DELETE FI_REFUND_HEAD H WHERE H.RE_ID = #{RE_ID}
</delete>

<select id="getRefundMoney" parameterType="Map" resultType="Double">
  SELECT NVL(SUM(P.CANUSE_MONEY),0) MONEY FROM FI_DEPOSIT_POOL P WHERE P.RE_ID = #{RE_ID} AND P.STATUS IN(0,2)
</select>

<select id="getDepositRefundMess" parameterType="Map" resultType="Map">
SELECT HE.RE_ID,
       HE.RE_CODE,
       TO_CHAR(HE.RE_DATE,'YYYY-MM-DD') RE_DATE,
       HE.RE_MONEY,
       HE.RE_PROJECT_COUNT,
       HE.RE_TYPE,
       HE.RE_APPLY_NAME,
       TO_CHAR(HE.RE_APPLY_TIME,'YYYY-MM-DD') RE_APPLY_TIME,
       HE.RE_CHECKED_NAME,
       TO_CHAR(HE.RE_CHECKED_TIME,'YYYY-MM-DD') RE_CHECKED_TIME,
       HE.RE_PAYEE_TYPE,
       HE.CUST_ID,
       SU.SUP_ID,
       SU.SCODE,
       SU.SUP_NAME,
       SU.SUP_SHORTNAME,
       HE.RE_PAYEE_NAME,
       HE.RE_PAYEE_UNIT,
       HE.RE_PAYEE_ADDRESS,
       HE.RE_PAYEE_BANK,
       HE.RE_PAYEE_ACCOUNT,
       HE.RE_PAYEE_BANK_ADDR,
       TO_CHAR(HE.RE_REAL_TIME,'YYYY-MM-DD') RE_REAL_TIME,
       HE.RE_STATUS,
       (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE=HE.RE_STATUS AND DIC.TYPE= '退款单状态') STATUS,
       TO_CHAR(HE.CREATE_TIME,'YYYY-MM-DD') CREATE_TIME,
       HE.RE_REMARK ,
       ROWNUM ROWNO
  FROM FI_REFUND_HEAD HE,T_SYS_SUPPLIERS SU
 WHERE HE.RE_TYPE = 1
   AND HE.CUST_ID = SU.SUP_ID
   <if test="sqlData !=null and sqlData !=''">AND HE.RE_ID IN(${sqlData})</if>
   ORDER BY SU.SUP_ID
</select>

<select id="getRefundDetailExcel" parameterType="Map" resultType="Map">
SELECT SU.SUP_NAME,
       SU.SCODE,
       SU.SUP_ID,
       SU.SUP_SHORTNAME,
       P.PROJECT_ID,
       CU.NAME CLIENT_NAME,
       H.CLERK_NAME,
       H.PRO_NAME,
       H.PRO_CODE,
       getDictShortnameByCode('项目状态位',H.STATUS) PROJECT_STATUS,
       H.DELIVER_DATE ,
       P.BASE_MONEY,
       P.CANUSE_MONEY RE_MONEY,
       TO_CHAR(MV.START_CONFIRM_DATE,'YYYY-MM-DD') START_CONFIRM_DATE,
       TO_CHAR(MV.END_DATE,'YYYY-MM-DD') END_DATE,
       SU.SUP_NAME RE_PAYEE_UNIT,
       TO_CHAR(P.THAW_TIME,'YYYY-MM-DD') THAW_TIME,
       TO_CHAR(P.PAY_TIME,'YYYY-MM-DD') PAY_TIME,
       P.TYPE,
       P.POOL_ID ,
       P.RE_ID,
       ROWNUM ROWNO
  FROM FI_DEPOSIT_POOL P ,
       T_SYS_SUPPLIERS SU ,
       FIL_PROJECT_HEAD H ,
       FIL_RENT_PLAN_HEAD_MAX_V MV,
       FIL_CUST_CLIENT CU
 WHERE P.OWNER_ID = SU.SUP_ID(+) 
   AND P.PROJECT_ID = H.ID(+)
   AND H.ID = MV.PROJECT_ID(+)
   AND H.CLIENT_ID = CU.ID(+)
   AND P.TYPE = 1
   AND P.STATUS IN(2,3)
   AND P.RE_ID IN(${sqlData})
   ORDER BY SU.SUP_ID 
</select>

<select id="getOffsetDetailList" parameterType="Map" resultType="Map">
SELECT * FROM (
	SELECT T.*,ROWNUM ROWNO FROM (
		SELECT SU.SUP_SHORTNAME,
		       SU.SUP_NAME,
		       SU.SCODE,
		       SU.SUP_ID,
		       HE.ID PAY_CODE,
		       P.PROJECT_ID,
		       CU.NAME CUST_NAME,
		       H.CLERK_NAME,
		       H.PRO_NAME,
		       H.PRO_CODE,
		       H.STATUS PROJECT_STATUS,
		       TO_CHAR(H.DELIVER_DATE,'YYYY-MM-DD') DELIVER_DATE,
		       P.BASE_MONEY,
		       A.FA_CAN_USE_MONEY CANUSE_MONEY,
		       (SELECT DIC.FLAG FROM T_SYS_DATA_DICTIONARY DIC WHERE DIC.CODE=HE.FI_STATUS AND DIC.TYPE= #{DIC_FI_STATUS}) FI_STATUS,
		       TO_CHAR(P.THAW_TIME,'YYYY-MM-DD') THAW_TIME,
		       TO_CHAR(P.PAY_TIME,'YYYY-MM-DD') PAY_TIME,
		       P.TYPE,
		       P.POOL_ID ,
		       A.FA_ACCOINT_MONEY,
		       A.FA_CAN_USE_MONEY-A.FA_ACCOINT_MONEY LAST_MONEY,
		       TO_CHAR(HE.FI_ACCOUNT_DATE,'YYYY-MM-DD') FI_ACCOUNT_DATE
		  FROM FI_DEPOSIT_POOL P,
		       FI_FUND_ACCOUNT A,
		       FI_FUND_HEAD HE,
		       FI_FUND_DETAIL D,
		       T_SYS_SUPPLIERS SU, 
		       FIL_PROJECT_HEAD H ,
		       FIL_CUST_CLIENT CU 
		 WHERE P.POOL_ID = A.FA_POOL_ID
		   AND A.FA_FUND_ID = HE.ID
		   AND A.FA_DETAIL_ID=D.ID 
		   AND P.OWNER_ID=SU.SUP_ID 
		   AND P.PROJECT_ID = H.ID
		   AND H.CLIENT_ID = CU.ID
		   AND P.TYPE = 1
		   <if test="PRO_NAME !=null and PRO_NAME !=''">AND H.PRO_NAME LIKE '%${PRO_NAME}%'</if>
		   <if test="SUP_SHORTNAME !=null and SUP_SHORTNAME !=''">AND SU.SUP_SHORTNAME LIKE '%${SUP_SHORTNAME}%'</if>
		   <if test="PRO_CODE !=null and PRO_CODE !=''">AND H.PRO_CODE = #{PRO_CODE}</if>
		   <if test="CUST_NAME !=null and CUST_NAME !=''">AND CU.NAME LIKE '%${CUST_NAME}%'</if>
		   <if test="FI_STATUS !=null and FI_STATUS !=''">AND HE.FI_STATUS = #{FI_STATUS}</if>
	     )T WHERE <![CDATA[ROWNUM <= #{PAGE_END}]]>
     )TT
  WHERE TT.ROWNO >= #{PAGE_BEGIN}  
</select>

<select id="getOffsetDetailCount" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM (
	SELECT SU.SUP_SHORTNAME,
	       SU.SUP_NAME,
	       SU.SCODE,
	       SU.SUP_ID,
	       HE.ID PAY_CODE,
	       P.PROJECT_ID,
	       CU.NAME CUST_NAME,
	       H.CLERK_NAME,
	       H.PRO_NAME,
	       H.PRO_CODE,
	       H.STATUS PROJECT_STATUS,
	       H.DELIVER_DATE ,
	       P.BASE_MONEY,
	       A.FA_CAN_USE_MONEY CANUSE_MONEY,
	       HE.FI_STATUS,
	       TO_CHAR(P.THAW_TIME,'YYYY-MM-DD') THAW_TIME,
	       TO_CHAR(P.PAY_TIME,'YYYY-MM-DD') PAY_TIME,
	       P.TYPE,
	       P.POOL_ID ,
	       A.FA_ACCOINT_MONEY,
	       A.FA_CAN_USE_MONEY-A.FA_ACCOINT_MONEY LAST_MONEY,
	       TO_CHAR(HE.FI_ACCOUNT_DATE,'YYYY-MM-DD') FI_ACCOUNT_DATE
	  FROM FI_DEPOSIT_POOL P,
	       FI_FUND_ACCOUNT A,
	       FI_FUND_HEAD HE,
	       FI_FUND_DETAIL D,
	       T_SYS_SUPPLIERS SU, 
	       FIL_PROJECT_HEAD H ,
	       FIL_CUST_CLIENT CU 
	 WHERE P.POOL_ID = A.FA_POOL_ID
	   AND A.FA_FUND_ID = HE.ID
	   AND A.FA_DETAIL_ID=D.ID 
	   AND P.OWNER_ID=SU.SUP_ID 
	   AND P.PROJECT_ID = H.ID
	   AND H.CLIENT_ID = CU.ID
	   AND P.TYPE = 1
	   <if test="PRO_NAME !=null and PRO_NAME !=''">AND H.PRO_NAME LIKE '%${PRO_NAME}%'</if>
	   <if test="SUP_SHORTNAME !=null and SUP_SHORTNAME !=''">AND SU.SUP_SHORTNAME LIKE '%${SUP_SHORTNAME}%'</if>
	   <if test="PRO_CODE !=null and PRO_CODE !=''">AND H.PRO_CODE = #{PRO_CODE}</if>
	   <if test="CUST_NAME !=null and CUST_NAME !=''">AND CU.NAME LIKE '%${CUST_NAME}%'</if>
	   <if test="FI_STATUS !=null and FI_STATUS !=''">AND HE.FI_STATUS = #{FI_STATUS}</if> 
   )T
</select>
</mapper>