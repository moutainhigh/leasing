<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="deductionBZJ">
	<select id="toMgDeductionBZJ" parameterType="Map" resultType="Map">
		SELECT * FROM (SELECT T2.*, ROWNUM ROWNU
          FROM (SELECT NVL(SUM(DECODE(T1.PROJECT_NAME, '租金', T1.ZJ_MONEY)),
                           0) ZJ_MONEY, --应收本金, 
                   NVL(SUM(DECODE(T1.PROJECT_NAME, '违约金', T1.ZJ_MONEY)),
                           0) WS_WYJ, --应收违约金,
                       SUM(T1.LAST_MONEY) LAST_MONEY,
                       SUM(T1.WHQI) WHQI,
                       T1.PAYLIST_CODE,
                       T1.PRO_ID,
                       T1.PRO_CODE,
                       T1.PRODUCT_NAME,
                       T1.COMPANY_NAME,
                       T1.CLIENT_ID,
                       T1.CUST_NAME,
                       T1.BZJ_MONEY,
                       T1.DUE_STATUS,
                       T1.OVERDUE_STATUS
                  FROM (SELECT *
                          FROM (SELECT TO_CHAR(T.ZJ_MONEY) ZJ_MONEY,
                                       '租金' PROJECT_NAME,
                                       TO_CHAR(T.LAST_MONEY) LAST_MONEY,
                                       TO_CHAR(T.WHQI) WHQI,
                                       TO_CHAR(T.PAYLIST_CODE) PAYLIST_CODE,
                                       TO_CHAR(FPH.ID) PRO_ID, --项目ID
                                       TO_CHAR(FPH.PRO_CODE) PRO_CODE, --项目编号
                                       TO_CHAR(FPH.PRODUCT_NAME) PRODUCT_NAME, --租赁物
                                       TO_CHAR(FPH.COMPANY_NAME) COMPANY_NAME, --厂商 
                                       TO_CHAR(FCC.ID) CLIENT_ID, --客户ID 
                                       TO_CHAR(FCC.NAME) CUST_NAME, --客户名称
                                       TO_CHAR(PO.CANUSE_MONEY) BZJ_MONEY, --保证金
                                       '' DUE_STATUS,
                                       '' OVERDUE_STATUS   
                                  FROM (SELECT (SUM(FRB.BEGINNING_MONEY) -
                                               SUM(FRB.BEGINNING_PAID)) ZJ_MONEY, --未收租金
                                               FRB.PAYLIST_CODE,
                                               FRB.PROJECT_ID,
                                               (SELECT NVL(ROUND(SUM(B.BEGINNING_MONEY),
                                                                 2),
                                                           0)
                                                  FROM FI_R_BEGINNING B
                                                 WHERE B.PAYLIST_CODE =
                                                       FRB.PAYLIST_CODE
                                                   AND B.BEGINNING_STATUS = 0
                                                   AND B.ITEM_FLAG = 2
                                                   AND B.BEGINNING_NUM =
                                                       (SELECT MAX(BE.BEGINNING_NUM)
                                                          FROM FI_R_BEGINNING BE
                                                         WHERE BE.PAYLIST_CODE =
                                                               B.PAYLIST_CODE)) LAST_MONEY, --最后一期租金
                                               (SELECT COUNT(T.BEGINNING_NUM)
                                                  FROM (SELECT DISTINCT B.BEGINNING_NUM BEGINNING_NUM,
                                                                        B.PAYLIST_CODE
                                                          FROM FI_R_BEGINNING B
                                                         WHERE (B.BEGINNING_PAID = 0 OR
                                                               B.BEGINNING_PAID IS NULL)
                                                           AND B.BEGINNING_STATUS = 0
                                                           AND B.ITEM_FLAG = 2
                                                         ORDER BY B.BEGINNING_NUM) T
                                                 WHERE T.PAYLIST_CODE =
                                                       FRB.PAYLIST_CODE) WHQI -- 未还期次
                                          FROM FI_R_BEGINNING FRB
                                         WHERE FRB.ITEM_FLAG = 2
                                           AND FRB.BEGINNING_STATUS = 0
                                         GROUP BY FRB.PAYLIST_CODE,
                                                  FRB.PROJECT_ID
                                         ORDER BY FRB.PAYLIST_CODE DESC) T
                                  LEFT JOIN FI_DEPOSIT_POOL PO ON PO.PROJECT_ID =
                                                                      T.PROJECT_ID
                                  LEFT JOIN FIL_PROJECT_HEAD FPH ON FPH.ID =
                                                                    T.PROJECT_ID
                                  LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID =
                                                                   FPH.CLIENT_ID
                                 WHERE FPH.STATUS = 20
                                    AND PO.CANUSE_MONEY > 0
                                    AND PO.TYPE=4
                                    AND T.ZJ_MONEY > 0
                                    <if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	                        		<if test="PRO_CODE!=null and PRO_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	                        		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
	                         		<if test="PRODUCT_NAME!=null and PRODUCT_NAME!=''">AND FPH.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAME}||'%'</if>
                                 ORDER BY FPH.PRO_CODE DESC) TZ
                        UNION ALL
                        SELECT *
                          FROM (SELECT TO_CHAR(ROUND((OV.PENALTY_RECE -
                                                     OV.PENALTY_PAID),
                                                     2)) WS_YQ,
                                       '违约金' PROJECT_NAME,
                                       TO_CHAR(NVL(NULL, 0)) LAST_MONEY,
                                       TO_CHAR(COUNT(OV.PERIOD)) WHQI,
                                       TO_CHAR(OV.PAY_CODE) PAYLIST_CODE,
                                       TO_CHAR(FPH.ID) PRO_ID,
                                       TO_CHAR(FPH.PRO_CODE) PRO_CODE,
                                       TO_CHAR(FPH.PRODUCT_NAME) PRODUCT_NAME, --租赁物
                                       TO_CHAR(FPH.COMPANY_NAME) COMPANY_NAME, --厂商 
                                       TO_CHAR(FCC.ID) CLIENT_ID,
                                       TO_CHAR(FCC.NAME) CLIENT_NAME,
                                       TO_CHAR(PO.CANUSE_MONEY) BZJ_MONEY,
                                       TO_CHAR(OV.DUE_STATUS)DUE_STATUS,
                                       TO_CHAR(OV.OVERDUE_STATUS)OVERDUE_STATUS
                                  FROM FI_OVERDUE OV
                                   LEFT JOIN FI_DEPOSIT_POOL PO ON PO.PROJECT_ID =
                                                                      OV.PROJECT_ID
                                  LEFT JOIN FIL_PROJECT_HEAD FPH ON FPH.ID =
                                                                    PO.PROJECT_ID
                                  LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID =
                                                                   FPH.CLIENT_ID
                                 WHERE OV.CREATE_DATE = TRUNC(SYSDATE)
                                   AND OV.DUE_STATUS = 1
                                   AND FPH.STATUS = 20
                                   AND PO.CANUSE_MONEY > 0
                                    AND PO.TYPE=4
                                    <if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	                        		<if test="PRO_CODE!=null and PRO_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	                        		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
	                         		<if test="PRODUCT_NAME!=null and PRODUCT_NAME!=''">AND FPH.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAME}||'%'</if>
                                 GROUP BY ROUND((OV.PENALTY_RECE -
                                                OV.PENALTY_PAID),
                                                2),
                                          OV.PAY_CODE,
                                          NULL,
                                          OV.PERIOD,
                                          OV.DUE_STATUS,
                                          OV.OVERDUE_STATUS,
                                          FPH.ID,
                                          FPH.PRO_CODE,
                                          FPH.PRODUCT_NAME,
                                          FPH.COMPANY_NAME,
                                          FCC.ID,
                                          FCC.NAME,
                                          PO.CANUSE_MONEY
                                 ORDER BY OV.PAY_CODE DESC, OV.PERIOD DESC) TOVE) T1
                 GROUP BY T1.PRO_ID,
                          T1.PRO_CODE,
                          T1.PAYLIST_CODE,
                          T1.CLIENT_ID,
                          T1.CUST_NAME,
                          T1.PRODUCT_NAME,
                          T1.COMPANY_NAME,
						  T1.DUE_STATUS,
                          T1.OVERDUE_STATUS,
                          T1.BZJ_MONEY) T2
         WHERE (NVL(T2.ZJ_MONEY, 0) > 0 OR NVL(T2.WS_WYJ, 0) > 0)
           AND (T2.ZJ_MONEY + T2.WS_WYJ) &lt; (T2.LAST_MONEY + T2.BZJ_MONEY)) T3
 WHERE T3.ROWNU >= #{PAGE_BEGIN}
   AND T3.ROWNU &lt;= #{PAGE_END}
	</select>
	
	<select id="toMgDeductionBZJNu" parameterType="Map" resultType="int">
	SELECT COUNT(1) FROM(SELECT T2.*, ROWNUM ROWNU
          FROM (SELECT NVL(SUM(DECODE(T1.PROJECT_NAME, '租金', T1.ZJ_MONEY)),
                           0) ZJ_MONEY, --应收本金, 
                       NVL(SUM(DECODE(T1.PROJECT_NAME, '违约金', T1.ZJ_MONEY)),
                           0) WS_WYJ, --应收违约金,
                       SUM(T1.LAST_MONEY) LAST_MONEY,
                       SUM(T1.WHQI) WHQI,
                       T1.PAYLIST_CODE,
                       T1.PRO_ID,
                       T1.PRO_CODE,
                       T1.PRODUCT_NAME,
                       T1.COMPANY_NAME,
                       T1.CLIENT_ID,
                       T1.CUST_NAME,
                       T1.BZJ_MONEY
                  FROM (SELECT *
                          FROM (SELECT TO_CHAR(T.ZJ_MONEY) ZJ_MONEY,
                                       '租金' PROJECT_NAME,
                                       TO_CHAR(T.LAST_MONEY) LAST_MONEY,
                                       TO_CHAR(T.WHQI) WHQI,
                                       TO_CHAR(T.PAYLIST_CODE) PAYLIST_CODE,
                                       TO_CHAR(FPH.ID) PRO_ID, --项目ID
                                       TO_CHAR(FPH.PRO_CODE) PRO_CODE, --项目编号
                                       TO_CHAR(FPH.PRODUCT_NAME) PRODUCT_NAME, --租赁物
                                       TO_CHAR(FPH.COMPANY_NAME) COMPANY_NAME, --厂商 
                                       TO_CHAR(FCC.ID) CLIENT_ID, --客户ID 
                                       TO_CHAR(FCC.NAME) CUST_NAME, --客户名称
                                       TO_CHAR(PO.CANUSE_MONEY) BZJ_MONEY, --保证金
                                       '' DUE_STATUS,
                                       '' OVERDUE_STATUS    
                                  FROM (SELECT (SUM(FRB.BEGINNING_MONEY) -
                                               SUM(FRB.BEGINNING_PAID)) ZJ_MONEY, --未收租金
                                               FRB.PAYLIST_CODE,
                                               FRB.PROJECT_ID,
                                               (SELECT NVL(ROUND(SUM(B.BEGINNING_MONEY),
                                                                 2),
                                                           0)
                                                  FROM FI_R_BEGINNING B
                                                 WHERE B.PAYLIST_CODE =
                                                       FRB.PAYLIST_CODE
                                                   AND B.BEGINNING_STATUS = 0
                                                   AND B.ITEM_FLAG = 2
                                                   AND B.BEGINNING_NUM =
                                                       (SELECT MAX(BE.BEGINNING_NUM)
                                                          FROM FI_R_BEGINNING BE
                                                         WHERE BE.PAYLIST_CODE =
                                                               B.PAYLIST_CODE)) LAST_MONEY, --最后一期租金
                                               (SELECT COUNT(T.BEGINNING_NUM)
                                                  FROM (SELECT DISTINCT B.BEGINNING_NUM BEGINNING_NUM,
                                                                        B.PAYLIST_CODE
                                                          FROM FI_R_BEGINNING B
                                                         WHERE (B.BEGINNING_PAID = 0 OR
                                                               B.BEGINNING_PAID IS NULL)
                                                           AND B.BEGINNING_STATUS = 0
                                                           AND B.ITEM_FLAG = 2
                                                         ORDER BY B.BEGINNING_NUM) T
                                                 WHERE T.PAYLIST_CODE =
                                                       FRB.PAYLIST_CODE) WHQI -- 未还期次
                                          FROM FI_R_BEGINNING FRB
                                         WHERE FRB.ITEM_FLAG = 2
                                           AND FRB.BEGINNING_STATUS = 0
                                         GROUP BY FRB.PAYLIST_CODE,
                                                  FRB.PROJECT_ID
                                         ORDER BY FRB.PAYLIST_CODE DESC) T
                                  LEFT JOIN FI_DEPOSIT_POOL PO ON PO.PROJECT_ID =
                                                                      T.PROJECT_ID
                                  LEFT JOIN FIL_PROJECT_HEAD FPH ON FPH.ID =
                                                                    T.PROJECT_ID
                                  LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID =
                                                                   FPH.CLIENT_ID
                                 WHERE FPH.STATUS = 20
                                    AND PO.CANUSE_MONEY > 0
                                    AND T.ZJ_MONEY > 0
                                    <if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	                        		<if test="PRO_CODE!=null and PRO_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	                        		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
	                         		<if test="PRODUCT_NAME!=null and PRODUCT_NAME!=''">AND FPH.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAME}||'%'</if>
                                 ORDER BY FPH.PRO_CODE DESC) TZ
                        UNION ALL
                        SELECT *
                          FROM (SELECT TO_CHAR(ROUND((OV.PENALTY_RECE -
                                                     OV.PENALTY_PAID),
                                                     2)) WS_YQ,
                                       '违约金' PROJECT_NAME,
                                       TO_CHAR(NVL(NULL, 0)) LAST_MONEY,
                                       TO_CHAR(COUNT(OV.PERIOD)) WHQI,
                                       TO_CHAR(OV.PAY_CODE) PAYLIST_CODE,
                                       TO_CHAR(FPH.ID) PRO_ID,
                                       TO_CHAR(FPH.PRO_CODE) PRO_CODE,
                                       TO_CHAR(FPH.PRODUCT_NAME) PRODUCT_NAME, --租赁物
                                       TO_CHAR(FPH.COMPANY_NAME) COMPANY_NAME, --厂商 
                                       TO_CHAR(FCC.ID) CLIENT_ID,
                                       TO_CHAR(FCC.NAME) CLIENT_NAME,
                                       TO_CHAR(PO.CANUSE_MONEY) BZJ_MONEY,
                                       TO_CHAR(OV.DUE_STATUS)DUE_STATUS,
                                       TO_CHAR(OV.OVERDUE_STATUS)OVERDUE_STATUS
                                  FROM FI_OVERDUE OV
                                   LEFT JOIN FI_DEPOSIT_POOL PO ON PO.PROJECT_ID =
                                                                      OV.PROJECT_ID
                                  LEFT JOIN FIL_PROJECT_HEAD FPH ON FPH.ID =
                                                                    PO.PROJECT_ID
                                  LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID =
                                                                   FPH.CLIENT_ID
                                 WHERE OV.CREATE_DATE = TRUNC(SYSDATE)
                                   AND OV.DUE_STATUS = 1
                                   AND FPH.STATUS = 20
                                   AND PO.CANUSE_MONEY > 0
                                   AND ROUND((OV.PENALTY_RECE - OV.PENALTY_PAID), 2) > 0
                                    <if test="CLIENT_NAME!=null and CLIENT_NAME!=''">AND FCC.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	                        		<if test="PRO_CODE!=null and PRO_CODE!=''">AND FPH.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	                        		<if test="COMPANY_NAME!=null and COMPANY_NAME!=''">AND FPH.COMPANY_NAME LIKE '%'||#{COMPANY_NAME}||'%'</if>
	                         		<if test="PRODUCT_NAME!=null and PRODUCT_NAME!=''">AND FPH.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAME}||'%'</if>
                                 GROUP BY ROUND((OV.PENALTY_RECE -
                                                OV.PENALTY_PAID),
                                                2),
                                          OV.PAY_CODE,
                                          NULL,
                                          OV.PERIOD,
                                          FPH.ID,
                                          OV.DUE_STATUS,
                                          OV.OVERDUE_STATUS,
                                          FPH.PRO_CODE,
                                          FPH.PRODUCT_NAME,
                                          FPH.COMPANY_NAME,
                                          FCC.ID,
                                          FCC.NAME,
                                          PO.CANUSE_MONEY
                                 ORDER BY OV.PAY_CODE DESC, OV.PERIOD DESC) TOVE) T1
                 GROUP BY T1.PRO_ID,
                          T1.PRO_CODE,
                          T1.PAYLIST_CODE,
                          T1.CLIENT_ID,
                          T1.CUST_NAME,
                          T1.PRODUCT_NAME,
                          T1.COMPANY_NAME,
						  T1.DUE_STATUS,
                          T1.OVERDUE_STATUS,
                          T1.BZJ_MONEY) T2
         WHERE (NVL(T2.ZJ_MONEY, 0) > 0 OR NVL(T2.WS_WYJ, 0) > 0)
           AND (T2.ZJ_MONEY + T2.WS_WYJ) &lt; (T2.LAST_MONEY + T2.BZJ_MONEY))T3
	</select>
	
	<select id="getRentDetail" parameterType="Map" resultType="Map">
		SELECT B.BEGINNING_ID,
		   TO_CHAR(B.BEGINNING_RECEIVE_DATA,'yyyy-MM-dd') BEGINNING_RECEIVE_DATA,
	       B.BEGINNING_NUM,
	       B.BEGINNING_NAME,
	       B.BEGINNING_MONEY,
	       B.PAYLIST_CODE,
	       B.ITEM_FLAG,
	       B.PROJECT_ID,
	       H.INVOICE_TARGET_TYPE,
           H.INVOICE_TARGET_ID
	    FROM FI_R_BEGINNING B, FIL_PROJECT_HEAD H
	   WHERE B.PROJECT_ID = H.ID
		   AND B.BEGINNING_FLAG = 0
		   AND B.BEGINNING_STATUS = 0
		   AND B.BEGINNING_NAME IN (#{BENJIN}, #{LIXI})
		   AND (NVL(B.BEGINNING_MONEY, 0) - NVL(B.BEGINNING_PAID,0)) > 0
		   AND H.ID = #{PRO_ID}
	</select>
	
	<select id="getOverDue" parameterType="Map" resultType="Map">
		SELECT ROUND(MAX(OV.PENALTY_RECE), 2) - ROUND(MAX(OV.PENALTY_PAID), 2) WS_YQ,
			TO_CHAR(OV.RENT_DATE,'yyyy-MM-dd') RENT_DATE,
	       OV.PAY_CODE,
	       OV.PERIOD
	  FROM FI_OVERDUE OV
	 WHERE trunc(OV.CREATE_DATE) = trunc(SYSDATE)
	   AND OV.DUE_STATUS = 1
	   AND OV.PAY_CODE = #{PAYLIST_CODE}
	 GROUP BY OV.PERIOD, OV.PAY_CODE,TO_CHAR(OV.RENT_DATE,'yyyy-MM-dd')
	 ORDER BY OV.PAY_CODE DESC, OV.PERIOD DESC
	</select>
	
	<insert id="doInsertFundHead" parameterType="Map">
		INSERT INTO FI_FUND_HEAD(ID
		<if test="FI_PAY_TYPE != null and FI_PAY_TYPE != ''">,FI_PAY_TYPE</if>
		<if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">,FI_PAY_MONEY</if>
		<if test="FI_PROJECT_NUM != null and FI_PROJECT_NUM != ''">,FI_PROJECT_NUM</if>
		<if test="FI_PAY_BANK != null and FI_PAY_BANK != ''">,FI_PAY_BANK</if>
		<if test="FI_ACCOUNT_DATE != null and FI_ACCOUNT_DATE != ''">,FI_ACCOUNT_DATE</if>
		<if test="FI_REALITY_MONEY != null and FI_REALITY_MONEY != ''">,FI_REALITY_MONEY</if>
		<if test="FI_REALITY_BANK != null and FI_REALITY_BANK != ''">,FI_REALITY_BANK</if>
		,FI_FUND_CODE
		,FI_APP_NAME
		,FI_APP_DATE
		<if test="FI_PAYEE != null and FI_PAYEE != ''">,FI_PAYEE</if>
		<if test="FI_PAYEE_ACCOUNT != null and FI_PAYEE_ACCOUNT != ''">,FI_PAYEE_ACCOUNT</if>
		<if test="FI_TO_THE_PAYEE != null and FI_TO_THE_PAYEE != ''">,FI_TO_THE_PAYEE</if>
		<if test="FI_PAY_DATE != null and FI_PAY_DATE != ''">,FI_PAY_DATE</if>
		<if test="FI_FLAG != null and FI_FLAG != ''">,FI_FLAG</if>
		<if test="FI_TAGE != null and FI_TAGE != ''">,FI_TAGE</if>
		<if test="FI_FILE_NAME != null and FI_FILE_NAME != ''">,FI_FILE_NAME</if>
		<if test="FI_FILE_URL != null and FI_FILE_URL != ''">,FI_FILE_URL</if>
		<if test="FI_FILE_DATE != null and FI_FILE_DATE != ''">,FI_FILE_DATE</if>
		,FI_STATUS
		<if test="FI_REMARK != null and FI_REMARK != ''">,FI_REMARK</if>
		,FI_APP_CODE
		<if test="FI_REALITY_ACCOUNT != null and FI_REALITY_ACCOUNT != ''">,FI_REALITY_ACCOUNT</if>
		<if test="FI_SUPERCLASS_ID != null and FI_SUPERCLASS_ID != ''">,FI_SUPERCLASS_ID</if>
		<if test="FI_ORG_ID != null and FI_ORG_ID != ''">,FI_ORG_ID</if>
		<if test="SUP_ID != null and SUP_ID != ''">,SUP_ID</if>
		<if test="SUPPLIER_NAME != null and SUPPLIER_NAME != ''">,SUPPLIER_NAME</if>)VALUES(
		#{HEAD_ID}
		<if test="FI_PAY_TYPE != null and FI_PAY_TYPE != ''">,#{FI_PAY_TYPE}</if>
		<if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">,#{FI_PAY_MONEY}</if>
		<if test="FI_PROJECT_NUM != null and FI_PROJECT_NUM != ''">,#{FI_PROJECT_NUM}</if>
		<if test="FI_PAY_BANK != null and FI_PAY_BANK != ''">,#{FI_PAY_BANK}</if>
		<if test="FI_ACCOUNT_DATE != null and FI_ACCOUNT_DATE != ''">,TO_DATE(#{FI_ACCOUNT_DATE},'yyyy-MM-dd')</if>
		<if test="FI_REALITY_MONEY != null and FI_REALITY_MONEY != ''">,#{FI_REALITY_MONEY}</if>
		<if test="FI_REALITY_BANK != null and FI_REALITY_BANK != ''">,#{FI_REALITY_BANK}</if>
		,'1'
		,#{USERNAME}
		,SYSDATE
		<if test="FI_PAYEE != null and FI_PAYEE != ''">,#{FI_PAYEE}</if>
		<if test="FI_PAYEE_ACCOUNT != null and FI_PAYEE_ACCOUNT != ''">,#{FI_PAYEE_ACCOUNT}</if>
		<if test="FI_TO_THE_PAYEE != null and FI_TO_THE_PAYEE != ''">,#{FI_TO_THE_PAYEE}</if>
		<if test="FI_PAY_DATE != null and FI_PAY_DATE != ''">,TO_DATE(#{FI_PAY_DATE},'yyyy-MM-dd')</if>
		<if test="FI_FLAG != null and FI_FLAG != ''">,#{FI_FLAG}</if>
		<if test="FI_TAGE != null and FI_TAGE != ''">,#{FI_TAGE}</if>
		<if test="FI_FILE_NAME != null and FI_FILE_NAME != ''">,#{FI_FILE_NAME}</if>
		<if test="FI_FILE_URL != null and FI_FILE_URL != ''">,#{FI_FILE_URL}</if>
		<if test="FI_FILE_DATE != null and FI_FILE_DATE != ''">,TO_DATE(#{FI_FILE_DATE},'yyyy-MM-dd')</if>
		,#{FI_STATUS}
		<if test="FI_REMARK != null and FI_REMARK != ''">,#{FI_REMARK}</if>
		,#{USERCODE}
		<if test="FI_REALITY_ACCOUNT != null and FI_REALITY_ACCOUNT != ''">,#{FI_REALITY_ACCOUNT}</if>
		<if test="FI_SUPERCLASS_ID != null and FI_SUPERCLASS_ID != ''">,#{FI_SUPERCLASS_ID}</if>
		<if test="FI_ORG_ID != null and FI_ORG_ID != ''">,#{FI_ORG_ID}</if>
		<if test="SUP_ID != null and SUP_ID != ''">,#{SUP_ID}</if>
		<if test="SUPPLIER_NAME != null and SUPPLIER_NAME != ''">,#{SUPPLIER_NAME}</if>)
	</insert>

	<insert id="doInsertAppDetail" parameterType="Map">
	INSERT INTO FI_FUND_DETAIL(ID
	<if test="D_FUND_ID != null and D_FUND_ID != ''">,D_FUND_ID</if>
	<if test="D_PAYEE != null and D_PAYEE != ''">,D_PAYEE</if>
	<if test="D_PAYEE_ACCOUNT != null and D_PAYEE_ACCOUNT != ''">,D_PAYEE_ACCOUNT</if>
	<if test="D_TO_THE_PAYEE != null and D_TO_THE_PAYEE != ''">,D_TO_THE_PAYEE</if>
	<if test="D_CLIENT_CODE != null and D_CLIENT_CODE != ''">,D_CLIENT_CODE</if>
	<if test="D_CLIENT_NAME != null and D_CLIENT_NAME != ''">,D_CLIENT_NAME</if>
	<if test="D_PAY_PROJECT != null and D_PAY_PROJECT != ''">,D_PAY_PROJECT</if>
	<if test="D_PAY_MONEY != null and D_PAY_MONEY != ''">,D_PAY_MONEY</if>
	<if test="D_RECEIVE_DATE != null and D_RECEIVE_DATE != ''">,D_RECEIVE_DATE</if>
	<if test="D_REALITY_DATE != null and D_REALITY_DATE != ''">,D_REALITY_DATE</if>
	<if test="D_PAY_CODE != null and D_PAY_CODE != ''">,D_PAY_CODE</if>
	<if test="D_PROJECT_CODE != null and D_PROJECT_CODE != ''">,D_PROJECT_CODE</if>
	<if test="D_BEGING_ID != null and D_BEGING_ID != ''">,D_BEGING_ID</if>
	<if test="PERIOD != null and PERIOD != ''">,PERIOD</if>
	<if test="D_FLAG != null and D_FLAG != ''">,D_FLAG</if>
	<if test="D_STATUS != null and D_STATUS != ''">,D_STATUS</if>
	<if test="D_RECEIVE_MONEY != null and D_RECEIVE_MONEY != ''">,D_RECEIVE_MONEY</if>
	<if test="INVOICE_TARGET_TYPE != null and INVOICE_TARGET_TYPE != ''">,INVOICE_TARGET_TYPE</if>
	<if test="INVOICE_TARGET_ID != null and INVOICE_TARGET_ID != ''">,INVOICE_TARGET_ID</if>
	<if test="D_RECEIVE_MONEY != null and D_RECEIVE_MONEY != ''">,D_RECEIVE_MONEY</if>)VALUES( SEQ_FUND_DETAIL.NEXTVAL
	<if test="D_FUND_ID != null and D_FUND_ID != ''">,#{D_FUND_ID}</if>
	<if test="D_PAYEE != null and D_PAYEE != ''">,#{D_PAYEE}</if>
	<if test="D_PAYEE_ACCOUNT != null and D_PAYEE_ACCOUNT != ''">,#{D_PAYEE_ACCOUNT}</if>
	<if test="D_TO_THE_PAYEE != null and D_TO_THE_PAYEE != ''">,#{D_TO_THE_PAYEE}</if>
	<if test="D_CLIENT_CODE != null and D_CLIENT_CODE != ''">,#{D_CLIENT_CODE}</if>
	<if test="D_CLIENT_NAME != null and D_CLIENT_NAME != ''">,#{D_CLIENT_NAME}</if>
	<if test="D_PAY_PROJECT != null and D_PAY_PROJECT != ''">,#{D_PAY_PROJECT}</if>
	<if test="D_PAY_MONEY != null and D_PAY_MONEY != ''">,#{D_PAY_MONEY}</if>
	<if test="D_RECEIVE_DATE != null and D_RECEIVE_DATE != ''">,TO_DATE(#{D_RECEIVE_DATE},'yyyy-MM-dd')</if>
	<if test="D_REALITY_DATE != null and D_REALITY_DATE != ''">,TO_DATE(#{D_REALITY_DATE},'yyyy-MM-dd')</if>
	<if test="D_PAY_CODE != null and D_PAY_CODE != ''">,#{D_PAY_CODE}</if>
	<if test="D_PROJECT_CODE != null and D_PROJECT_CODE != ''">,#{D_PROJECT_CODE}</if>
	<if test="D_BEGING_ID != null and D_BEGING_ID != ''">,#{D_BEGING_ID}</if>
	<if test="PERIOD != null and PERIOD != ''">,#{PERIOD}</if>	
	<if test="D_FLAG != null and D_FLAG != ''">,#{D_FLAG}</if>
	<if test="D_STATUS != null and D_STATUS != ''">,#{D_STATUS}</if>
	<if test="D_RECEIVE_MONEY != null and D_RECEIVE_MONEY != ''">,#{D_RECEIVE_MONEY}</if>
	<if test="INVOICE_TARGET_TYPE != null and INVOICE_TARGET_TYPE != ''">,#{INVOICE_TARGET_TYPE}</if>
	<if test="INVOICE_TARGET_ID != null and INVOICE_TARGET_ID != ''">,#{INVOICE_TARGET_ID}</if>
	<if test="D_RECEIVE_MONEY != null and D_RECEIVE_MONEY != ''">,#{D_RECEIVE_MONEY}</if>)
	</insert>
	
	<update id="doUpdateBegining" parameterType="Map">
	UPDATE FI_R_BEGINNING B SET B.BEGINNING_STATUS=#{BEGINNING_STATUS} WHERE B.BEGINNING_ID=#{BEGINNING_ID}
	</update>
	
	<select id="getJQDKDetail" parameterType="Map" resultType="Map">
		SELECT NVL(T1.BJ_MONEY, 0) BJ_MONEY, --本金
		       NVL(T1.LI_MONEY, 0) LI_MONEY, --利息
		       NVL(T1.WYJ_MONEY, 0) WYJ_MONEY, --违约金
		       NVL(NVL(T1.BJ_MONEY, 0) + NVL(T1.LI_MONEY, 0), 0) ZJ_MONEY, --未收租金
		       T1.WSQC, --未收期次
		       T1.D_FUND_ID, --申请单号
		       T1.D_PROJECT_CODE,
		       H.ID PRO_ID, --项目ID
		       H.PRO_CODE, --项目编号
		       FCC.ID CLIENT_ID,
		       FCC.NAME CUST_NAME,		       
	           CASE
		         WHEN DP.CANUSE_MONEY = T1.FA_CAN_USE_MONEY THEN
		          DP.CANUSE_MONEY
		         ELSE
		          T1.FA_CAN_USE_MONEY
		       END VALUE_STR, --保证金 
	           H.PRODUCT_NAME EQUIPMENINFOS, --租赁物
	           H.COMPANY_NAME COMPANY_NAMES --厂商
		  FROM (SELECT SUM(DECODE(DE.D_PAY_PROJECT, #{BENJIN}, NVL(DE.D_PAY_MONEY, 0))) BJ_MONEY,
		               SUM(DECODE(DE.D_PAY_PROJECT, #{LIXI}, NVL(DE.D_PAY_MONEY, 0))) LI_MONEY,
		               SUM(DECODE(DE.D_PAY_PROJECT, #{WEIYUEJIN}, NVL(DE.D_PAY_MONEY, 0))) WYJ_MONEY,
		               MAX(FA.FA_CAN_USE_MONEY) FA_CAN_USE_MONEY,
		               (SELECT COUNT(T.PERIOD) PERIOD
                      FROM (SELECT DISTINCT D.PERIOD, D.D_PAY_CODE
                              FROM FI_FUND_DETAIL D
                             WHERE D.D_PAY_PROJECT IN (#{LIXI}, #{BENJIN})
                             AND D.D_FUND_ID = #{FUND_ID}
                             ORDER BY D.PERIOD DESC) T
                     WHERE T.D_PAY_CODE = DE.D_PAY_CODE
                     GROUP BY T.D_PAY_CODE) WSQC,
		               DE.D_FUND_ID,
		               DE.D_PROJECT_CODE
		          FROM FI_FUND_DETAIL DE
		          LEFT JOIN FI_FUND_ACCOUNT FA ON FA.FA_DETAIL_ID = DE.ID
		         WHERE DE.D_FUND_ID = #{FUND_ID}
		         GROUP BY DE.D_FUND_ID, DE.D_PROJECT_CODE,DE.D_PAY_CODE) T1
		  LEFT JOIN FIL_PROJECT_HEAD H ON H.PRO_CODE = T1.D_PROJECT_CODE
      	  LEFT JOIN FI_DEPOSIT_POOL DP ON H.ID = DP.PROJECT_ID
		  LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID = H.CLIENT_ID
		 WHERE T1.D_FUND_ID = #{FUND_ID}
	</select>
	
	<select id="getJQDKDetailCount" parameterType="Map" resultType="int">
		SELECT COUNT(*) FROM (SELECT NVL(T1.BJ_MONEY, 0) BJ_MONEY, --本金
		       NVL(T1.LI_MONEY, 0) LI_MONEY, --利息
		       NVL(T1.WYJ_MONEY, 0) WYJ_MONEY, --违约金
		       NVL(NVL(T1.BJ_MONEY, 0) + NVL(T1.LI_MONEY, 0), 0) ZJ_MONEY, --未收租金
		       T1.WSQC, --未收期次
		       T1.D_FUND_ID, --申请单号
		       T1.D_PROJECT_CODE,
		       H.ID PRO_ID, --项目ID
		       H.PRO_CODE, --项目编号
		       FCC.ID CLIENT_ID,
		       FCC.NAME CUST_NAME,	       
	             CASE
		         WHEN DP.CANUSE_MONEY = T1.FA_CAN_USE_MONEY THEN
		          DP.CANUSE_MONEY
		         ELSE
		          T1.FA_CAN_USE_MONEY
		       END VALUE_STR, --保证金 
	           H.PRODUCT_NAME EQUIPMENINFOS, --租赁物
	           H.COMPANY_NAME COMPANY_NAMES --厂商
		  FROM (SELECT SUM(DECODE(DE.D_PAY_PROJECT, #{BENJIN}, NVL(DE.D_PAY_MONEY, 0))) BJ_MONEY,
		               SUM(DECODE(DE.D_PAY_PROJECT, #{LIXI}, NVL(DE.D_PAY_MONEY, 0))) LI_MONEY,
		               SUM(DECODE(DE.D_PAY_PROJECT, #{WEIYUEJIN}, NVL(DE.D_PAY_MONEY, 0))) WYJ_MONEY,
		               MAX(FA.FA_CAN_USE_MONEY) FA_CAN_USE_MONEY,
		               (SELECT COUNT(T.PERIOD) PERIOD
                      FROM (SELECT DISTINCT D.PERIOD, D.D_PAY_CODE
                              FROM FI_FUND_DETAIL D
                             WHERE D.D_PAY_PROJECT IN (#{LIXI}, #{BENJIN})
                             AND D.D_FUND_ID = #{FUND_ID}
                             ORDER BY D.PERIOD DESC) T
                     WHERE T.D_PAY_CODE = DE.D_PAY_CODE
                     GROUP BY T.D_PAY_CODE) WSQC,
		               DE.D_FUND_ID,
		               DE.D_PROJECT_CODE
		          FROM FI_FUND_DETAIL DE
		          LEFT JOIN FI_FUND_ACCOUNT FA ON FA.FA_DETAIL_ID = DE.ID
		         WHERE DE.D_FUND_ID = #{FUND_ID}	
		         GROUP BY DE.D_FUND_ID, DE.D_PROJECT_CODE,DE.D_PAY_CODE) T1
		  LEFT JOIN FIL_PROJECT_HEAD H ON H.PRO_CODE = T1.D_PROJECT_CODE
      	  LEFT JOIN FI_DEPOSIT_POOL DP ON H.ID = DP.PROJECT_ID
		  LEFT JOIN FIL_CUST_CLIENT FCC ON FCC.ID = H.CLIENT_ID
		 WHERE T1.D_FUND_ID = #{FUND_ID})T
	</select>
	
	<select id="queryAcountPollById"  parameterType="Map" resultType="Map">
		SELECT DISTINCT FA_POOL_ID POOLIDS FROM FI_FUND_ACCOUNT FA WHERE FA.FA_FUND_ID=#{FUND_ID} AND FA.FA_POOL_ID IS NOT NULL
	</select>	
	
	<select id="findPoolData" parameterType="Map" resultType="Map">
		SELECT DISTINCT P.POOL_ID, P.OWNER_ID, P.PROJECT_ID, P.BASE_MONEY, P.CANUSE_MONEY
		  FROM FI_DEPOSIT_POOL P
		  LEFT JOIN FIL_PROJECT_HEAD H ON P.PROJECT_ID = H.ID
		  LEFT JOIN FI_FUND_DETAIL DE ON DE.D_PROJECT_CODE = H.PRO_CODE
		 WHERE DE.D_FUND_ID = #{FUND_ID}
		   AND DE.D_PROJECT_CODE = #{D_PROJECT_CODE}
		   AND P.CANUSE_MONEY > 0
		   AND TYPE = 4
	</select>
	
	<select id="findCHBZJ" parameterType="Map" resultType="Map">
		SELECT DISTINCT P.POOL_ID,P.BASE_MONEY, P.CANUSE_MONEY,P.SOURCE_ID
		  FROM FI_FUND_DETAIL DE
		  LEFT JOIN FIL_PROJECT_HEAD H ON H.PRO_CODE = DE.D_PROJECT_CODE
		  LEFT JOIN FI_DEPOSIT_POOL P ON P.PROJECT_ID = H.ID
		 WHERE  TYPE=4 
		  AND DE.D_FUND_ID = #{FUND_ID}
	</select>
	
	<select id="findCHFund" parameterType="Map" resultType="Map">
		SELECT * FROM FI_DEPOSIT_POOL P, FIL_PROJECT_HEAD H
		 WHERE P.PROJECT_ID = H.ID(+)
		 AND H.PRO_CODE = #{PRO_CODE}
	</select>
	 
	 <select id="getFundBySuppId" parameterType="Map" resultType="Map">
	 	SELECT  MAX(ID) ID FROM FI_FUND_HEAD WHERE FI_SUPERCLASS_ID = #{FI_SUPERCLASS_ID}
	 </select>
	 
	 <select id="getDetailDataByFund" parameterType="Map" resultType="Map">
	 	SELECT * FROM FI_FUND_DETAIL WHERE D_FUND_ID = #{FUND_ID}
	 </select>
	 
	 <select id="getPoolByFundId" parameterType="Map" resultType="Map">
	 	SELECT DISTINCT A.FA_POOL_ID FROM FI_FUND_ACCOUNT A WHERE A.FA_POOL_ID is not null and  A.FA_FUND_ID = #{FUND_ID}
	 </select>
	 
	<update id="updateBZJPool" parameterType="Map">
		UPDATE FI_DEPOSIT_POOL  SET CANUSE_MONEY=#{CANUSE_MONEY} WHERE POOL_ID = #{POOL_ID}
	</update>
	
	<update id="updateBZJPoolByPoolid" parameterType="Map">
		UPDATE FI_DEPOSIT_POOL  SET CANUSE_MONEY=BASE_MONEY WHERE POOL_ID = #{POOL_ID}
	</update>
	
	 <select id="checkedLockTypeRent" parameterType="Map" resultType="Map">
	 	SELECT MAX(JO.LOCKTYPE) LOCKTYPE
		  FROM FI_R_BEGINNING_JOIN JO
		 WHERE JO.PROJ_ID =#{PROJECT_ID}
		   AND JO.PAYLIST_CODE = #{PAYLIST_CODE}
	 </select>
	 
	 <select id="getDetailData" parameterType="Map" resultType="Map">
	 	select nvl(frb.beginning_money, 0) beginning_money,
		       round(nvl(sum(fa.fa_accoint_money), 0)+nvl(frb.beginning_paid, 0),2) real_money,
		       fa.fa_beging_id,frb.PAYLIST_CODE,frb.BEGINNING_NUM,frb.BEGINNING_ID D_BEGING_ID
		  from fi_fund_account fa, fi_r_beginning frb
		 where fa.fa_beging_id=frb.beginning_id
		   and fa.fa_fund_id=#{FUND_ID}
		    group by frb.beginning_money,
             fa.fa_beging_id,
             frb.PAYLIST_CODE,
             frb.BEGINNING_NUM,
             frb.BEGINNING_ID,
             frb.beginning_paid
	 </select>
	 
	 <select id="getBEGINNING_ID" parameterType="Map" resultType="Map">
	 	SELECT * FROM FI_R_BEGINNING B WHERE B.PAYLIST_CODE=#{PAY_CODE} AND B.BEGINNING_NUM=#{PERIOD}
	 </select>
	 
	 
	 <select id="getDetailDataByFundId" parameterType="Map" resultType="Map">
	 	SELECT DISTINCT PERIOD ,D_PAY_CODE  FROM FI_FUND_DETAIL WHERE D_FUND_ID = #{FUND_ID}
	 </select>
	
	<select id="doChangeBeAndYQ" statementType="CALLABLE">  
	    <![CDATA[  
	        {call PRC_BE_QJL_ONE(#{pay_code,mode=IN,jdbcType=VARCHAR},#{pay_number,mode=IN,jdbcType=FLOAT})}  
	    ]]>  
	</select>
	
	 <select id="getOverDuePayCodebyFundId" parameterType="Map" resultType="Map">	 	
		SELECT MAX(OVE.CREATE_DATE), OVE.PAY_CODE FROM FI_OVERDUE OVE WHERE OVE.PAY_CODE = #{D_PAY_CODE} AND OVE.PERIOD = #{PERIOD} GROUP BY  OVE.PAY_CODE 
	 </select>
	 
	 <select id="doChangeOverDue" statementType="CALLABLE">  
	    <![CDATA[  
	        {call PRC_DUN_ONE(#{pay_code,mode=IN,jdbcType=VARCHAR})}  
	    ]]>  
	</select>
	
	 <update id="updateRENT_PAIDDueToday" parameterType="Map">
	 	update  fi_overdue set RENT_RECE=round(nvl(#{BEGINNING_PAIDNEW},0),2),RENT_PAID=round(nvl(#{BEGINNING_PAIDNEW},0),2) 
	 	where pay_code=#{PAYLIST_CODE} and PERIOD=#{BEGINNING_NUM} and create_date=trunc(sysdate) 
	 </update>
	 
	 <delete id="deleteDunDateAll" parameterType="java.util.Map">
		delete fi_overdue where pay_code=#{PAYLIST_CODE} and PERIOD=#{BEGINNING_NUM} and trunc(CREATE_DATE) &lt; trunc(SYSDATE)
	</delete>
	
	<select id="doChangeOverDueCopy" statementType="CALLABLE">  
	    <![CDATA[  
	        {call PRC_DUN_COPY()}  
	    ]]>  
	</select>
</mapper>