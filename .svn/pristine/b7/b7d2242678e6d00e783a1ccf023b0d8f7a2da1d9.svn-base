<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="overdueUrge">
	<select id="getUrgeLettrtData" parameterType="map" resultType="map">
		SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
			SELECT T.PAY_CODE,
				T.PAY_ID,
			       TSD.FLAG PAY_REASON,
			       T.CLIENT_NAME,
			       TO_CHAR(T.SEND_TIME, 'yyyy-MM-dd') SEND_TIME,
			       T.TASK_MAN,
			       T.OVERDUE_MONEY,
			       T.DEMAND_CODE,
			       ROUND(SUM(NVL(FO.RENT_RECE, 0) - NVL(FO.RENT_PAID, 0)), 2) RENT_RECE_ALL,
      			   ROUND(SUM(NVL(FO.PENALTY_RECE, 0) - NVL(FO.PENALTY_PAID, 0)), 2) PENALTY_RECE_ALL,
      			   T.CAR_TYPE,
      			   T.PLAQUE,
			       T.ID
			  FROM 
			  	(SELECT *
			           FROM RE_OVERDUE_COLL_LETTER RO
			          WHERE RO.ID IN (SELECT MAX(ROC.ID)
			                            FROM RE_OVERDUE_COLL_LETTER ROC
			                           GROUP BY ROC.PAY_CODE))  T
			  LEFT JOIN T_SYS_DATA_DICTIONARY TSD
			    ON TSD.CODE = T.REPAYMENT_TYPE AND TSD.TYPE = '拖欠还款原因' 
			     LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
			LEFT JOIN (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE >= TRUNC(SYSDATE)) FO ON FO.PAY_CODE = T.PAY_CODE
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
			GROUP BY T.PAY_CODE,
					T.PAY_ID,
			       TSD.FLAG ,
			       T.CLIENT_NAME,
			       T.SEND_TIME, 
			       T.TASK_MAN,
			       T.OVERDUE_MONEY,
			       T.CAR_TYPE,
      			   T.PLAQUE,
			       T.DEMAND_CODE,T.ID
			ORDER BY T.ID DESC
		) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>
	<select id="getUrgeLettrtDataConut" parameterType="map" resultType="int">
		 SELECT COUNT(0)
				   FROM (SELECT *
				           FROM RE_OVERDUE_COLL_LETTER RO
				          WHERE RO.ID IN (SELECT MAX(ROC.ID)
				                            FROM RE_OVERDUE_COLL_LETTER ROC
				                           GROUP BY ROC.PAY_CODE)) T
				    LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
	</select>
	<select id="getShowUrgeLettrtData" parameterType="map" resultType="map">
		    SELECT T.PAY_CODE,
           T.DEMAND_CODE,
           T.REPAYMENT_TYPE,
           T.CLIENT_NAME,
           TO_CHAR(T.SEND_TIME, 'yyyy-MM-DD') SEND_TIME,
           T.SEND_NAME,
           T.REMARK,
           T.OPERATE_NAME,
           T.ID
      FROM RE_OVERDUE_COLL_LETTER T
     WHERE T.ID = #{ID}
	</select>
	<update id="saveUrgeLetter" parameterType="map">
		 UPDATE RE_OVERDUE_COLL_LETTER SET 
		 	ID = #{ID}
		 	<if test=" DEMAND_CODE != null "> ,DEMAND_CODE = #{DEMAND_CODE}</if>
		 	<if test=" REPAYMENT_TYPE != null "> ,REPAYMENT_TYPE = #{REPAYMENT_TYPE}</if>
		 	<if test=" SEND_TIME != null "> ,SEND_TIME = TO_DATE(#{SEND_TIME},'YYYY-MM-DD')</if>
		 	<if test=" SEND_NAME != null "> ,SEND_NAME = #{SEND_NAME}</if>
		 	<if test=" OPERATE_NAME != null "> ,OPERATE_NAME = #{OPERATE_NAME}</if>
		 	<if test=" REMARK != null "> ,REMARK = #{REMARK}</if>
		 	WHERE ID = #{ID}
	</update>
	
	
	<select id="getUrgePhoneData" parameterType="map" resultType="map">
		SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
			  SELECT T.PAY_CODE,
			  T.PAY_ID,
		             TSD.FLAG PAY_REASON,
		             T.CLIENT_NAME,
		             T.TASK_MAN,
		             T.OVERDUE_MONEY,
		             T.REMARK,
		             T.CALL_TEL,
		              TO_CHAR(T.CALL_DATE, 'yyyy-MM-dd') CALL_DATE,
		              ROUND(SUM(NVL(FO.RENT_RECE, 0) - NVL(FO.RENT_PAID, 0)), 2) RENT_RECE_ALL,
      			   ROUND(SUM(NVL(FO.PENALTY_RECE, 0) - NVL(FO.PENALTY_PAID, 0)), 2) PENALTY_RECE_ALL,
      			   T.CAR_TYPE,
      			   T.PLAQUE,
		             T.ID
		        FROM  (SELECT *
			           FROM RE_OVERDUE_COLL_PHONE RO
			          WHERE RO.ID IN (SELECT MAX(ROC.ID)
			                            FROM RE_OVERDUE_COLL_PHONE ROC
			                           GROUP BY ROC.PAY_CODE)) T
			  LEFT JOIN T_SYS_DATA_DICTIONARY TSD
			    ON TSD.CODE = T.REPAYMENT_TYPE AND TSD.TYPE = '拖欠还款原因' 
			       LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
				LEFT JOIN (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE >= TRUNC(SYSDATE)) FO ON FO.PAY_CODE = T.PAY_CODE
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
			GROUP BY T.PAY_CODE,
			 		 T.PAY_ID,
		             TSD.FLAG ,
		             T.CLIENT_NAME,
		             T.TASK_MAN,
		             T.OVERDUE_MONEY,
		             T.REMARK,
		             T.CALL_TEL,
		             T.CAR_TYPE,
		             T.CALL_DATE,
      			   	T.PLAQUE,
		             T.ID
			 ORDER BY T.ID
		) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>
	<select id="getUrgePhoneDataConut" parameterType="map" resultType="int">
			 SELECT COUNT(0)
				   FROM (SELECT *
				           FROM RE_OVERDUE_COLL_PHONE RO
				          WHERE RO.ID IN (SELECT MAX(ROC.ID)
				                            FROM RE_OVERDUE_COLL_PHONE ROC
				                           GROUP BY ROC.PAY_CODE)) T
				    LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
	</select>
	<select id="getShowUrgePhoneData" parameterType="map" resultType="map">
		    SELECT T.PAY_CODE,
           T.REPAYMENT_TYPE,
           T.CLIENT_NAME,
            TO_CHAR(T.CALL_DATE, 'yyyy-MM-dd') CALL_DATE,
           T.REMARK,
           T.OPERATE_NAME,
           T.CALL_TEL,
           T.ID
      FROM RE_OVERDUE_COLL_PHONE T
     WHERE T.ID = #{ID}
	</select>
	<update id="addUrgePhone" parameterType="map">
		 UPDATE RE_OVERDUE_COLL_PHONE SET 
		 	ID = #{ID}
		 	<if test=" REPAYMENT_TYPE != null "> ,REPAYMENT_TYPE = #{REPAYMENT_TYPE}</if>
		 	<if test=" OPERATE_NAME != null "> ,OPERATE_NAME = #{OPERATE_NAME}</if>
		 	<if test=" REMARK != null "> ,REMARK = #{REMARK}</if>
		 	<if test=" CALL_TEL != null "> ,CALL_TEL = #{CALL_TEL}</if>
		 	<if test=" CALL_DATE != null "> ,CALL_DATE = TO_DATE(#{CALL_DATE},'YYYY-MM-DD')</if>
		 	WHERE ID = #{ID}
	</update>
	
	
	
	<select id="getUrgeLawyerData" parameterType="map" resultType="map">
		SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
			  SELECT T.PAY_CODE,
			  T.PAY_ID,
	            TSD.FLAG PAY_REASON,
	           T.CLIENT_NAME,
	           TO_CHAR(T.SUE_TIME, 'yyyy-MM-dd') SUE_TIME,
	           T.REMARK,
	           T.OPERATE_NAME,
	           T.PLAQUE,
	           T.CAR_PLACE,
	           T.CAR_TYPE,
	           T.COURT,
	           T.JUDGE,
	           TSD1.FLAG PHASE,
	            ROUND(SUM(NVL(FO.RENT_RECE, 0) - NVL(FO.RENT_PAID, 0)), 2) RENT_RECE_ALL,
      			ROUND(SUM(NVL(FO.PENALTY_RECE, 0) - NVL(FO.PENALTY_PAID, 0)), 2) PENALTY_RECE_ALL,
	           T.ID
		        FROM (SELECT *
			           FROM RE_OVERDUE_COLL_LAWYER RO
			          WHERE RO.ID IN (SELECT MAX(ROC.ID)
			                            FROM RE_OVERDUE_COLL_LAWYER ROC
			                           GROUP BY ROC.PAY_CODE)) T
			  LEFT JOIN T_SYS_DATA_DICTIONARY TSD
			    ON TSD.CODE = T.REPAYMENT_TYPE AND TSD.TYPE = '拖欠还款原因' 
			    LEFT JOIN T_SYS_DATA_DICTIONARY TSD1
			    ON TSD1.CODE = T.REPAYMENT_TYPE AND TSD1.TYPE = '诉讼阶段' 
			      LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
				LEFT JOIN (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE >= TRUNC(SYSDATE)) FO ON FO.PAY_CODE = T.PAY_CODE
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
			GROUP BY T.PAY_CODE,
			  T.PAY_ID,
	            TSD.FLAG ,
	           T.CLIENT_NAME,
	           T.SUE_TIME, 
	           T.REMARK,
	           T.OPERATE_NAME,
	           T.PLAQUE,
	           T.CAR_PLACE,
	           T.CAR_TYPE,
	           T.COURT,
	           T.JUDGE,
	           TSD1.FLAG,T.ID
			ORDER BY T.ID DESC
		) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>
	<select id="getUrgeLawyerDataConut" parameterType="map" resultType="int">
			    SELECT COUNT(0)
				   FROM (SELECT *
				           FROM RE_OVERDUE_COLL_LAWYER RO
				          WHERE RO.ID IN (SELECT MAX(ROC.ID)
				                            FROM RE_OVERDUE_COLL_LAWYER ROC
				                           GROUP BY ROC.PAY_CODE)) T
				    LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
	</select>
	<select id="getShowUrgeLawyerData" parameterType="map" resultType="map">
		 SELECT T.PAY_CODE,
           T.REPAYMENT_TYPE,
           T.CLIENT_NAME,
           TO_CHAR(T.SUE_TIME, 'yyyy-MM-dd') SUE_TIME,
           T.REMARK,
           T.OPERATE_NAME,
           T.PLAQUE,
           T.CAR_PLACE,
           T.CAR_TYPE,
           T.COURT,
           T.JUDGE,
           T.PHASE,
           T.ID
      FROM RE_OVERDUE_COLL_LAWYER T
     WHERE T.ID = #{ID}
	</select>
	<update id="addUrgeLawyer" parameterType="map">
		 UPDATE RE_OVERDUE_COLL_LAWYER SET 
		 	ID = #{ID}
		 	<if test=" REPAYMENT_TYPE != null "> ,REPAYMENT_TYPE = #{REPAYMENT_TYPE}</if>
		 	<if test=" OPERATE_NAME != null "> ,OPERATE_NAME = #{OPERATE_NAME}</if>
		 	<if test=" REMARK != null "> ,REMARK = #{REMARK}</if>
		 	<if test=" SUE_TIME != null "> ,SUE_TIME = TO_DATE(#{SUE_TIME},'YYYY-MM-DD')</if>
		 	<if test=" CAR_PLACE != null "> ,CAR_PLACE = #{CAR_PLACE}</if>
		 	<if test=" PLAQUE != null "> ,PLAQUE = #{PLAQUE}</if>
		 	<if test=" CAR_TYPE != null "> ,CAR_TYPE = #{CAR_TYPE}</if>
		 	<if test=" COURT != null "> ,COURT = #{COURT}</if>
		 	<if test=" JUDGE != null "> ,JUDGE = #{JUDGE}</if>
		 	<if test=" PHASE != null "> ,PHASE = #{PHASE}</if>
		 	WHERE ID = #{ID}
	</update>
	
	
	
	<select id="getUrgeForceData" parameterType="map" resultType="map">
		SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
			  SELECT T.PAY_CODE,
			  T.PAY_ID,
	           TSD.FLAG PAY_REASON,
	           T.CLIENT_NAME,
	           TO_CHAR(T.STOP_TIME, 'yyyy-MM-dd') STOP_TIME,
	           T.REMARK,
	           T.OPERATE_NAME,
	           T.PLAQUE,
	           T.CAR_PLACE,
	           T.CAR_TYPE,
	           T.CAR_SIGN_NAME,
	           T.CAR_STOP_PLACE,
	           TSD1.FLAG RECEIVE_STATUS,
	           ROUND(SUM(NVL(FO.RENT_RECE, 0) - NVL(FO.RENT_PAID, 0)), 2) RENT_RECE_ALL,
      			ROUND(SUM(NVL(FO.PENALTY_RECE, 0) - NVL(FO.PENALTY_PAID, 0)), 2) PENALTY_RECE_ALL,
	           T.ID
		        FROM  (SELECT *
			           FROM RE_OVERDUE_COLL_FORCE RO
			          WHERE RO.ID IN (SELECT MAX(ROC.ID)
			                            FROM RE_OVERDUE_COLL_FORCE ROC
			                           GROUP BY ROC.PAY_CODE)) T
			  LEFT JOIN T_SYS_DATA_DICTIONARY TSD
			    ON TSD.CODE = T.REPAYMENT_TYPE AND TSD.TYPE = '拖欠还款原因' 
			    LEFT JOIN T_SYS_DATA_DICTIONARY TSD1
			    ON TSD1.CODE = T.REPAYMENT_TYPE AND TSD1.TYPE = '诉讼阶段' 
			      LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
				LEFT JOIN (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE >= TRUNC(SYSDATE)) FO ON FO.PAY_CODE = T.PAY_CODE
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
			GROUP BY T.PAY_CODE,
			  T.PAY_ID,
	           TSD.FLAG ,
	           T.CLIENT_NAME,
	           T.STOP_TIME,
	           T.REMARK,
	           T.OPERATE_NAME,
	           T.PLAQUE,
	           T.CAR_PLACE,
	           T.CAR_TYPE,
	           T.CAR_SIGN_NAME,
	           T.CAR_STOP_PLACE,
	           TSD1.FLAG ,T.ID
			 ORDER BY T.ID
		) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>
	<select id="getUrgeForceDataConut" parameterType="map" resultType="int">
			      SELECT COUNT(0)
				   FROM (SELECT *
				           FROM RE_OVERDUE_COLL_FORCE RO
				          WHERE RO.ID IN (SELECT MAX(ROC.ID)
				                            FROM RE_OVERDUE_COLL_FORCE ROC
				                           GROUP BY ROC.PAY_CODE)) T
				   LEFT JOIN ( SELECT *
		          FROM FIL_URGE_LOG FUL
		         WHERE FUL.ID IN
		               (SELECT MAX(FU.ID) FROM FIL_URGE_LOG FU GROUP BY FU.PAY_ID)) FDL
				     ON FDL.TYPE = T.TYPE
				    AND T.PAY_ID = FDL.PAY_ID
			    WHERE FDL.ID IS NOT NULL
			<if test=" PAY_CODE != null and PAY_CODE != ''">AND PAY_CODE like '%'||#{PAY_CODE}||'%'</if>
			<if test=" CLIENT_NAME != null and CLIENT_NAME != ''">AND CLIENT_NAME like '%'||#{CLIENT_NAME}||'%'</if>
			<if test=" DATA_ID != null and DATA_ID != ''">AND T.ID = #{DATA_ID}</if>
	</select>
	<select id="getShowUrgeForceData" parameterType="map" resultType="map">
		 SELECT T.PAY_CODE,
	           T.REPAYMENT_TYPE,
	           T.CLIENT_NAME,
	           TO_CHAR(T.STOP_TIME, 'yyyy-MM-dd') STOP_TIME,
	           T.REMARK,
	           T.OPERATE_NAME,
	           T.PLAQUE,
	           T.CAR_PLACE,
	           T.CAR_TYPE,
	           T.CAR_SIGN_NAME,
	           T.CAR_STOP_PLACE,
	           T.RECEIVE_STATUS,
	           T.ID
      FROM RE_OVERDUE_COLL_FORCE T
     WHERE T.ID = #{ID}
	</select>
	<update id="addUrgeForce" parameterType="map">
		 UPDATE RE_OVERDUE_COLL_FORCE SET 
		 	ID = #{ID}
		 	<if test=" REPAYMENT_TYPE != null "> ,REPAYMENT_TYPE = #{REPAYMENT_TYPE}</if>
		 	<if test=" OPERATE_NAME != null "> ,OPERATE_NAME = #{OPERATE_NAME}</if>
		 	<if test=" REMARK != null "> ,REMARK = #{REMARK}</if>
		 	<if test=" STOP_TIME != null "> ,STOP_TIME = TO_DATE(#{STOP_TIME},'YYYY-MM-DD')</if>
		 	<if test=" CAR_PLACE != null "> ,CAR_PLACE = #{CAR_PLACE}</if>
		 	<if test=" PLAQUE != null "> ,PLAQUE = #{PLAQUE}</if>
		 	<if test=" CAR_TYPE != null "> ,CAR_TYPE = #{CAR_TYPE}</if>
		 	<if test=" CAR_SIGN_NAME != null "> ,CAR_SIGN_NAME = #{CAR_SIGN_NAME}</if>
		 	<if test=" CAR_STOP_PLACE != null "> ,CAR_STOP_PLACE = #{CAR_STOP_PLACE}</if>
		 	<if test=" RECEIVE_STATUS != null "> ,RECEIVE_STATUS = #{RECEIVE_STATUS}</if>
		 	WHERE ID = #{ID}
	</update>
	<select id="showUrgeLawyerLog" parameterType="map" resultType="map" >
		   SELECT TO_CHAR(F.CREATE_DATE, 'yyyy-mm-dd hh24:mi:ss') CREATE_DATE, TSD.FLAG,DECODE(TST.CLAIM_MAN, '','未分配任务人',TST.CLAIM_MAN) CLAIM_MAN
		   FROM FIL_URGE_LOG F
		   LEFT JOIN T_SYS_TASK_CLAIM TST ON TST.ID = F.CLAIM_ID
		   LEFT JOIN T_SYS_DATA_DICTIONARY TSD
		     ON TSD.CODE = F.TYPE
		    AND TSD.TYPE = '催收任务名称'
		  WHERE F.PAY_ID = #{PAY_ID}
		  ORDER BY F.ID
	</select>
</mapper>