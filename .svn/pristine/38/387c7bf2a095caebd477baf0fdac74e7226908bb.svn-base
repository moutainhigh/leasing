<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="auth">
	
	<select id="getRes" resultType="map" parameterType="map">
	SELECT SR.ID, SR.CODE NAME FROM SECU_PER SR
	where SR.parent_id is null
	<if test="NAME != null and NAME != ''"> and CODE LIKE '%${NAME}%'</if>
	
	</select>

	<select id="getPer" resultType="map" parameterType="map">
	SELECT SP.ID, SP.CODE NAME, SP.parent_id RES_ID
	  FROM SECU_PER SP
	 WHERE SP.parent_id is not null
	 <if test="NAME != null and NAME != ''">AND SR.CODE LIKE '%${NAME}%'</if>
	</select>
	
	<select id="getPerTreeRES_NAME" resultType="com.pqsoft.secu.service.TreeJson" parameterType="map">
	  select * from (
	      select ID id,CODE text,parent_id pid  from SECU_PER 
		<if test="RES_NAME != null and RES_NAME != ''">start with CODE LIKE '%${RES_NAME}%'</if>
	      connect by prior parent_id=id
	      union all
	      select ID id,CODE text,parent_id pid from SECU_PER 
	     <if test="RES_NAME != null and RES_NAME != ''">start with CODE LIKE '%${RES_NAME}%'</if>
	      connect by prior id=parent_id
    ) a group by ID,TEXT,PID
    order by ID
	</select>
	
	<select id="getPerTree" resultType="com.pqsoft.secu.service.TreeJson">
	 SELECT ID ID,CODE TEXT,PARENT_ID PID FROM SECU_PER A
	   WHERE A.ADMIN != 2
	   START WITH  PARENT_ID IS NULL
     CONNECT BY PRIOR ID=PARENT_ID
	</select>
	
	<select id="getAdminTree" resultType="com.pqsoft.secu.service.TreeJson">
	 SELECT ID ID,CODE TEXT,PARENT_ID PID,CASE WHEN ADMIN=0 then 'true' else 'false' end checked FROM SECU_PER A
	   START WITH  PARENT_ID IS NULL
     CONNECT BY PRIOR ID=PARENT_ID
	</select>
	
	<select id="getMenu" resultType="map" parameterType="map">
	      select * from secu_menu
	</select>
	<delete id="deleteRolePer" parameterType="map">
		DELETE SECU_ROLE_PER WHERE ROLE_ID = #{ROLE_ID}
	</delete>
	<delete id="deleteRolePerByPerId" parameterType="map">
		DELETE SECU_ROLE_PER WHERE ROLE_ID = #{ROLE_ID} AND PER=#{ID}
	</delete>
	
	<insert id="addRolePer" parameterType="map">
		INSERT INTO SECU_ROLE_PER(
		ROLE_ID
		,PER
		<if test="PER_NAME != null and PER_NAME != ''">,PER_NAME</if>
		) VALUES(
		#{ROLE_ID}
		,#{PER_ID}
		<if test="PER_NAME != null and PER_NAME != ''">,#{PER_NAME}</if>
		)
	</insert>
	
	<select id="getRolePerList" resultType="map" parameterType="map">
	    select a.ROLE_ID,b.ID PER,a.PER_NAME from secu_role_per a 
	    left join SECU_PER b on a.PER_NAME=b.CODEALL
	    where 1=1
	 <if test="ROLE_ID != null and ROLE_ID != ''">AND ROLE_ID = #{ROLE_ID}</if>
	</select>
	<select id="getPermissonList" resultType="map" parameterType="map">
	    select * from secu_permission where 1=1
	 <if test="RESOURCE_CLASS != null and RESOURCE_CLASS != ''">AND RESOURCE_CLASS = '${RESOURCE_CLASS}'</if>
	 <if test="OPERATION_METHOD != null and OPERATION_METHOD != ''">AND OPERATION_METHOD = '${OPERATION_METHOD}'</if>
	</select>
	
	<insert id="addRolePermisson" parameterType="map">
		INSERT INTO secu_role_permission(ROLE_ID,PERMISSION_ID) VALUES(#{ROLE_ID},#{PERMISSION_ID})
	</insert>
	<select id="getSecuRolePer" resultType="map" parameterType="map">
	    select * from secu_role_permission r,secu_menu s where 1=1 AND r.PERMISSION_ID = s.permission_id
	 <if test="ROLE_ID != null and ROLE_ID != ''">AND r.ROLE_ID = '${ROLE_ID}'</if>
	 
	</select>
	<delete id="deleteSecuRolePer" parameterType="map">
		DELETE secu_role_permission WHERE PERMISSION_ID = #{PERMISSION_ID} AND ROLE_ID = #{ROLE_ID}
	</delete>
	<insert id="addPermisson" parameterType="map">
		INSERT INTO secu_permission(PERMISSION_ID,RESOURCE_CLASS,OPERATION_METHOD,PERMISSION_NAME,PERMISSION_MEMO) VALUES(#{PERMISSION_ID},#{RESOURCE_CLASS},#{OPERATION_METHOD},#{PERMISSION_NAME},#{PERMISSION_MEMO})
	</insert>
	<delete id="deleteSecuPerByRole" parameterType="map">
		DELETE secu_role_permission WHERE ROLE_ID = #{ROLE_ID}
	</delete>
	<delete id="deleteSecuPerByRoleAndPerId" parameterType="map">
		DELETE secu_role_permission WHERE ROLE_ID = #{ROLE_ID} AND PERMISSION_ID=#{PERMISSION_ID}
	</delete>
	<select id="getSecuPerOpById" resultType="map" parameterType="map">
	    select * from SECU_PER_OP where PER_ID=#{PID}
	</select>
	
	
	<select id="selectAllRole" resultType="java.util.Map"  parameterType="java.util.Map">
		SELECT R.ID ROLE_ID,
				R.NAME ROLE_NAME,
				R.MEMO ROLE_MEMO,
				R.STATUS ROLE_STATUS
		FROM SECU_ROLE R
		<if test="role_Name != null and role_Name != ''">WHERE R.NAME LIKE '%'||#{role_Name}||'%'</if>
		ORDER BY R.STATUS,R.ID
	</select>
	
	
	<insert id="addBtnGetRole" parameterType="java.util.Map">
 		insert into SECU_ROLE(
 			id
 			<if test="ROLE_NAME != null and ROLE_NAME != ''">,name</if>
 			<if test="ROLE_MEMO != null and ROLE_MEMO != ''">,memo</if>
 			,status
 			<if test="TAB_RIGHTS != null and TAB_RIGHTS != ''">,tab_rights</if>
 		 )
 		values(
 			SEQ_SECU_ROLE.nextval
 			<if test="ROLE_NAME != null and ROLE_NAME != ''">,#{ROLE_NAME}</if>
 			<if test="ROLE_MEMO != null and ROLE_MEMO != ''">,#{ROLE_MEMO}</if>
 			,1
 			<if test="TAB_RIGHTS != null and TAB_RIGHTS != ''">,#{TAB_RIGHTS}</if>
 		)
	 </insert>
	 
	  <update id="updateBtnGetRole" parameterType="java.util.Map">
	 	UPDATE SECU_ROLE 
	 	SET id=#{ROLE_ID}
	 		<if test="ROLE_NAME != null">,name=#{ROLE_NAME}</if>
	 		<if test="ROLE_MEMO != null">,memo=#{ROLE_MEMO}</if>
	 		<if test="TAB_RIGHTS != null">,tab_rights=#{TAB_RIGHTS}</if>
		WHERE
	 		id=#{ROLE_ID}
	 </update>
	 
 	<select id="selectRoleById" resultType="java.util.Map"  parameterType="int">
		SELECT  ID ROLE_ID,
				NAME ROLE_NAME,
				MEMO ROLE_MEMO,
				STATUS ROLE_STATUS,
				TAB_RIGHTS TAB_RIGHTS
		FROM SECU_ROLE R
		WHERE R.ID = #{ROLE_ID}
	 </select>
	 
	 <delete id="deleteBtnGetRole" parameterType="java.util.Map">
	 	delete SECU_ROLE where id=#{ROLE_ID}
	 </delete>
	 
	 <select id="queryPerName" resultType="Map" parameterType="Map">
	 	select CODEALL from SECU_PER where ID=#{PER_ID} and rownum=1
	 </select>
	 
	 <update id="adminclean" parameterType="map">
	 	UPDATE SECU_PER SP SET SP.ADMIN = 2 
	 </update>
	 
	 <update id="setAdmin" parameterType="map">
	 	UPDATE SECU_PER SP SET SP.ADMIN = #{ADMIN} WHERE ID = #{ID}
	 </update>
</mapper>