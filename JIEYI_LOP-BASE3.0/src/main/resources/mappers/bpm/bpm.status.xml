<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="bpm.status">
	<update id="updateProjectStatus" parameterType="map">
		UPDATE FIL_PROJECT_HEAD F SET F.ID=#{PROJECT_ID}
		<if test="STATUS !=null and STATUS !=''">, F.STATUS=#{STATUS}</if> 
		<if test="DB_CONFRIM_DATE !=null and DB_CONFRIM_DATE !=''">, F.DB_CONFRIM_DATE = ${DB_CONFRIM_DATE}</if> 
		<if test="LEASE_CODE !=null and LEASE_CODE !=''">, F.LEASE_CODE = #{LEASE_CODE}</if>
		WHERE F.ID=#{PROJECT_ID}
	</update>
	
	<update id="updateProjectStatus_tb" parameterType="map">
		UPDATE FIL_PROJECT_HEAD F SET F.PARENT_ID=#{PROJECT_ID}
		<if test="STATUS !=null and STATUS !=''">, F.STATUS=#{STATUS}</if> 
		<if test="DB_CONFRIM_DATE !=null and DB_CONFRIM_DATE !=''">, F.DB_CONFRIM_DATE = ${DB_CONFRIM_DATE}</if> 
		<if test="LEASE_CODE !=null and LEASE_CODE !=''">, F.LEASE_CODE = #{LEASE_CODE}</if>
		WHERE F.PARENT_ID=#{PROJECT_ID}
	</update>
	<update id="updatePayPlanAbsVersionByProjectId" parameterType="String">
	UPDATE fil_rent_plan_head T SET T.VERSION_CODE=ABS(T.VERSION_CODE) WHERE T.PROJECT_ID=#{PROJECT_ID}
	</update>
	<insert id="addAChangB" parameterType="map">
	INSERT INTO FIL_PROJECT_ATOB
	  (ID,
	   PROJECT_ID,
	   SUP_ID,
	   OLD_CLIENT_ID,
	   NEW_CLIENT_ID,
	   CLIENT_TYPE,
	   CHANGE_DATE,
	   TOTAL_RENT,
	   LEFT_RENT,
	   LGJK_AMT,
	   A_PAID_RENT_COUNT,
	   CREATE_CODE,
	   CREATE_DATE,
	   OPEN_BANK_CODE,
	   OPEN_BANK_NAME,
	   OPEN_BANK_ACCOUNT,
	   PAYLIST_CODE,
	   CLIENT_CODE,
	   OPEN_ACCOUNT_NAME)
	VALUES
	  (SEQ_FIL_PROJECT_ATOB.NEXTVAL,
	   #{PROJECT_ID},
	   #{SUP_ID,dateType=VARCHAR},
	   #{OLD_CLIENT_ID,dateType=VARCHAR},
	   #{NEW_CLIENT_ID,dateType=VARCHAR},
	   #{CLIENT_TYPE,dateType=VARCHAR},
	   SYSDATE,
	   #{TOTAL_RENT,dateType=VARCHAR},
	   #{LEFT_RENT,dateType=VARCHAR},
	   #{LGJK_AMT,dateType=VARCHAR},
	   #{A_PAID_RENT_COUNT,dateType=VARCHAR},
	   #{CREATE_CODE,dateType=VARCHAR},
	   SYSDATE,
	   #{OPEN_BANK_CODE,dateType=VARCHAR},
	   #{OPEN_BANK_NAME,dateType=VARCHAR},
	   #{OPEN_BANK_ACCOUNT,dateType=VARCHAR},
	   #{PAYLIST_CODE,dateType=VARCHAR},
	   #{CLIENT_CODE,dateType=VARCHAR},
	   #{OPEN_ACCOUNT_NAME,dateType=VARCHAR})
	</insert>	
	
	<update id="updateABInfo" parameterType="map">
		UPDATE FIL_PROJECT_HEAD FPH
		   SET FPH.CLIENT_ID =#{NEW_CLIENT_ID},
		       FPH.BANK_ID  =
		       (SELECT *
		          FROM (SELECT FCO.ID
		                  FROM FIL_CUST_OPENINGBANK FCO
		                 WHERE FCO.BANK_NAME=#{OPEN_BANK_NAME}
		                   AND FCO.BANK_ACCOUNT=#{OPEN_BANK_ACCOUNT}
		                   AND FCO.CLIENT_ID=#{NEW_CLIENT_ID})
		         WHERE ROWNUM = 1)
		 WHERE FPH.ID =#{PROJECT_ID}
	</update>
	<update id="updateProjectJbpmTaskName" parameterType="map">
		UPDATE FIL_PROJECT_HEAD
		F SET F.TASK_CODE_NAME=#{TASKNAME} WHERE F.ID=#{PROJECT_ID}
	</update>
	
	<select id="doShowFirstPayCheck" parameterType="map" resultType="int">
		SELECT COUNT(0) FROM FIL_PROJECT_HEAD T WHERE T.FIRST_APP_STATE > 1 AND  T.ID = #{PROJECT_ID}
	</select>
	
	<select id="doShowFirstRefundCheck" parameterType="map" resultType="int">
		SELECT COUNT(0) FROM FIL_PROJECT_HEAD T WHERE T.FIRST_APP_STATE = 5 AND  T.ID = #{PROJECT_ID}
	</select>
	<select id="doShowFirstRefundCheck1" parameterType="map" resultType="int">
		SELECT COUNT(0) FROM FIL_PROJECT_HEAD T WHERE T.FIRST_APP_STATE in (2,3,4) AND  T.ID = #{PROJECT_ID}
	</select>
	<select id="doShowPAYMENT_STATUS" parameterType="map" resultType="string">
	SELECT FP.VALUE_STR PAYMENT_STATUS FROM FIL_PROJECT_SCHEME FP WHERE FP.KEY_NAME_EN ='PAYMENT_STATUS' AND FP.PROJECT_ID=#{PROJECT_ID}
	</select>
	<update id="updateProsub_company_name" parameterType="string">
		UPDATE FIL_PROJECT_HEAD h
	   SET h.sub_company_name = getsubcompanybyorgid(h.ORD_ID)
	 WHERE h.id=#{PROJECT_ID}
	</update>
	
	<update id="updateProHeadInfo" parameterType="map">
	 UPDATE FIL_PROJECT_HEAD T SET T.PLEDGE_STATUS = (
 SELECT TT.VALUE_STR FROM FIL_PROJECT_SCHEME TT WHERE TT.PROJECT_ID = T.ID AND TT.KEY_NAME_ZN = '牌抵挂'
 ) WHERE  T.PLEDGE_STATUS IS NULL  AND T.ID=#{PROJECT_ID}
	</update>
	
	<update id="updateProHeadInfo1" parameterType="map">
	UPDATE FIL_PROJECT_HEAD T SET T.PLEDGE_STATUS = (
 SELECT TT.VALUE_STR FROM FIL_PROJECT_SCHEME TT WHERE TT.PROJECT_ID = T.ID AND TT.KEY_NAME_ZN = '牌抵挂' 
 ) WHERE  T.PLEDGE_STATUS IS NULL    AND T.ID=#{PROJECT_ID}
	</update>
	<update id="updateProHeadInfo2" parameterType="map">
		MERGE INTO FIL_PROJECT_EQUIPMENT T 
	USING ( 
	SELECT T.ID ,TT.VALUE_STR_FLAG  
	FROM FIL_PROJECT_EQUIPMENT T 
	LEFT JOIN  FIL_PROJECT_SCHEME TT ON T.PROJECT_ID = TT.PROJECT_ID 
	AND   TT.KEY_NAME_ZN='挂靠公司' 
	WHERE T.ANCHORED_COMPANY_ID IS NULL AND TT.VALUE_STR_FLAG IS  NOT NULL 
	AND T.PAYLIST_CODE NOT LIKE '%TEST%'  AND TT.VALUE_STR_FLAG !='滁州东方昆仑物流有限公司'
	AND TT.PROJECT_ID=#{PROJECT_ID}
	) TT  
	ON (T.ID =TT.ID ) 
	WHEN MATCHED THEN UPDATE SET T.ANCHORED_COMPANY_ID=TT.VALUE_STR_FLAG
	</update>
	
	<select id="queryWEIQIANYUECount" parameterType="map" resultType="int">
	SELECT COUNT(1) FROM FIL_PROJECT_HEAD F WHERE F.ID=#{PROJECT_ID} AND F.SIGNED_DATE IS NULL
	</select>
	<update id="updateQianyue" parameterType="map">
		UPDATE FIL_PROJECT_HEAD F SET F.SIGNED_DATE=#{SIGNED_DATE} WHERE F.ID=#{PROJECT_ID}
	</update>
	
	<select id="queryPayCodeByProjectId" parameterType="map" resultType="string">
	SELECT F.PAYLIST_CODE FROM FIL_RENT_PLAN_HEAD_MAX_V F WHERE F.PROJECT_ID=#{PROJECT_ID}
	</select>
	
	<select id="upMoneyToJoin" statementType="CALLABLE" parameterType="map">
		{call PRC_BE_QJL_PAY_CODE(#{PAY_CODE})}
	</select>
	<select id="queryFPCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT 1
		          FROM FI_SALEITEM_INVOICE T
		         WHERE T.PROJ_ID=#{PROJECT_ID}
		        UNION
		        SELECT 1
		          FROM FIL_PROJECT_HEAD T
		         INNER JOIN FIL_PROJECT_EQUIPMENT TT
		            ON T.ID = TT.PROJECT_ID
		         INNER JOIN FI_VEHLICLE_INVOICE TTT
		            ON TT.ID = TTT.EQUIP_ID
		         WHERE T.ID = #{PROJECT_ID})
	</select>
	
	<update id="updateProjectSubStatus" parameterType="map">
	UPDATE FIL_PROJECT_HEAD F SET F.SUB_JBPM_STATUS=#{SUB_JBPM_STATUS} WHERE F.ID=#{PROJECT_ID}
	</update>
	<select id="queryProjectSubStatus" parameterType="map" resultType="string">
	SELECT  F.SUB_JBPM_STATUS FROM FIL_PROJECT_HEAD F WHERE F.ID=#{PROJECT_ID}
	</select>
	
	<!--****************************查询项目状态 Add By：YangJ 2014-4-22*****************************-->
	<select id="queryProjectStatus" parameterType="map" resultType="map">
		SELECT STATUS 
		FROM FIL_WIND_CONTROL_SUMMARY f 
		WHERE f.PROJECT_ID=#{PROJECT_ID} 
		AND f.id=(select max(id) from FIL_WIND_CONTROL_SUMMARY f
		WHERE f.PROJECT_ID=#{PROJECT_ID})
	</select>
	
	<select id="queryDateSing" parameterType="String" resultType="int">
		select count(id) num from fil_project_head where id=#{PROJECT_ID} and SELF_SIGN_DATE is not null and SIGNED_DATE is not null
	</select>
	
	<select id="queryFileBQ" parameterType="map" resultType="map">
		select fcr.file_name,(fcr.filecount-fcr.sh_count) num,fcr.BQZLCNSJ END_DATE from FIL_CONTRACT_RECIEVEFILE fcr where fcr.project_id=#{PROJECT_ID} and fcr.FILECOUNT-fcr.SH_COUNT>0
	</select>
	<select id="queryRECIEVEFILEFile" parameterType="map" resultType="map">
		select fcr.file_name,(fcr.filecount-fcr.sh_count) num,fcr.BQZLCNSJ END_DATE from FIL_CONTRACT_RECIEVEFILE fcr where fcr.project_id=#{PROJECT_ID} 
	</select>	
	<select id="queryProjectInfo" parameterType="map" resultType="map">
		select fph.id,fph.pro_code PROJECT_CODE,fph.lease_code LEASE_CODE,fcc.name CLIENT_NAME,fcc.cust_id CLIENT_CODE from fil_project_head fph 
		left join fil_cust_client fcc on fph.client_id=fcc.id
		where fph.id=#{PROJECT_ID}
	</select>
	
	<select id="FIRSTDAYBYPROJECT"  parameterType="map" resultType="map">
		            select FIRSTPAYDATE from fil_project_scheme fps,fil_project_equipment fpe 
					where fpe.scheme_row_num=fps.scheme_row_num and fps.project_id=#{PROJECT_ID} and fpe.project_id=#{PROJECT_ID} and fpe.status=0 and rownum=1
	</select>
	
	<select id="queryProjectInfoPay" parameterType="map" resultType="map">
		select fr.paylist_code PAY_CODE,fph.id,fph.pro_code PROJECT_CODE,fph.lease_code LEASE_CODE,fcc.name CLIENT_NAME,fcc.cust_id CLIENT_CODE 
		from fil_rent_plan_head fr
		left join fil_project_head fph on fr.project_id=fph.id
		left join fil_cust_client fcc on fph.client_id=fcc.id
		where fr.id=#{PAY_ID}
	</select>
	
	<select id="FIRSTDAYBYPAY"  parameterType="map" resultType="map">
		   select FIRSTPAYDATE from fil_project_scheme fps,fil_project_equipment fpe 
            where fpe.scheme_row_num=fps.scheme_row_num and fps.project_id=fpe.project_id and fpe.status=0
            and fpe.pay_id=#{PAY_ID}
            and rownum=1
	</select>
	
	<insert id="insertTrack" parameterType="Map">
		INSERT INTO FIL_TRACK
		( 
			<if test="ID != null"> ID </if>
			<if test="STATUS != null"> ,STATUS </if>
			<if test="TYPE != null"> ,TYPE </if>
			<if test="CLIENT_CODE != null"> ,CLIENT_CODE </if>
			<if test="CLIENT_NAME != null"> ,CLIENT_NAME </if>
			<if test="PROJECT_CODE != null"> ,PROJECT_CODE </if>
			<if test="LEASE_CODE != null"> ,LEASE_CODE </if>
			<if test="PAY_CODE != null"> ,PAY_CODE </if>
			 ,START_DATE 
			<if test="END_DATE != null"> ,END_DATE </if>
			 ,CREATE_DATE 
			<if test="USER_CODE != null"> ,USER_CODE </if>
			<if test="USER_NAME != null"> ,USER_NAME </if>
			<if test="MEMO != null"> ,MEMO </if>
		)
		VALUES
		(
			<if test="ID != null"> #{ID} </if>
			<if test="STATUS != null"> ,#{STATUS} </if>
			<if test="TYPE != null"> ,#{TYPE} </if>
			<if test="CLIENT_CODE != null"> ,#{CLIENT_CODE} </if>
			<if test="CLIENT_NAME != null"> ,#{CLIENT_NAME} </if>
			<if test="PROJECT_CODE != null"> ,#{PROJECT_CODE} </if>
			<if test="LEASE_CODE != null"> ,#{LEASE_CODE} </if>
			<if test="PAY_CODE != null"> ,#{PAY_CODE} </if>
			 ,sysdate
			<if test="END_DATE != null"> ,to_date(#{END_DATE},'yyyy-MM-dd') </if>
			,sysdate
			<if test="USER_CODE != null"> ,#{USER_CODE} </if>
			<if test="USER_NAME != null"> ,#{USER_NAME} </if>
			<if test="MEMO != null"> ,#{MEMO} </if>
		)
	</insert>
	
	<insert id="insertStockByProjectEq" parameterType="String">
		 insert into T_SYS_STOCK (
		 STOCK_ID
		 ,PLATFORM_TYPE
		 ,PRODUCT_NAME
		 ,PRODUCT_TYPE
		 ,PIECE_UNIT
		 ,REFER_PRICE
		 ,WHOLE_ENGINE_CODE
		 ,PRODUCT_DATE
		 ,ENGINE_CODE
		 ,CAR_SYMBOL
		 ,CERTIFICATE_NUM
		 ,PROJECT_ID
		 ,EQ_ID
		 ,INTO_TIME
		 ,SUP_SHORTNAME
		 ,COMPANY_NAME
		 )
		 select 
		 SEQ_T_SYS_STOCK.NEXTVAL
		 ,fph.platform_type
		 ,fpe.product_name
		 ,fpe.SPEC_NAME
		 ,tsdd.flag
		 ,fpe.unit_price
		 ,fpe.WHOLE_ENGINE_CODE
		 ,fpe.CERTIFICATE_DATE
		 ,fpe.ENGINE_TYPE
		 ,fpe.CAR_SYMBOL
		 ,fpe.CERTIFICATE_NUM
		 ,fpe.project_id
		 ,fpe.id
		 ,sysdate
		 ,fpe.SUPPLIERS_NAME
		 ,fpe.COMPANY_NAME
		 from fil_project_equipment fpe 
		 left join fil_project_head fph on fpe.project_id=fph.id
		 left join t_sys_data_dictionary tsdd on tsdd.type='设备单位' and fpe.unit=tsdd.code
		 where fpe.project_id=#{PROJECT_ID} and fph.platform_type=2
	</insert>
	
	<select id="queryAmountByProjectID" parameterType="String" resultType="Map">
		select fpe.id,fpe.amount,round(nvl(fpe.staybuy_price,0)/fpe.amount,2) staybuy_price from fil_project_equipment fpe where fpe.amount>1 and fpe.project_id=#{PROJECT_ID}
	</select>
	
	<insert id="insertEqAmount" parameterType="java.util.Map">
		insert into fil_project_equipment
		(
		ID,
		PROJECT_ID,
		  COMPANY_ID,
		  SUPPLIERS_ID,
		  PRODUCT_ID,
		  CATENA_ID,
		  SPEC_ID,
		  UNIT_PRICE,
		  AMOUNT,
		  TOTAL_PRICE,
		  UNIT,
		  STAYBUY_PRICE,
		  CREATE_TIME,
		  CREATE_ID,
		  UPDATE_TIME,
		  UPDATE_ID,
		  REAMRK,
		  PAYLIST_CODE,
		  STATUS,
		  WHOLE_ENGINE_CODE,
		  ENGINE_TYPE,
		  CERTIFICATE_DATE,
		  CAR_SYMBOL,
		  INSURE_MONEY,
		  WHETHER_CREATE_INSURE,
		  PRODUCT_ADDRESS,
		  CERTIFICATE_NUM,
		  LIMIT_NUM,
		  IMPORT_NUM,
		  INSPEC_NUM,
		  TONNAGE,
		  ACTUAL_PRODUCT_NAME,
		  ACTUAL_PRODUCT_TYPE,
		  COMPANY_FULLNAME,
		  ANCHORED_COMPANY_ID,
		  AVERAGE_PRICE,
		  PRODUCT_NAME,
		  CATENA_NAME,
		  SPEC_NAME,
		  ERRMSG,
		  GENERATOR_MODEL,
		  GENERATOR_NUMBER,
		  QIZAI,
		  SCHEME_ID,
		  SCHEME_ROW_NUM,
		  DELIVER_ADDRESS,
		  DELIVER_DATE,
		  INDUSTRY_FICATION,
		  PROVINCE_NAME,
		  AREA_ID,
		  CITY_ID,
		  CITY_NAME,
		  QZAPP_STATUS,
		  BILLING_AGREEMENT_ID,
		  PAY_ID,
		  SEND_STATUS,
		  COMPANY_NAME,
		  SUPPLIERS_NAME,
		  INSURANCE_FLAG,
		  CERTIFICATE,
		  CERTIFICATE_ID,
		  SCHEME_ID_ACTUAL,
		  ACTUAL_PRICE
		)
		select SEQ_FIL_PROJECT_EQUIPMENT.NEXTVAL,
		  PROJECT_ID,
		  COMPANY_ID,
		  SUPPLIERS_ID,
		  PRODUCT_ID,
		  CATENA_ID,
		  SPEC_ID,
		  UNIT_PRICE,
		  1,
		  ACTUAL_PRICE,
		  UNIT,
		  #{STAYBUY_PRICE},
		  CREATE_TIME,
		  CREATE_ID,
		  UPDATE_TIME,
		  UPDATE_ID,
		  REAMRK,
		  PAYLIST_CODE,
		  STATUS,
		  WHOLE_ENGINE_CODE,
		  ENGINE_TYPE,
		  CERTIFICATE_DATE,
		  CAR_SYMBOL,
		  INSURE_MONEY,
		  WHETHER_CREATE_INSURE,
		  PRODUCT_ADDRESS,
		  CERTIFICATE_NUM,
		  LIMIT_NUM,
		  IMPORT_NUM,
		  INSPEC_NUM,
		  TONNAGE,
		  ACTUAL_PRODUCT_NAME,
		  ACTUAL_PRODUCT_TYPE,
		  COMPANY_FULLNAME,
		  ANCHORED_COMPANY_ID,
		  AVERAGE_PRICE,
		  PRODUCT_NAME,
		  CATENA_NAME,
		  SPEC_NAME,
		  ERRMSG,
		  GENERATOR_MODEL,
		  GENERATOR_NUMBER,
		  QIZAI,
		  SCHEME_ID,
		  SCHEME_ROW_NUM,
		  DELIVER_ADDRESS,
		  DELIVER_DATE,
		  INDUSTRY_FICATION,
		  PROVINCE_NAME,
		  AREA_ID,
		  CITY_ID,
		  CITY_NAME,
		  QZAPP_STATUS,
		  BILLING_AGREEMENT_ID,
		  PAY_ID,
		  SEND_STATUS,
		  COMPANY_NAME,
		  SUPPLIERS_NAME,
		  INSURANCE_FLAG,
		  CERTIFICATE,
		  CERTIFICATE_ID,
		  SCHEME_ID_ACTUAL,
		  ACTUAL_PRICE
		  from fil_project_equipment fpe where fpe.ID=#{ID} 
	</insert>
	
	<delete id="deleteEqById"  parameterType="java.util.Map">
		delete fil_project_equipment fpe where fpe.ID=#{ID} 
	</delete>
	
	<update id="updateCustStausQY" parameterType="map">
		update fil_cust_client fcc set fcc.Cust_Status=2 where fcc.id in(
			select fph.client_id from fil_project_head fph where fph.id=#{PROJECT_ID}
		)
	</update>
	<insert id="autoCopyRent" parameterType="string">
		INSERT INTO FIL_RENT_PLAN_HEAD(ID,
		    PAYLIST_CODE,LEASE_TOPRIC,DEPOSIT_RATE,
		    DEPOSIT_VALUE,POUNDAGE_RATE,POUNDAGE_VALUE,FIRSTRENT_RATE,FIRSTRENT_VALUE,DAY_PUACCRATE_RATE,
		    INTER_UPRATE,YEAR_INTEREST,TOPRIC_SUBFIRENT,LEASE_TERM,PROJECT_ID,LEASE_PERIOD,CREATE_DATE,START_DATE,
		    STATUS,CREATE_PERSON,LEAD_PERSON,PAY_WAY,
		    VERSION_CODE,
		    END_DATE,
		    CHANGE_START_FLAG,
		    BANK_ID,
		    BANK_FLAG,
		    EX_STATUS,
		    EX_REMARK,
		    NOSTART_STATUS,
		    NOSTART_REMARK,
		    LEGAL_STATUS,
		    PAY_STATUS,
		    YEAR_TYPE,
		    RENT_CHARGE_RATE,
		    MANAGEMENT_FEETYPE,
		    COMPANY_PERCENT,
		    COMPANY_FEE,
		    CALCULATE_WAY,
		    PAY_TYPE,
		    CHANGE_TYPE,
		    UPDATE_STATUS,
		    FIRST_PAYMENT_TIME,
		    START_CONFIRM_DATE,
		    FIRST_MONEY_ALL,
		    MONEY_ALL) SELECT SEQ_FIL_RENT_PLAN_HEAD.NEXTVAL,
				PAYLIST_CODE || '-1',LEASE_TOPRIC,DEPOSIT_RATE,
				DEPOSIT_VALUE,POUNDAGE_RATE,POUNDAGE_VALUE,FIRSTRENT_RATE,FIRSTRENT_VALUE,DAY_PUACCRATE_RATE,
				INTER_UPRATE,YEAR_INTEREST,TOPRIC_SUBFIRENT,LEASE_TERM,PROJECT_ID,LEASE_PERIOD,CREATE_DATE,START_DATE,
				STATUS,CREATE_PERSON,LEAD_PERSON,PAY_WAY,
				VERSION_CODE,
				END_DATE,
				CHANGE_START_FLAG,
				BANK_ID,
				BANK_FLAG,
				EX_STATUS,
				EX_REMARK,
				NOSTART_STATUS,
				NOSTART_REMARK,
				LEGAL_STATUS,
				PAY_STATUS,
				YEAR_TYPE,
				RENT_CHARGE_RATE,
				MANAGEMENT_FEETYPE,
				COMPANY_PERCENT,
				COMPANY_FEE,
				CALCULATE_WAY,
				PAY_TYPE,
				CHANGE_TYPE,
				UPDATE_STATUS,
				FIRST_PAYMENT_TIME,
				START_CONFIRM_DATE,
				FIRST_MONEY_ALL,
				MONEY_ALL FROM FIL_RENT_PLAN_HEAD  WHERE PROJECT_ID = #{PROJECT_ID}
	</insert>
	<select id="getRentCount" parameterType="map" resultType="int">
		  SELECT COUNT(1)
	    FROM FIL_PROJECT_SCHEME T
	   WHERE T.PROJECT_ID = #{PROJECT_ID}
	     AND ( T.SFFPQZ != 'Y'
	      OR T.SFFPQZ IS NULL)
	      <if test="SCHEME_ID !=null and SCHEME_ID !=''">AND ID=#{SCHEME_ID}</if>
	</select>
	<select id="getRentPayId" parameterType="string" resultType="map">
		SELECT MAX(ID) PAY_ID FROM FIL_RENT_PLAN_HEAD FPH
		 WHERE FPH.PROJECT_ID = #{PROJECT_ID}
	</select>
	<insert id="autoCopyRentDetail11" parameterType="map">
		INSERT INTO FIL_RENT_PLAN_DETAIL
		  (ID,
		   EQUIPMENT_ID,
		   PAY_DATE,
		   PERIOD_NUM,
		   ITEM_NAME,
		   ITEM_MONEY,
		   ITEM_FLAG,
		   SPLIT_RATE,
		   SPLIT_MONEY,
		   PAID_MONEY,
		   PAY_ID,
		   TYPE,
		   REMARK,
		   ITEM_NAME_EN,
		   IRR,
		   LOCKED_FLAG,
		   TEMP_CLD1,
		   TEMP_CLD2,
		   TEMP_CLD3,
		   TEMP_CLD4)
		  SELECT ID,
		         EQUIPMENT_ID,
		         PAY_DATE,
		         PERIOD_NUM,
		         ITEM_NAME,
		         ITEM_MONEY,
		         ITEM_FLAG,
		         SPLIT_RATE,
		         SPLIT_MONEY,
		         PAID_MONEY,
		         PAY_ID,
		         TYPE,
		         REMARK,
		         ITEM_NAME_EN,
		         IRR,
		         LOCKED_FLAG,
		         TEMP_CLD1,
		         TEMP_CLD2,
		         TEMP_CLD3,
		         TEMP_CLD4
		    FROM FIL_RENT_PLAN_DETAIL_SCHEME FDS
		   WHERE FDS.PAY_ID = #{PAY_ID}
	</insert>
	<select id="getCreateBuyContractData" parameterType="map" resultType="map">
		SELECT TSS.SUP_NAME         SELLER_UNIT_NAME,
		       TSS.OPEN_BANK        SELLER_BANK_ACCO,
		       TSS.OPEN_BANK_NUMBER SELLER_ACCOUNT,
		       TSS.SUP_FAX          SELLER_FAX,
		       TSS.SUP_ZIP          SELLER_CODE,
		       TSS.SUP_LEGAL_NAME   SELLER_LEGAL_REPR,
		       TSS.SUP_LEGAL_MOBIL  SELLER_PHONE,
		       TSS.SUP_ADDRESS      SELLER_UNIT_ADDR,
		       FPH.LEASE_CODE       LEASE_CODE,
		       FM.FA_NAME           BUYER_UNIT_NAME,
		       FM.LEGAL_PERSON      BUYER_LEGAL_REPR,
		       FM.LEGAL_MOBILE      BUYER_PHONE,
		       FM.FA_FAX            BUYER_FAX ,
		       FM.FA_POSTCODE       BUYER_CODE,
		       FM.FA_ADD            BUYER_UNIT_ADDR,
		       FM.FA_BINK           BUYER_BANK_ACCO,
		       FM.FA_ACCOUNT        BUYER_ACCOUNT,
		       FCC.NAME             RECEIVING_UNIT,
		       FRP.PAYLIST_CODE		PAYLIST_CODE,
		       FRP.ID               PAY_ID,
		       FPE.SUPPLIERS_NAME   LESSOR_NAME,
		       FRP.LEASE_TOPRIC     LEASE_TOPRIC,
       		   FPH.CLIENT_ID,
       		   FPH.PRO_CODE
		   FROM FIL_PROJECT_EQUIPMENT FPE
	      LEFT JOIN FIL_RENT_PLAN_HEAD FRP
	      ON FPE.PAY_ID = FRP.ID
	      LEFT JOIN FIL_PROJECT_HEAD FPH
	        ON FPE.PROJECT_ID = FPH.ID
	      LEFT JOIN T_SYS_SUPPLIERS TSS
	        ON TSS.SUP_ID = FPE.SUPPLIERS_ID
	      LEFT JOIN FHFA_MANAGER FM
	        ON FM.ID = FPH.FHFA_ID
	      LEFT JOIN FIL_CUST_CLIENT FCC
	        ON FCC.ID = FPH.CLIENT_ID
		   WHERE FPH.ID = #{PROJECT_ID}
		   <if test="SCHEME_ID !=null and SCHEME_ID !=''">AND FPE.SCHEME_ID_ACTUAL=#{SCHEME_ID}</if>
		   AND ROWNUM = 1
	</select>
	<insert id="autoCreateBuyContract" parameterType="string">
		INSERT INTO FIL_BUY_CONTRACT(
		ID,
		<if test="SELLER_UNIT_NAME !=null and SELLER_UNIT_NAME !=''">SELLER_UNIT_NAME,  </if>
		<if test="SELLER_BANK_ACCO !=null and SELLER_BANK_ACCO !=''">SELLER_BANK_ACCO,  </if>
		<if test="SELLER_ACCOUNT !=null and SELLER_ACCOUNT !=''">SELLER_ACCOUNT,    </if>
		<if test="SELLER_FAX !=null and SELLER_FAX !=''">SELLER_FAX,        </if>
		<if test="SELLER_CODE !=null and SELLER_CODE !=''">SELLER_CODE,       </if>
		<if test="SELLER_LEGAL_REPR !=null and SELLER_LEGAL_REPR !=''">SELLER_LEGAL_REPR, </if>
		<if test="SELLER_PHONE !=null and SELLER_PHONE !=''">SELLER_PHONE,      </if>
		<if test="SELLER_UNIT_ADDR !=null and SELLER_UNIT_ADDR !=''">SELLER_UNIT_ADDR,  </if>
		<if test="LEASE_CODE !=null and LEASE_CODE !=''">LEASE_CODE,        </if>
		<if test="BUYER_UNIT_NAME !=null and BUYER_UNIT_NAME !=''">BUYER_UNIT_NAME,   </if>
		<if test="BUYER_LEGAL_REPR !=null and BUYER_LEGAL_REPR !=''">BUYER_LEGAL_REPR,  </if>
		<if test="BUYER_PHONE !=null and BUYER_PHONE !=''">BUYER_PHONE,       </if>
		<if test="BUYER_FAX !=null and BUYER_FAX !=''">BUYER_FAX ,        </if>
		<if test="BUYER_CODE !=null and BUYER_CODE !=''">BUYER_CODE,        </if>
		<if test="BUYER_UNIT_ADDR !=null and BUYER_UNIT_ADDR !=''">BUYER_UNIT_ADDR,   </if>
		<if test="BUYER_BANK_ACCO !=null and BUYER_BANK_ACCO !=''">BUYER_BANK_ACCO,   </if>
		<if test="BUYER_ACCOUNT !=null and BUYER_ACCOUNT !=''">BUYER_ACCOUNT,     </if>
		<if test="RECEIVING_UNIT !=null and RECEIVING_UNIT !=''">RECEIVING_UNIT,    </if>
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">PAYLIST_CODE,      </if>
		<if test="PAY_ID !=null and PAY_ID !=''">PAY_ID,            </if>
		<if test="LESSOR_NAME !=null and LESSOR_NAME !=''">LESSOR_NAME,</if>
		<if test="LEASE_ORDER_CODE !=null and LEASE_ORDER_CODE !=''">LEASE_ORDER_CODE,</if>
		<if test="LESSEE_NAME !=null and LESSEE_NAME !=''">LESSEE_NAME,</if>
		<if test="PRODUCT_CODE !=null and PRODUCT_CODE !=''">PRODUCT_CODE,</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">PROJECT_ID,</if>
		CREATE_TIME,
		SIGN_DATE
		)VALUES(
		#{BUY_CONTRACT_ID},
		<if test="SELLER_UNIT_NAME !=null and SELLER_UNIT_NAME !=''">#{SELLER_UNIT_NAME},  </if>
		<if test="SELLER_BANK_ACCO !=null and SELLER_BANK_ACCO !=''">#{SELLER_BANK_ACCO},  </if>
		<if test="SELLER_ACCOUNT !=null and SELLER_ACCOUNT !=''">#{SELLER_ACCOUNT},    </if>
		<if test="SELLER_FAX !=null and SELLER_FAX !=''">#{SELLER_FAX},        </if>
		<if test="SELLER_CODE !=null and SELLER_CODE !=''">#{SELLER_CODE},       </if>
		<if test="SELLER_LEGAL_REPR !=null and SELLER_LEGAL_REPR !=''">#{SELLER_LEGAL_REPR}, </if>
		<if test="SELLER_PHONE !=null and SELLER_PHONE !=''">#{SELLER_PHONE},      </if>
		<if test="SELLER_UNIT_ADDR !=null and SELLER_UNIT_ADDR !=''">#{SELLER_UNIT_ADDR},  </if>
		<if test="LEASE_CODE !=null and LEASE_CODE !=''">#{LEASE_CODE},        </if>
		<if test="BUYER_UNIT_NAME !=null and BUYER_UNIT_NAME !=''">#{BUYER_UNIT_NAME},   </if>
		<if test="BUYER_LEGAL_REPR !=null and BUYER_LEGAL_REPR !=''">#{BUYER_LEGAL_REPR},  </if>
		<if test="BUYER_PHONE !=null and BUYER_PHONE !=''">#{BUYER_PHONE},       </if>
		<if test="BUYER_FAX !=null and BUYER_FAX !=''">#{BUYER_FAX},         </if>
		<if test="BUYER_CODE !=null and BUYER_CODE !=''">#{BUYER_CODE},        </if>
		<if test="BUYER_UNIT_ADDR !=null and BUYER_UNIT_ADDR !=''">#{BUYER_UNIT_ADDR},   </if>
		<if test="BUYER_BANK_ACCO !=null and BUYER_BANK_ACCO !=''">#{BUYER_BANK_ACCO},   </if>
		<if test="BUYER_ACCOUNT !=null and BUYER_ACCOUNT !=''">#{BUYER_ACCOUNT},     </if>
		<if test="RECEIVING_UNIT !=null and RECEIVING_UNIT !=''">#{RECEIVING_UNIT},    </if>
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">#{PAYLIST_CODE},      </if>
		<if test="PAY_ID !=null and PAY_ID !=''">#{PAY_ID},            </if>
		<if test="LESSOR_NAME !=null and LESSOR_NAME !=''">#{LESSOR_NAME},</if>
		<if test="LEASE_ORDER_CODE !=null and LEASE_ORDER_CODE !=''">#{LEASE_ORDER_CODE},</if>
		<if test="LESSEE_NAME !=null and LESSEE_NAME !=''">#{LESSEE_NAME},</if>
		<if test="PRODUCT_CODE !=null and PRODUCT_CODE !=''">#{PRODUCT_CODE},</if>
		<if test="PROJECT_ID !=null and PROJECT_ID !=''">#{PROJECT_ID},</if>
		SYSDATE,
		SYSDATE
		)
	</insert>
	<select id="getDateMap" parameterType="string" resultType="map">
		SELECT *
		  FROM (
			SELECT FRH.ID PAY_ID,
			       FRH.LEASE_PERIOD,
			       FRH.LEASE_TERM,
			       TSD.FLAG PAY_WAY,
			       TO_CHAR(FER.RECEIVE_DATE, 'yyyy-MM-dd') QS_DATE,
			       TO_CHAR(FPH.SIGNED_DATE, 'yyyy-MM-dd') QD_DATE,
			       TO_CHAR(FFP.REALITY_DATE, 'yyyy-MM-dd') FK_DATE,
			       COUNT(FBC.ID)
			  FROM FIL_RENT_PLAN_HEAD FRH
			  LEFT JOIN FIL_PROJECT_HEAD FPH
			    ON FRH.PROJECT_ID = FPH.ID
			  LEFT JOIN (SELECT *
			               FROM FIL_EQUIPMENT_SENDNOTICE FS
			              WHERE FS.ID IN (SELECT MAX(FS1.ID)
			                                FROM FIL_EQUIPMENT_SENDNOTICE FS1
			                               GROUP BY FS1.PROJECT_ID,FS1.PAY_CODE)) FES
			    ON FES.PROJECT_ID = FPH.ID
			  LEFT JOIN (SELECT *
			               FROM FIL_EQUIMENT_RECEIPT FR
			              WHERE FR.ID IN (SELECT MAX(FR1.ID)
			                                FROM FIL_EQUIMENT_RECEIPT FR1
			                               GROUP BY FR1.SENDNOTICE_ID)) FER
			    ON FES.ID = FER.SENDNOTICE_ID
			  LEFT JOIN FIL_BUY_CONTRACT FBC
			    ON FBC.PROJECT_ID = FPH.ID
			  LEFT JOIN FI_FUND_PAYMENT_DETAIL FPD
			    ON FPD.BUY_CONTRACT_ID = FBC.ID
			  LEFT JOIN FI_FUND_PAYMENT_HEAD FFP
			    ON FFP.ID = FPD.PAYMENT_HEAD_ID
			  LEFT JOIN FIL_PROJECT_SCHEME FPS
			    ON FPS.PROJECT_ID = FPH.ID
			  LEFT JOIN T_SYS_DATA_DICTIONARY TSD
			    ON TSD.CODE = FPS.PAY_WAY
			   AND TSD.TYPE = '支付方式'
			 WHERE FRH.ID = #{PAY_ID}
			 GROUP BY FRH.ID,
			          FRH.LEASE_PERIOD,
			          FRH.LEASE_TERM,
			          TSD.FLAG,
			          FER.RECEIVE_DATE,
			          FPH.SIGNED_DATE,
			          FFP.REALITY_DATE,
			          FFP.ID
			 ORDER BY FFP.REALITY_DATE nulls last,FER.RECEIVE_DATE,FPH.SIGNED_DATE
		  )
		 WHERE ROWNUM = 1
	</select>
	
	<insert id="autoCopyRentDetail" parameterType="map">
		INSERT INTO FIL_RENT_PLAN_DETAIL
		  (
		<if test="EQUIPMENT_ID !=null and EQUIPMENT_ID !=''">  EQUIPMENT_ID,    </if>
		<if test="PAY_DATE !=null and PAY_DATE !=''">  PAY_DATE,        </if>
		<if test="PERIOD_NUM !=null and PERIOD_NUM !=''">  PERIOD_NUM,      </if>
		<if test="ITEM_NAME !=null and ITEM_NAME !=''">  ITEM_NAME,       </if>
		<if test="ITEM_MONEY !=null and ITEM_MONEY !=''">  ITEM_MONEY,      </if>
		<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">  ITEM_FLAG,       </if>
		<if test="PAY_SPLIT_RATEID !=null and SPLIT_RATE !=''">  SPLIT_RATE,      </if>
		<if test="SPLIT_MONEY !=null and SPLIT_MONEY !=''">  SPLIT_MONEY,     </if>
		<if test="PAID_MONEY !=null and PAID_MONEY !=''">  PAID_MONEY,      </if>
		<if test="PAY_ID !=null and PAY_ID !=''">  PAY_ID,          </if>
		<if test="TYPE !=null and TYPE !=''">  TYPE,            </if>
		<if test="REMARK !=null and REMARK !=''">  REMARK,          </if>
		<if test="ITEM_NAME_EN !=null and ITEM_NAME_EN !=''">  ITEM_NAME_EN,    </if>
		<if test="IRR !=null and IRR !=''">  IRR,             </if>
		<if test="LOCKED_FLAG !=null and LOCKED_FLAG !=''">  LOCKED_FLAG,     </if>
		<if test="TEMP_CLD1 !=null and TEMP_CLD1 !=''">  TEMP_CLD1,       </if>
		<if test="TEMP_CLD2 !=null and TEMP_CLD2 !=''">  TEMP_CLD2,       </if>
		<if test="TEMP_CLD3 !=null and TEMP_CLD3 !=''">  TEMP_CLD3,       </if>
		<if test="TEMP_CLD4 !=null and TEMP_CLD4 !=''">  TEMP_CLD4,       </if>
		ID)VALUES(
				<if test="EQUIPMENT_ID !=null and EQUIPMENT_ID !=''">#{EQUIPMENT_ID},</if>
				<if test="PAY_DATE !=null and PAY_DATE !=''">#{PAY_DATE},</if>
				<if test="PERIOD_NUM !=null and PERIOD_NUM !=''">#{PERIOD_NUM},</if>
				<if test="ITEM_NAME !=null and ITEM_NAME !=''">#{ITEM_NAME},</if>
				<if test="ITEM_MONEY !=null and ITEM_MONEY !=''">#{ITEM_MONEY},</if>
				<if test="ITEM_FLAG !=null and ITEM_FLAG !=''">#{ITEM_FLAG},</if>
				<if test="PAY_SPLIT_RATEID !=null and SPLIT_RATE !=''">#{SPLIT_RATE},</if>
				<if test="SPLIT_MONEY !=null and SPLIT_MONEY !=''">#{SPLIT_MONEY},</if>
				<if test="PAID_MONEY !=null and PAID_MONEY !=''">#{PAID_MONEY},</if>
				<if test="PAY_ID !=null and PAY_ID !=''">#{PAY_ID},</if>
				<if test="TYPE !=null and TYPE !=''">#{TYPE},</if>
				<if test="REMARK !=null and REMARK !=''">#{REMARK},</if>
				<if test="ITEM_NAME_EN !=null and ITEM_NAME_EN !=''">#{ITEM_NAME_EN},</if>
				<if test="IRR !=null and IRR !=''">#{IRR},</if>
				<if test="LOCKED_FLAG !=null and LOCKED_FLAG !=''">#{LOCKED_FLAG},</if>
				<if test="TEMP_CLD1 !=null and TEMP_CLD1 !=''">#{TEMP_CLD1},</if>
				<if test="TEMP_CLD2 !=null and TEMP_CLD2 !=''">#{TEMP_CLD2},</if>
				<if test="TEMP_CLD3 !=null and TEMP_CLD3 !=''">#{TEMP_CLD3},</if>
				<if test="TEMP_CLD4 !=null and TEMP_CLD4 !=''">#{TEMP_CLD4},</if>
				SEQ_FIL_RENT_PLAN_DETAIL.NEXTVAL
		)
	</insert>
	<select id="getCopyRentDetailData" parameterType="map" resultType="map">
		     SELECT *
          FROM FIL_PROJECT_SCHEME T
          LEFT JOIN FIL_RENT_PLAN_DETAIL_SCHEME FS
            ON FS.PAY_ID = T.ID
       WHERE T.PROJECT_ID = #{PROJECT_ID}
	</select>
	<select id="getRentHeadData" parameterType="map" resultType="map">
		SELECT T.LEASE_CODE || '-1' PAYLIST_CODE,
		       FPS.LEASE_TOPRIC LEASE_TOPRIC,
		       FPS.BAIL_PERCENT DEPOSIT_RATE,
		       NVL(FPS.LEASE_TOPRIC, 0) * NVL(FPS.BAIL_PERCENT, 0) DEPOSIT_VALUE,
		       FPS.POUNDAGE_RATE POUNDAGE_RATE,
		       FPS.POUNDAGE_PRICE POUNDAGE_PRICE,
		       FPS.START_PERCENT FIRSTRENT_RATE,
		       FPS.FIRST_MONEY FIRSTRENT_VALUE,
		       FPS.DAY_PUACCRATE DAY_PUACCRATE_RATE,
		       FPS.YEAR_INTEREST YEAR_INTEREST,
		       FPS.FINANCE_TOPRIC TOPRIC_SUBFIRENT,
		       FPS.LEASE_TERM LEASE_TERM,
		       FPS.PROJECT_ID PROJECT_ID,
		       FPS.LEASE_PERIOD LEASE_PERIOD,
		       FPS.PAY_WAY PAY_WAY,
		       FPS.MANAGEMENT_FEETYPE MANAGEMENT_FEETYPE,
		       FPS.COMPANY_PERCENT COMPANY_PERCENT,
		       NVL(FPS.COMPANY_PERCENT, 0) * NVL(FPS.COMPANY_PERCENT, 0) COMPANY_FEE,
		       FPS.CALCULATE CALCULATE_WAY,
		       FPS.TOTAL_MONTH_PRICE MONEY_ALL,
		       FPS.FIRSTPAYALL,
		       T.PLATFORM_TYPE
		  FROM FIL_PROJECT_HEAD T
		  LEFT JOIN FIL_PROJECT_SCHEME FPS
		    ON FPS.PROJECT_ID = T.ID
		 WHERE T.ID = #{PROJECT_ID}
		 <if test="SCHEME_ID !=null and SCHEME_ID != ''">AND FPS.ID=#{SCHEME_ID}</if>
	</select>
	<select id="getEquipmentData" parameterType="map" resultType="map">
			SELECT FPH.PLATFORM_TYPE,
		       FPH.ID PROJECT_ID,
		       WM_CONCAT(FPE.ID) EQ_IDS,
		       FPE.SCHEME_ROW_NUM,
		       FCC.ID CUST_ID,
		       FPH.PRO_CODE,
		       FPH.LEASE_CODE,
		       FPE.CC_PRICE
		  FROM FIL_PROJECT_HEAD FPH
		  LEFT JOIN FIL_PROJECT_EQUIPMENT FPE
		    ON FPE.PROJECT_ID = FPH.ID
		  <if test="SCHEME_ID !=null and SCHEME_ID !=''">AND FPE.SCHEME_ID_ACTUAL=#{SCHEME_ID}</if>
		  LEFT JOIN FIL_CUST_CLIENT FCC
		    ON FCC.ID = FPH.CLIENT_ID
		 WHERE FPH.ID =#{PROJECT_ID} AND FPE.STATUS = 0
		 GROUP BY FPH.ID, FPH.PLATFORM_TYPE, FPH.ID, FPE.SCHEME_ROW_NUM, FCC.ID,FPH.PRO_CODE,FPH.LEASE_CODE,FPE.CC_PRICE
	</select>
	
	<select id="queryClientTypeById" parameterType="string" resultType="map">
		select fcc.id client_id,fcc.TYPE,fph.JOINT_TENANT,fph.JOINT_TENANT_ID,fph.GUARANTEE,fcc1.id client_id1,fcc1.type type1,fph.BANK_ID,fcc.IS_SAVE,fcc2.IS_SAVE GT_IS_SAVE,fcc1.IS_SAVE DBR_IS_SAVE 
		from fil_project_head fph
		left join fil_cust_client fcc on fph.client_id=fcc.id
		left join FIL_CREDIT_GUARANTOR_INFO fcgi on FCGI.CREDIT_ID=fph.id
		left join fil_cust_client fcc1 on fcgi.cust_id=fcc1.id
		left join fil_cust_client fcc2 on fph.JOINT_TENANT_ID=fcc2.id
		where fph.id=#{PROJECT_ID}
	</select>
	
	<select id="queryNpInfo" parameterType="string" resultType="map">
		select fcc.TYPE,'客户类型' TYPE_NAME,fcc.NAME,'客户名称' NAME_NAME,fcc.ID_CARD_TYPE,'证件类型' ID_CARD_TYPE_NAME,fcc.ID_CARD_NO,'证件号' ID_CARD_NO_NAME,fcc.BIRTHDAY,'出生日期' BIRTHDAY_NAME,
		fcc.SEX,'性别' SEX_NAME,fcc.AGE,'年龄' AGE_NAME,fcc.TEL_PHONE,'手机号码' TEL_PHONE_NAME,fcc.PHONE,'家庭电话' PHONE_NAME,
		fcc.DEGREE_EDU,'文化程度' DEGREE_EDU_NAME,fcc.IS_MARRY,'婚姻状况' IS_MARRY_NAME,fcc.WORK_UNIT,'现单位名称' WORK_UNIT_NAME,
		fcc.INDUSTRY_FICATION,'行业类型' INDUSTRY_FICATION_NAME,fcc.POSITION,'职务' POSITION_NAME,fcc.COMPANY_ADDR_PROVINCE,'省（工作地址）' COMPANY_ADDR_PROVINCE_NAME,
		fcc.COMPANY_ADDR_CITY,'市（工作地址）' COMPANY_ADDR_CITY_NAME,fcc.COMPANY_ADDR_COUNTY,'区（工作地址）' COMPANY_ADDR_COUNTY_NAME,
		fcc.COMPANY_ADDR,'街道（工作地址）' COMPANY_ADDR_NAME,fcc.HOUSE_ADDRESS_PROVINCE,'省（现居住地址）' HOUSE_ADDRESS_PROVINCE_NAME
		,fcc.HOUSE_ADDRESS_CITY,'市（现居住地址）' HOUSE_ADDRESS_CITY_NAME,fcc.HOUSE_ADDRESS_COUNTY,'区（现居住地址）' HOUSE_ADDRESS_COUNTY_NAME
		,fcc.HOUSE_ADDRESS,'街道（现居住地址）' HOUSE_ADDRESS_NAME
		from fil_project_head fph
		left join fil_cust_client fcc on fph.client_id=fcc.id
		where fph.id=#{PROJECT_ID}
	</select>
	
	<select id="getEmail" parameterType="map" resultType="map">
		SELECT FCC.NAME,SU.EMAIL,SU.MOBILE,SU.CODE,FPH.JBPM_ID,FPH.PRO_NAME,FPH.STATUS,FPH.SEND_NUM
		  FROM FIL_PROJECT_HEAD FPH, SECU_USER SU,FIL_CUST_CLIENT FCC
		 WHERE FPH.CLERK_ID = SU.ID 
		 AND  FPH.CLIENT_ID=FCC.ID
		 AND FPH.ID=#{PROJECT_ID}
	</select>
    <insert id="insHistoryContract" parameterType="map">
    	INSERT INTO HISTORYCONTRACT_FILE(
    	ID,
    	PATH,
    	NAME,
    	CREATE_TIME,
    	TYPE,
    	PROJECT_ID
    	)VALUES(
    	SEQ_HISTORYCONTRACT_FILE.NEXTVAL,
    	#{PATH},
    	#{NAME},
    	SYSDATE,
    	#{TYPE},
    	#{PROJECT_ID}
    	)
    </insert>
    
    <select id="getProjectSend" parameterType="string" resultType="map">
    	SELECT FPH.JBPM_ID, SU.CODE,FPH.ID PROJECT_ID,SU.EMAIL
		  FROM FIL_PROJECT_HEAD FPH, SECU_USER SU
		 WHERE FPH.CLERK_ID = SU.ID
		   AND FPH.ID=#{PROJECT_ID}
    </select>
    
    <select id="getPaymentSend" parameterType="string" resultType="map">
    	SELECT FFPH.JBPM_ID, SU.CODE,FPH.ID PROJECT_ID,SU.EMAIL
		  FROM FI_FUND_PAYMENT_HEAD   FFPH,
		       FI_FUND_PAYMENT_DETAIL FFPD,
		       FIL_PROJECT_HEAD       FPH,
		       SECU_USER              SU
		 WHERE FFPH.ID = FFPD.PAYMENT_HEAD_ID
		   AND FFPD.PROJECT_CODE = FPH.PRO_CODE
		   AND FPH.CLERK_ID = SU.ID
		   AND FPH.ID=#{PROJECT_ID}
    </select>
    
    <select id="queryCardByClientInfo" parameterType="string" resultType="map">
    	select fcc.id CLIENT_ID from FIL_CUST_CLIENT fcc
    	where fcc.id = #{CLIENT_ID} and fcc.type='NP' and fcc.ID_CARD_TYPE in (1,4)
    </select>
    
    
    <select id="getDateMapByPaylistCode" parameterType="string" resultType="map">
		SELECT *
		  FROM (
			SELECT FRH.ID PAY_ID,
			       FRH.LEASE_PERIOD,
			       FRH.LEASE_TERM,
			       TSD.FLAG PAY_WAY,
			       TO_CHAR(FER.RECEIVE_DATE, 'yyyy-MM-dd') QS_DATE,
			       TO_CHAR(FPH.SIGNED_DATE, 'yyyy-MM-dd') QD_DATE,
			       TO_CHAR(FFP.REALITY_DATE, 'yyyy-MM-dd') FK_DATE,
			       COUNT(FBC.ID)
			  FROM Fil_Rent_Plan_Head_Max_v FRH
			  LEFT JOIN FIL_PROJECT_HEAD FPH
			    ON FRH.PROJECT_ID = FPH.ID
			  LEFT JOIN (SELECT *
			               FROM FIL_EQUIPMENT_SENDNOTICE FS
			              WHERE FS.ID IN (SELECT MAX(FS1.ID)
			                                FROM FIL_EQUIPMENT_SENDNOTICE FS1
			                               GROUP BY FS1.PROJECT_ID)) FES
			    ON FES.PROJECT_ID = FPH.ID
			  LEFT JOIN (SELECT *
			               FROM FIL_EQUIMENT_RECEIPT FR
			              WHERE FR.ID IN (SELECT MAX(FR1.ID)
			                                FROM FIL_EQUIMENT_RECEIPT FR1
			                               GROUP BY FR1.SENDNOTICE_ID)) FER
			    ON FES.ID = FER.SENDNOTICE_ID
			  LEFT JOIN FIL_BUY_CONTRACT FBC
			    ON FBC.PROJECT_ID = FPH.ID
			  LEFT JOIN FI_FUND_PAYMENT_DETAIL FPD
			    ON FPD.BUY_CONTRACT_ID = FBC.ID
			  LEFT JOIN FI_FUND_PAYMENT_HEAD FFP
			    ON FFP.ID = FPD.PAYMENT_HEAD_ID
			  LEFT JOIN FIL_PROJECT_SCHEME FPS
			    ON FPS.PROJECT_ID = FPH.ID
			  LEFT JOIN T_SYS_DATA_DICTIONARY TSD
			    ON TSD.CODE = FPS.PAY_WAY
			   AND TSD.TYPE = '支付方式'
			 WHERE FRH.PAYLIST_CODE = #{PAYLIST_CODE}
			 GROUP BY FRH.ID,
			          FRH.LEASE_PERIOD,
			          FRH.LEASE_TERM,
			          TSD.FLAG,
			          FER.RECEIVE_DATE,
			          FPH.SIGNED_DATE,
			          FFP.REALITY_DATE,
			          FFP.ID
			 ORDER BY FFP.REALITY_DATE nulls last,FER.RECEIVE_DATE,FPH.SIGNED_DATE  
		  )
		 WHERE ROWNUM = 1
	</select>
	<select id="getallVisiting" parameterType="string" resultType="int">
		SELECT COUNT(*)
		  FROM FIL_PROJECT_FILE FPF
		 WHERE FPF.TPM_BUSINESS_PLATE = '家访'
		   AND FPF.PARENT_ID IS NULL
		   AND FPF.PROJECT_ID=#{PROJECT_ID}
	</select>
	
	<select id="getUploadedVisiting" parameterType="string" resultType="int">
		SELECT COUNT(*)
		  FROM (SELECT PARENT_ID
		          FROM FIL_PROJECT_FILE
		         WHERE PARENT_ID IN (SELECT ID
		                               FROM FIL_PROJECT_FILE FPF
		                              WHERE FPF.TPM_BUSINESS_PLATE = '家访'
		                                AND FPF.PARENT_ID IS NULL
		                                AND FPF.PROJECT_ID = #{PROJECT_ID})
		         GROUP BY PARENT_ID)
	</select>
	<select id="selcfsbsf" parameterType="string" resultType="map">
		SELECT *
		  FROM FIL_PROJECT_SCHEME FPS,
		       (SELECT SCHEME_ID,VALUE_STR FROM FIL_SCHEME_CLOB WHERE KEY_NAME_EN = 'CFSB_SF') FSC
		 WHERE FPS.ID = FSC.SCHEME_ID(+)
		   AND FPS.PROJECT_ID = #{PROJECT_ID}

	</select>
	<update id="updcfsbsf" parameterType="map">
		UPDATE FIL_PROJECT_SCHEME SET CFSB=1 WHERE PROJECT_ID=#{PROJECT_ID}
		<if test="SCHEME_ID!=null and SCHEME_ID!=''"> AND ID=#{ID}</if>
	</update>
	<select id="queryProjectStatusNew" parameterType="map" resultType="map">
	  SELECT  T.*  FROM FIL_PROJECT_HEAD T WHERE   T.CLIENT_ID=(SELECT F.CLIENT_ID FROM FIL_PROJECT_HEAD  F WHERE F.ID= #{PROJECT_ID})
	</select>
</mapper>