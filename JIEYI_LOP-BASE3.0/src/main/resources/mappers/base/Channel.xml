<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="Channel">

	
	<select id="findSupFileUploads" parameterType="Map" resultType="Map">
	  SELECT F.FIL_ID,
	         F.FIL_NAME,
	         F.FIL_PATH,
	         F.FIL_MEMO,
	         F.SALE_ID,
	         F.CREATE_TIME,
	         F.SUP_ID,
	         F.FIL_TYPE 
	    FROM T_SUPPLIER_FILE F
	   WHERE F.SUP_ID = #{SUP_ID} 
     <if test="FIL_TYPE !=null and FIL_TYPE !=''"> and F.FIL_TYPE=#{FIL_TYPE}</if>
     <if test="APP_ID !=null and APP_ID !=''"> and F.APP_ID = #{APP_ID}</if>
	 <if test="APP_NAME !=null and APP_NAME !=''"> and F.APP_NAME =#{APP_NAME}</if>
	</select>
	
	<select id="getCreditFileUpLoads" parameterType="Map" resultType="Map">
	  SELECT F.FIL_ID,
	         F.FIL_NAME,
	         F.FIL_PATH,
	         F.FIL_MEMO,
	         F.SALE_ID,
	         F.CREATE_TIME,
	         F.SUP_ID,
	         F.FIL_TYPE 
	    FROM T_SUPPLIER_FILE F
	   WHERE F.SUP_ID = #{SUP_ID} 
     <if test="FIL_TYPE !=null and FIL_TYPE !=''"> 
       and F.FIL_TYPE IN <foreach collection="FIL_TYPE" close=")" open="(" separator="," item="item">#{item}</foreach>
     </if>
     <if test="APP_ID !=null and APP_ID !=''"> and F.APP_ID = #{APP_ID}</if>
	</select>
	
	<!-- 台量逾期率 
	-->
	<select id="getOverdueAmountMonth" parameterType="Map" resultType="Map">
		SELECT ROUND(DECODE(TTT.AMOUNT,0,0,TT.AMOUNT*100/TTT.AMOUNT),2) AMOUNT,TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}),'YYYY-MM') CUR_MONTH
		  ,TT.AMOUNT AMOUNT1,TTT.AMOUNT AMOUNT2
		  FROM (
			SELECT NVL(SUM(AMOUNT),0)  AMOUNT FROM 
			(
				SELECT T.COLUMN4 PRO_CODE,T.COLUMN46 AMOUNT 
				FROM FIL_REPORT_T101 T 
				WHERE T.SUP_ID = #{SUP_ID}  AND T.COLUMN16 ='逾期' 
				AND T.COLUMN21 &lt; TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01'  
				AND T.STATUS &gt;=20 
				AND NVL(T.COLUMN27,to_char(TO_DATE(#{CURR_DATE},'YYYY-MM-DD')+32,'YYYY-MM-DD')) &gt; = TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01' 
				GROUP BY T.COLUMN4,T.COLUMN46 
			)  
		)TT 
		FULL JOIN (
			SELECT NVL(SUM(T.AMOUNT),0)  AMOUNT
			      FROM FIL_PROJECT_HEAD  T 
			      LEFT JOIN (
			        SELECT E.PROJECT_ID,MAX(E.REALITY_DATE) REALITY_DATE 
			        FROM  VI_BASE_PROJ_END_CHANNEL E WHERE E.PROJECT_ID IS NOT NULL  GROUP BY E.PROJECT_ID 
			      ) EE ON T.ID = EE.PROJECT_ID 
			      WHERE T.SUP_ID = #{SUP_ID}  
			      AND T.STATUS &gt;=20 
			      AND (
			      	TO_CHAR(nvl(EE.REALITY_DATE,SYSDATE +32),'YYYY-MM-DD') 
						&gt;= TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01' 
			     	 AND  
						TO_CHAR(t.START_CONFIRM_DATE,'YYYY-MM-DD') 
						&lt; TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01' 
					) 
						
		) TTT ON 1=1  
	</select>
	<!-- 租金逾期率 
	-->
	<select id="getOverdueRentMonth" parameterType="Map" resultType="Map">
				
		SELECT ROUND(DECODE(TTT.RENT,0,0,TT.RENT*100/TTT.RENT),2) RENT,TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}),'YYYY-MM') CUR_MONTH
		  ,TT.RENT RENT1,TTT.RENT RENT2
		  FROM (
		
			SELECT NVL(SUM(T.COLUMN22 ),0) RENT 
			FROM FIL_REPORT_T101 T 
			WHERE T.SUP_ID = #{SUP_ID}   
			AND T.COLUMN16 ='逾期' 
			AND T.COLUMN21 &lt; TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01'  
			AND T.STATUS &gt;=20 
			AND NVL(T.COLUMN27,to_char(TO_DATE(#{CURR_DATE},'YYYY-MM-DD')+32,'YYYY-MM-DD')) &gt;=TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01' 
			
	    )TT FULL JOIN (
		
			SELECT NVL(SUM(T.COLUMN22 ),0) RENT 
			FROM FIL_REPORT_T101 T 
			WHERE T.SUP_ID = #{SUP_ID}  
			AND T.COLUMN16 ='逾期' 
			AND T.STATUS &gt;=20 
			AND ( T.COLUMN27 &gt;=TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01'  OR T.COLUMN27 IS NULL ) 
			
		) TTT ON 1=1  
	</select>
	<!-- 到期应收租金逾期率 
	-->
	<select id="getOverdueCurrRentMonth"  parameterType="Map" resultType="Map">
				
		SELECT ROUND(DECODE(TTT.RENT,0,0,TT.RENT*100/TTT.RENT),2) CUR_RENT,TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}),'YYYY-MM') CUR_MONTH  
		   ,TT.RENT RENT1,TTT.RENT RENT2
		   FROM (
		
			SELECT NVL(SUM(T.COLUMN22 ),0) RENT 
			FROM FIL_REPORT_T101 T 
			WHERE T.SUP_ID = #{SUP_ID}  
			AND T.COLUMN21 &lt; TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01'  
			AND T.STATUS &gt;=20 
			AND NVL(T.COLUMN27,to_char(TO_DATE(#{CURR_DATE},'YYYY-MM-DD')+32,'YYYY-MM-DD')) &gt;=TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01' 
		  )TT 
		FULL JOIN (
		
			SELECT NVL(SUM(T.COLUMN22 ),0) RENT 
			FROM FIL_REPORT_T101 T 
			WHERE T.SUP_ID = #{SUP_ID}  
			AND T.STATUS &gt;=20 
			AND NVL(T.COLUMN27,to_char(TO_DATE(#{CURR_DATE},'YYYY-MM-DD')+32,'YYYY-MM-DD')) &gt;=TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01'  
			AND T.COLUMN8 &lt; TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}+1),'YYYY-MM')||'-01' 
		) TTT ON 1=1  
	</select>
	<!-- 网银扣划率 -->
	<select id="getUKRAT"  parameterType="Map" resultType="Map">
		
		SELECT ROUND(DECODE(TTT.RENT,0,0,TT.RENT*100/TTT.RENT),2) UK_RAT,TT.RENT RENT1,TTT.RENT RENT2 FROM (
		    
		     SELECT NVL(SUM(T.COLUMN22 ),0) RENT  FROM FIL_REPORT_T101 T 
		     WHERE T.COLUMN17 ='网银' AND T.COLUMN29='已核销'  AND 
		     T.SUP_ID = #{SUP_ID}   AND T.STATUS >=20 
		     AND SUBSTR(T.COLUMN27,1,7) =TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}),'YYYY-MM') 
	         AND SUBSTR(T.COLUMN21, 1, 7) &lt;=
			 TO_CHAR(ADD_MONTHS(TO_DATE(#{CURR_DATE},'YYYY-MM-DD'), -${SQL_MONTH}), 'YYYY-MM')		 
	      )TT 
	    FULL JOIN (
	    
		     SELECT NVL(SUM(T.COLUMN22 ),0) RENT  FROM FIL_REPORT_T101 T 
		     WHERE T.COLUMN17 ='网银' AND 
		     T.SUP_ID = #{SUP_ID}   AND T.STATUS >=20 
		      AND SUBSTR(NVL(T.COLUMN27,TO_CHAR(TO_DATE(#{CURR_DATE},'YYYY-MM-DD')+32,'YYYY-MM')),1,7)  >=TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}),'YYYY-MM') 
		     AND SUBSTR(T.COLUMN21,1,7) &lt;=TO_CHAR(ADD_MONTHS (TO_DATE(#{CURR_DATE},'YYYY-MM-DD'),-${SQL_MONTH}),'YYYY-MM') 
		) TTT ON 1=1
	</select>
	
	<!-- 当月承租人占比 -->
		<select id="getCurrMonthCustRat" parameterType="Map" resultType="Map">
		
	  SELECT 
           ROUND(ZJ.XZWYSS / (DECODE(ZJ.XZSS, 0, 1, ZJ.XZSS))*100,2)    CUSTRAT ,ZJ.XZWYSS rent1, ZJ.XZSS rent2,
           ZJ.ID SUP_ID
      FROM (
			SELECT 
                 (SELECT NVL(SUM(SA.REALY_MONEY),0) FROM V_SPLIT_ACCOUNT_RENT SA  
                 WHERE  SA.FLAG NOT  IN('提前还租','设备回购','违约金') AND  SA.RENT_TYPE = '租金' 
                 AND  TRUNC(TO_DATE(SA.RECE_DATE,'YYYY-MM-DD'),'month')   =  TRUNC(add_months(SYSDATE,-${SQL_MONTH}),'month')   
                 AND  TRUNC(TO_DATE(SA.FI_ACCOUNT_DATE,'YYYY-MM-DD'),'month')   =  TRUNC(add_months(SYSDATE,-${SQL_MONTH}),'month') 
                 AND SA.SUP_ID = T.SUP_ID)  XZSS,
                 (SELECT NVL(SUM(SA.REALY_MONEY),0) FROM V_SPLIT_ACCOUNT_RENT SA  
                 WHERE  SA.FLAG  IN('租金-网银','租金-非网银','保证金结清抵扣-承租人') AND  SA.RENT_TYPE = '租金' 
                 AND  TRUNC(TO_DATE(SA.RECE_DATE,'YYYY-MM-DD'),'month')   =  TRUNC(add_months(SYSDATE,-${SQL_MONTH}),'month')   
                 AND  TRUNC(TO_DATE(SA.FI_ACCOUNT_DATE,'YYYY-MM-DD'),'month')   =  TRUNC(add_months(SYSDATE,-${SQL_MONTH}),'month') 
                 AND SA.SUP_ID = T.SUP_ID)  XZWYSS,
                 T.SUP_ID ID
            FROM FIL_REPORT_T101 T WHERE T.STATUS >= 20 AND t.SUP_ID  =#{SUP_ID}
           GROUP BY T.SUP_ID
      ) ZJ   
	</select>
	
	<insert id="addSupFileUpload" parameterType="Map">
	INSERT INTO T_SUPPLIER_FILE
	  (
	    FIL_ID
	    <if test="FIL_NAME !=null and FIL_NAME !=''">,FIL_NAME</if>
	    <if test="FIL_PATH !=null and FIL_PATH !=''">,FIL_PATH</if>
	    ,CREATE_TIME
	    <if test="SALE_ID !=null and SALE_ID !=''">,SALE_ID</if>
	    <if test="SUP_ID !=null and SUP_ID !=''">,SUP_ID</if>
	    <if test="FIL_MEMO !=null and FIL_MEMO !=''">,FIL_MEMO</if>
	    <if test="FIL_TYPE !=null and FIL_TYPE !=''">,FIL_TYPE</if>
	    <if test="APP_ID !=null and APP_ID !=''">,APP_ID</if>
	    <if test="APP_NAME !=null and APP_NAME !=''">,APP_NAME</if>
	  )
	  VALUES
	  (
	    SEQ_T_SUPPLIER_FILE.NEXTVAL
	    <if test="FIL_NAME !=null and FIL_NAME !=''">,#{FIL_NAME}</if>
	    <if test="FIL_PATH !=null and FIL_PATH !=''">,#{FIL_PATH}</if>
	    ,SYSDATE
	    <if test="SALE_ID !=null and SALE_ID !=''">,#{SALE_ID}</if>
	    <if test="SUP_ID !=null and SUP_ID !=''">,#{SUP_ID}</if>
	    <if test="FIL_MEMO !=null and FIL_MEMO !=''">,#{FIL_MEMO}</if>
	    <if test="FIL_TYPE !=null and FIL_TYPE !=''">,#{FIL_TYPE}</if>
	    <if test="APP_ID !=null and APP_ID !=''">,#{APP_ID}</if>
	    <if test="APP_NAME !=null and APP_NAME !=''">,#{APP_NAME}</if>
	    
	  )
	
	</insert>
	<select id="findDupFileByID" parameterType="Map" resultType="Map">
	 SELECT F.FIL_ID,
	         F.FIL_NAME,
	         F.FIL_PATH,
	         F.FIL_MEMO,
	         F.SALE_ID,
	         F.CREATE_TIME,
	         F.SUP_ID,
	         F.FIL_TYPE
	    FROM T_SUPPLIER_FILE F
	   WHERE F.FIL_ID = #{FIL_ID}
	</select>
	<delete id="deleteSupFile" parameterType="Map">
	 DELETE FROM T_SUPPLIER_FILE F WHERE F.FIL_ID = #{FIL_ID}
	</delete>	
	
	<select id="getInvestsByType" parameterType="Map" resultType="Map">
	   SELECT SUPIV.ID,
			  SUPIV.INVEST_NAME,
			  SUPIV.INVEST_LEGAL_NAME,
			  SUPIV.INVEST_TYPE,
			  SUPIV.INVEST_SEX,
			  SUPIV.INVEST_ID_CARD,
			  SUPIV.INVEST_MONEY,
			  SUPIV.INVEST_STOCK,
			  SUPIV.INVEST_ADDR,
			  SUPIV.INVEST_PHONE,
			  SUPIV.INVEST_ORG_CODE,
			  SUPIV.INVEST_DUTY,
			  SUPIV.CREATE_DATE,
			  SUPIV.SALE_ID,
			  SUPIV.SUP_ID
	     FROM T_SUPPLIER_INVEST SUPIV
	    WHERE 1=1
	    <if test="ID !=null and ID !=''">AND SUPIV.ID = #{ID}</if>
	    AND SUPIV.SUP_ID = #{SUP_ID}
	    AND SUPIV.INVEST_TYPE = #{INVEST_TYPE} 
	</select>
	
	<select id="getLinkManList" parameterType="Map" resultType="Map">
	   SELECT SL.LINK_ID,
			  SL.LINK_NAME,
			  SL.LINK_IDCARD,
			  SL.LINK_PHONE,
			  SL.LINK_MOBILE,
			  SL.LINK_EMAIL,
			  SL.LINK_ADDR,
			  SL.CREATE_TIME,
			  SL.SALE_ID,
			  SL.SUP_ID 
	     FROM T_SUPPLIER_LINKMAN SL 
	    WHERE SL.SUP_ID = #{SUP_ID}
	</select>
	
	<select id="selectArea" parameterType="Map" resultType="Map">
	  SELECT QU.ID,QU.NAME,QU.PARENT_ID,QU.LESSEE_AREA  FROM T_SYS_AREA QU WHERE QU.PARENT_ID IS NULL
	</select>
	
	<select id="getOneSupp" parameterType="Map" resultType="Map">
	   SELECT SUP.SUP_ID,
	          SUP.SCODE,
			  SUP.SUP_FLAG,
			  SUP.SUP_CODE,
			  SUP.SUP_NAME,
			  SUP.SUP_SHORTNAME,
			  SUP.COMPANY_ID,
			  COM.COMPANY_NAME,
			  SUP.CORP_BUSINESS_LICENSE,
			  SUP.SUP_ADDRESS,
			  SUP.SUP_FAX,
			  SUP.SUP_ZIP,
			  SUP.ORAGNIZATION_CODE,
			  SUP.TAX_CODE,
			  TO_CHAR(SUP.SETUP_DATE,'YYYY-MM-DD') SETUP_DATE,
			  TO_CHAR(SUP.PERIOD_VALIDITY,'YYYY-MM-DD') PERIOD_VALIDITY,
			  SUP.REGISTE_CAPITAL,
			  SUP.PAICLUP_CAPITAL,
			  SUP.BUSINESS_RANGE,
			  SUP.SUP_WEBSITE,
			  SUP.SUP_MANAGER,
			  SUP.PRO_INDUSTRY,
			  SUP.IS_REPO,
			  SUP.AREA_ID,
			  (SELECT AR.NAME FROM T_SYS_AREA AR WHERE AR.ID=SUP.AREA_ID) AREA_NAME,
			  SUP.PROV_ID,
			  (SELECT AR.NAME FROM T_SYS_AREA AR WHERE AR.ID=SUP.PROV_ID) PROV_NAME,
			  SUP.CITY_ID,
			  (SELECT AR.NAME FROM T_SYS_AREA AR WHERE AR.ID=SUP.CITY_ID) CITY_NAME,
			  TO_CHAR(SUP.SIGN_DATE,'YYYY-MM-DD') SIGN_DATE,
			  SUP.OPEN_BANK,
			  SUP.OPEN_BANK_NUMBER,
			  SUP.SUP_LEGAL_NAME,
			  SUP.SUP_LEGAL_PHONE,
			  SUP.SUP_LEGAL_MOBIL,
			  SUP.SUB_LEGAL_ADDRESS,
			  SUP.SUB_LEGAL_EMAIL,
			  SUP.SUP_LEGAL_IDCARD,
			  SUP.BILL_ADDRESS,
			  SUP.BILL_PHONE,
			  getDictShortnameByCode('纳税资质',SUP.TAX_QUAL) TAX_QUAL,
			  SUP.TAX_IDEN_NUM,
			  SUP.EMS_TO_NAME,
			  SUP.EMS_TO_ADDRESS,
			  SUP.EMS_TO_PHONE,
			  SUP.EMS_TO_ZIP,
			  SUP.LOANS_OWN_UNIT,
			  SUP.LOANS_OWN_ADDR,
			  SUP.LOANS_OWN_BANK,
			  SUP.LOANS_OWN_ACCOUNT,
			  SUP.LOANS_TOTAL_UNIT,
			  SUP.LOANS_TOTAL_ADDDR,
			  SUP.LOANS_TOTAL_BANK,
			  SUP.LOANS_TOTAL_ACCOUNT,
			  SUP.LOANS_COMPANY_UNIT,
			  SUP.LOANS_COMPANY_ADDR,
			  SUP.LOANS_COMPANY_BANK,
			  SUP.LOANS_COMPANY_ACCOUNT,
			  SUP.SUB_SCORE,
			  SUP.FILE_NUMBER,
			  SUP.USER_ID,
			  SUP.CREATE_DATE,
			  SUP.SUP_LEVEL,
			  NVL(SUP.SUP_SWITCH,0) SUP_SWITCH,
			  NVL(SUP.CREDIT_SWITCH,0) CREDIT_SWITCH,
			  NVL(SUP.PAYMENT_SWITCH,0) PAYMENT_SWITCH, 
			  NVL(SUP.BALANCE_LOAN_SWITCH,0) BALANCE_LOAN_SWITCH,
			  NVL(SUP.IRREGULAR_REPAYMENT_SWITCH,0) IRREGULAR_REPAYMENT_SWITCH,
			  NVL(SUP.B_MODEL_SWITCH,0) B_MODEL_SWITCH,
			  NVL(SUP.SMS_SWITCH,0) SMS_SWITCH,
			  --SUP.STATUS,
			  CH.INITIAL_AMOUNT,
			  CH.STANDARD_AMOUNT,
			  CH.ASSURE_AMOUNT,
			  CH.SINGLE_AMOUNT,
			  CH.STATUS ,
			  CH.APPLY_STATUS
		 FROM T_SYS_SUPPLIERS SUP,
		      T_SYS_COMPANY COM,
		      T_CREDIT_CHANNEL CH 
		WHERE SUP.COMPANY_ID = COM.COMPANY_ID(+)
			AND SUP.SUP_ID = CH.SUP_ID(+)
		<if test="SUP_ID !=null and SUP_ID !=''">AND SUP.SUP_ID = #{SUP_ID}</if>
		<if test="SUP_NAME !=null and SUP_NAME !=''">AND (SUP.SUP_NAME LIKE  '%${SUP_NAME}%' OR  SUP.SUP_SHORTNAME LIKE  '%${SUP_NAME}%')</if>
	</select>	
	
	<insert id="updatestat" parameterType="Map">
		UPDATE T_CREDIT_CHANNEL_APPLY t 
		SET 
		<if test="advicelimit !=null and advicelimit !=''">t.APPLY_AMOUNT = ${advicelimit} , </if>
		<if test="adviceamplification !=null and adviceamplification !=''">t.ENLARGE_MULTIPLE = ${adviceamplification} , </if>
		<if test="realyassets !=null and realyassets !=''">t.REAL_OPERATIONS_ASSETS = ${realyassets} , </if>
		<if test="instructions !=null and instructions !=''">t.APPLY_EXPLAIN = #{instructions}, </if>
		<if test="AVG_AMOUNT !=null and AVG_AMOUNT !=''">t.TAI_OVERDUE_RATE = ${AVG_AMOUNT} , </if>
		<if test="AVG_CUR_RENT !=null and AVG_CUR_RENT !=''">t.RECERENT_OVERDUE_RATE = ${AVG_CUR_RENT} , </if>
		<if test="AVG_RENT !=null and AVG_RENT !=''">t.RENT_OVERDUE_RATE = ${AVG_RENT} , </if>
		<if test="AVG_UK_RAT !=null and AVG_UK_RAT !=''">t.ONLINEBANK_DEDUCT_RATE = ${AVG_UK_RAT}  , </if>
		<if test="AVG_MONTH !=null and AVG_MONTH !=''">t.CUR_MONTH = #{AVG_MONTH}  , </if>
		<if test="APPLY_STATUS !=null and APPLY_STATUS !=''">t.APPLY_STATUS = #{APPLY_STATUS}  , </if>
		<if test="CONFIRM_DATE !=null and CONFIRM_DATE !=''">t.CONFIRM_DATE = trunc(sysdate)  , </if>
		<if test="USERNAME !=null and USERNAME !=''">t.CONFIRM_USER = #{USERNAME}  , </if>
		<if test="END_DATE !=null and END_DATE !=''">t.END_DATE = trunc(sysdate)  , </if>
		<if test="STATUS !=null and STATUS !=''">t.STATUS = ${STATUS}  , </if>
		<if test="netasset !=null and netasset !=''">t.NETASSET = ${netasset}  , </if>
		<if test="unrecyclableAsset !=null and unrecyclableAsset !=''">t.UNRECYCLABLEASSET = ${unrecyclableAsset}  , </if>
		<if test="badDebt !=null and badDebt !=''">t.BADDEBT = ${badDebt}  , </if>
		<if test="scoreSum !=null and scoreSum !=''">t.SCORESUM = ${scoreSum}  , </if>
		<if test="descripSum !=null and descripSum !=''">t.DESCRIPSUM = #{descripSum}  , </if>
		<if test="riskDesc !=null and riskDesc !=''">t.RISKDESC = #{riskDesc}  , </if>
		<if test="creditAdvice !=null and creditAdvice !=''">t.CREDITADVICE = ${creditAdvice}  , </if>
		<if test="channelCreditAdvice !=null and channelCreditAdvice !=''">t.CHANNELCREDITADVICE = ${channelCreditAdvice}  , </if>
		<if test="score_id !=null and score_id !=''">t.SCORE_ID = ${score_id}  , </if>
		<if test="SCORESUMBZ !=null and SCORESUMBZ !=''">t.SCORESUMBZ = ${SCORESUMBZ}  , </if>
		<if test="operating_assets !=null and operating_assets !=''">t.operating_assets = ${operating_assets}  , </if>
		<if test="evaluation_guarantee !=null and evaluation_guarantee !=''">t.evaluation_guarantee = ${evaluation_guarantee}  , </if>
		<if test="non_performing_assets !=null and non_performing_assets !=''">t.non_performing_assets = ${non_performing_assets}  , </if>
		<if test="eliminate_assets !=null and eliminate_assets !=''">t.eliminate_assets = ${eliminate_assets}  , </if>
		<if test="actual_controller !=null and actual_controller !=''">t.actual_controller = ${actual_controller}  , </if>
		<if test="actual_operating_assets !=null and actual_operating_assets !=''">t.actual_operating_assets = ${actual_operating_assets}  , </if>
		t.id = ${APP_ID}
		where t.id = ${APP_ID}
	</insert>
	
	<insert id="insertCreditApp"  parameterType="Map"> 
		INSERT INTO  T_CREDIT_CHANNEL_APPLY (
			ID,CREDIT_ID,SUP_ID,APPLY_TYPE,ASSURE_TYPE,ASSURE_MONEY,ASSURE_PAYMENT_MODE,
			enlarge_multiple,apply_amount,REAL_OPERATIONS_ASSETS,APPLY_EXPLAIN,apply_time,apply_user,
			apply_status,status
		)
		SELECT ${SQL_ID},
		c.CREDIT_ID,t.SUP_ID,#{APP_TYPE},'','','',c.EXPAND_MULTIPLE,0,0,'',SYSDATE,#{USERNAME},0,0
		from T_SYS_SUPPLIERS t 
		LEFT JOIN T_CREDIT_CHANNEL c ON t.SUP_ID = c.SUP_ID 
		WHERE t.SUP_ID = #{SUP_ID} 
		AND NOT EXISTS (SELECT 1 from T_CREDIT_CHANNEL_APPLY tc WHERE tc.SUP_ID = #{SUP_ID}  AND tc.STATUS=0 AND tc.APPLY_TYPE IN(1,2,3)) 
	</insert>
	<update id="updateCredit" parameterType="Map">
		UPDATE T_CREDIT_CHANNEL t SET 
		
			t.apply_status = '-1'
		<if test="INITIAL_AMOUNT !=null and INITIAL_AMOUNT !=''">
			,t.INITIAL_AMOUNT = ${INITIAL_AMOUNT} 
		</if>
		<if test="STANDARD_AMOUNT !=null and STANDARD_AMOUNT !=''">
			,t.STANDARD_AMOUNT = ${STANDARD_AMOUNT}
		</if>
		<if test="STANDARD_AMOUNT1 !=null and STANDARD_AMOUNT1 !=''">
			,t.STANDARD_AMOUNT = ${STANDARD_AMOUNT1}*10000+NVL(t.STANDARD_AMOUNT,0)
		</if>
		<if test="EXPAND_MULTIPLE !=null and EXPAND_MULTIPLE !=''">
			,t.EXPAND_MULTIPLE = ${EXPAND_MULTIPLE}
		</if>
		<if test="STATUS !=null and STATUS !=''">
			,t.STATUS = ${STATUS} 
		</if>
		
		WHERE t.CREDIT_ID IN (
		      SELECT tt.CREDIT_ID from T_CREDIT_CHANNEL_APPLY tt WHERE tt.id = #{APP_ID}
		) 
	</update>
	<select id="selectCredit" parameterType="Map"  resultType="Map">
		select tt.*,getdictdatabycode('授信申请单类型',tt.APPLY_TYPE) APPLY_NAME from T_CREDIT_CHANNEL_APPLY tt WHERE tt.id = #{APP_ID}
	</select>
	
	<update id="updateCreditStatus" parameterType="map" >
		UPDATE T_CREDIT_CHANNEL t SET t.APPLY_STATUS =  #{APPLY_STATUS}  WHERE t.SUP_ID =#{SUP_ID}
	</update>
	<!-- 根据供应商id type获取申请单信息 -->
	<select id="getCreditApp"  parameterType="Map"  resultType="Map">
		select * from T_CREDIT_CHANNEL_APPLY tt WHERE tt.sup_id = #{SUP_ID} and tt.APPLY_TYPE=#{APP_TYPE} and tt.end_date is null and tt.status = 0
	</select>
	
	<!-- 更新jbpmid -->
	<update id="updateJbpmId" parameterType="map">
		update T_CREDIT_CHANNEL_APPLY t set t.jbpmId = #{JBPMID} where t.id = ${APP_ID}
	</update>
	
	
	
	<!-- 保证金核销 -->
	<select id="getFundPageData" parameterType="map" resultType="map">
		SELECT f.id,c.SUP_ID,f.SUP_NAME,f.FUND_NAME,c.ASSURE_AMOUNT, f.PLAN_AMT,
			decode(f.ASSURE_PAYMENT_MODE,'1','后付','0','先付') ASSURE_PAYMENT_MODE,
			f.EXPAND_MULTIPLE,f.ASSURE_AMOUNT_HIST
		from T_CREDIT_CHANNEL_APPLY t
		LEFT JOIN FI_CREDIT_CHANNEL_FUND f ON t.id = f.APP_ID 
		LEFT JOIN T_CREDIT_CHANNEL c ON t.CREDIT_ID = c.CREDIT_ID 
		WHERE t.APPLY_TYPE = '4'  AND t.ASSURE_TYPE = '1' AND t.ASSURE_PAYMENT_MODE IN ('0','1') 
		AND f.STATUS = '0' and f.hexiao_date is null
		<if test="SUP_NAME !=null and SUP_NAME !=''">
			and f.SUP_NAME like '%'||#{SUP_NAME}||'%'
		</if>
	</select>
	<select id="getFundPageDataCount" parameterType="map" resultType="int">
		SELECT count(1) amount
		from T_CREDIT_CHANNEL_APPLY t
		LEFT JOIN FI_CREDIT_CHANNEL_FUND f ON t.id = f.APP_ID 
		LEFT JOIN T_CREDIT_CHANNEL c ON t.CREDIT_ID = c.CREDIT_ID 
		WHERE t.APPLY_TYPE = '4'  AND t.ASSURE_TYPE = '1' AND t.ASSURE_PAYMENT_MODE IN ('0','1') 
		AND f.STATUS = '0'
		<if test="ID !=null and ID !=''">
			and f.id  = ${ID}
		</if>
	</select>
	
	<!-- 保证金核销 -->
	<select id="getFundPageProData" parameterType="map" resultType="map">
		SELECT f.id,c.SUP_ID,f.SUP_NAME,f.FUND_NAME,c.ASSURE_AMOUNT, f.PLAN_AMT,
			decode(f.ASSURE_PAYMENT_MODE,'1','后付','0','先付') ASSURE_PAYMENT_MODE,
			f.EXPAND_MULTIPLE,f.ASSURE_AMOUNT_HIST
		from T_CREDIT_CHANNEL_APPLY t
		LEFT JOIN FI_CREDIT_CHANNEL_FUND f ON t.id = f.APP_ID 
		LEFT JOIN T_CREDIT_CHANNEL c ON t.CREDIT_ID = c.CREDIT_ID 
		WHERE t.APPLY_TYPE = '4'  AND t.ASSURE_TYPE = '1' AND t.ASSURE_PAYMENT_MODE IN ('0','1') 
		AND f.STATUS = '0' and f.hexiao_date is null
		<if test="SUP_NAME !=null and SUP_NAME !=''">
			and f.SUP_NAME like '%'||#{SUP_NAME}||'%'
		</if>
		<if test="SUP_ID !=null and SUP_ID !=''">
			and f.SUP_ID like '%'||#{SUP_ID}||'%'
		</if>
		<if test="APP_ID !=null and APP_ID !=''">
			and t.ID like '%'||#{APP_ID}||'%'
		</if>
		<if test="ASSURE_PAYMENT_MODE !=null and ASSURE_PAYMENT_MODE !=''">
			and f.ASSURE_PAYMENT_MODE=#{ASSURE_PAYMENT_MODE}
		</if>
	</select>
	<select id="getFundPageProDataCount" parameterType="map" resultType="int">
		SELECT count(1) amount
		from T_CREDIT_CHANNEL_APPLY t
		LEFT JOIN FI_CREDIT_CHANNEL_FUND f ON t.id = f.APP_ID 
		LEFT JOIN T_CREDIT_CHANNEL c ON t.CREDIT_ID = c.CREDIT_ID 
		WHERE t.APPLY_TYPE = '4'  AND t.ASSURE_TYPE = '1' AND t.ASSURE_PAYMENT_MODE IN ('0','1') 
		AND f.STATUS = '0'
		<if test="ID !=null and ID !=''">
			and f.id  = ${ID}
		</if>
		<if test="SUP_ID !=null and SUP_ID !=''">
			and f.SUP_ID like '%'||#{SUP_ID}||'%'
		</if>
		<if test="APP_ID !=null and APP_ID !=''">
			and t.ID like '%'||#{APP_ID}||'%'
		</if>
		<if test="ASSURE_PAYMENT_MODE !=null and ASSURE_PAYMENT_MODE !=''">
			and f.ASSURE_PAYMENT_MODE=#{ASSURE_PAYMENT_MODE}
		</if>
	</select>
	<!-- 资金池信息 -->
	<select id="getPoolInfo"  parameterType="Map" resultType="Map">
	 	SELECT nvl(SUM(fdp.CANUSE_MONEY),0)  sum_amt 
		FROM FI_DEPOSIT_POOL FDP 
		LEFT JOIN FIL_PROJECT_HEAD p ON fdp.PRO_CODE = p.PRO_CODE 
		WHERE fdp.TYPE =#{POOLID} AND 
		fdp.STATUS =1 AND 
		p.SUP_ID = #{SUP_ID} AND fdp.RE_ID IS NULL 
	 </select>
	 <insert id="insertApplyInfo" parameterType="map" >
		INSERT INTO FI_CREDIT_CHANNEL_FUND_APPLY 
		(ID,pay_id,status,plan_date,plan_amt,creator,create_date,fact_date,fact_amt,bank,payee,hexiao_bank,HEXIAO_ID,HEXIAO_date)
		SELECT #{SQL_ID} ID,to_char(SYSDATE,'yyyy-mm-dd') pay_id,
			#{STATUS},NULL,t.plan_amt,t.creator,SYSDATE,to_date(#{FI_ACCOUNT_DATE},'yyyy-mm-dd'),t.plan_amt,#{FI_PAY_BANK},
			#{FI_TO_THE_PAYEE},#{FI_REALITY_BANK},#{USERNAME},trunc(sysdate)
		from FI_CREDIT_CHANNEL_FUND t WHERE t.id = #{ID}  
	 </insert>
	 <update id="updateFund" parameterType="map" >
	 	UPDATE FI_CREDIT_CHANNEL_FUND t set t.pay_id=#{SQL_ID},t.hexiao_id=#{USERNAME},t.hexiao_date=to_date(#{FI_ACCOUNT_DATE},'yyyy-mm-dd'),
	 		t.fact_amt=#{FI_REALITY_MONEY},t.cur_amt = #{FI_REALITY_MONEY},t.ASSURE_AMOUNT= ${FI_REALITY_MONEY}*t.EXPAND_MULTIPLE
	 	WHERE t.id = #{ID}  
	 </update>
	 <!-- 插入account -->
	 <insert id="insertIntoAccount" parameterType="map">
	 	INSERT INTO FI_CREDIT_CHANNEL_FUND_account 
		(id,app_id
		<if test="POOL_ID !=null and POOL_ID !=''">
			,pool_id
		</if>
		<if test="FI_REALITY_ACCOUNT !=null and FI_REALITY_ACCOUNT !=''">
			,used_amt
		</if>
		<if test="FUND_TYPE !=null and FUND_TYPE !=''">
			,fund_type
		</if>
		)
		SELECT SEQ_FI_CREDIT_CHANNEL_F_AC.NEXTVAL,
		${SQL_ID}
		<if test="POOL_ID !=null and POOL_ID !=''">
			,${POOL_ID}
		</if>
		<if test="FI_REALITY_ACCOUNT !=null and FI_REALITY_ACCOUNT !=''">
			,${FI_REALITY_ACCOUNT}
		</if>
		<if test="FUND_TYPE !=null and FUND_TYPE !=''">
			,#{FUND_TYPE} 
		</if>
		FROM dual 
	 </insert>
	 <update id="updatePoolById" parameterType="map">
	 	update FI_DEPOSIT_POOL t set t.CANUSE_MONEY=${CANUSE_MONEY}   where t.pool_id = ${POOL_ID}
	 </update>
	 <select id="getPoolDetail" parameterType="map" resultType="map">
		SELECT fdp.* 
		FROM FI_DEPOSIT_POOL FDP 
		LEFT JOIN FIL_PROJECT_HEAD p ON fdp.PRO_CODE = p.PRO_CODE 
		WHERE fdp.TYPE = #{POOLID} AND 
		fdp.STATUS =1 AND 
		p.SUP_ID = #{SUP_ID} AND fdp.RE_ID IS NULL 
		ORDER BY fdp.THAW_TIME DESC
	 </select>
	 
	 <insert id="addChannelFundMess" parameterType="Map">
	  INSERT INTO FI_CREDIT_CHANNEL_FUND
	   (ID
	   ,SUP_ID
	   ,SUP_NAME
	   ,FUND_TYPE
	   ,FUND_NAME
	   ,STATUS
	   ,CREATOR
	   ,CREATE_DATE
	   <if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
	   ,PLAN_AMT
	   ,PLAN_DATE
	   <if test="REMARK !=null and REMARK !=''">,REMARK</if>
	   ,APP_ID
	   ,ASSURE_PAYMENT_MODE
	   ,RE_AMT
	   ,CUR_AMT
	   ,EXPAND_MULTIPLE
	   <if test="ASSURE_AMOUNT !=null and ASSURE_AMOUNT !=''">,ASSURE_AMOUNT</if>
	   <if test="ASSURE_AMOUNT_HIST !=null and ASSURE_AMOUNT_HIST !=''">,ASSURE_AMOUNT_HIST</if>
	   )
	 VALUES
	   (
	   SEQ_FI_CREDIT_CHANNEL_FUND.NEXTVAL
	   ,#{SUP_ID}
	   ,#{SUP_NAME}
	   ,#{FUND_TYPE}
	   ,#{FUND_NAME}
	   ,#{STATUS}
	   ,#{CREATOR}
	   ,SYSDATE
	   <if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
	   ,#{PLAN_AMT}
	   ,SYSDATE
	   <if test="REMARK !=null and REMARK !=''">,#{REMARK}</if>
	   ,#{APP_ID}
	   ,#{ASSURE_PAYMENT_MODE}
	   ,0
	   ,#{CUR_AMT}
	   ,#{EXPAND_MULTIPLE}
	   <if test="ASSURE_AMOUNT !=null and ASSURE_AMOUNT !=''">,#{ASSURE_AMOUNT}</if>
	   <if test="ASSURE_AMOUNT_HIST !=null and ASSURE_AMOUNT_HIST !=''">,#{ASSURE_AMOUNT_HIST}</if>
	   ) 
	 </insert>
	 
	 <update id="updateChannelFund" parameterType="Map">
		 UPDATE FI_CREDIT_CHANNEL_FUND
	      SET ID = #{FUND_ID}
	          <if test="STATUS !=null and STATUS !=''">,STATUS = #{STATUS}</if>
	          <if test="HEXIAO_ID !=null and HEXIAO_ID !=''">,HEXIAO_ID = #{HEXIAO_ID}</if>
	          <if test="HEXIAO_DATE !=null and HEXIAO_DATE !=''">,HEXIAO_DATE = #{HEXIAO_DATE}</if>
	          <if test="FACT_AMT !=null and FACT_AMT !=''">,FACT_AMT =#{FACT_AMT}</if>
	          <if test="FACT_DATE !=null and FACT_DATE !=''">,FACT_DATE = #{FACT_DATE}</if>
	          <if test="REMARK !=null and REMARK !=''">,REMARK = #{REMARK}</if>
	          <if test="APP_ID !=null and APP_ID !=''">,APP_ID = #{APP_ID}</if>
	          <if test="ASSURE_PAYMENT_MODE !=null and ASSURE_PAYMENT_MODE !=''">,ASSURE_PAYMENT_MODE = #{ASSURE_PAYMENT_MODE}</if>
	          <if test="RE_ID !=null and RE_ID !=''">,RE_ID = #{RE_ID}</if>
	          <if test="RE_DATE !=null and RE_DATE !=''">,RE_DATE = #{RE_DATE}</if>
	          <if test="RE_AMT !=null and RE_AMT !=''">,RE_AMT = #{RE_AMT}</if>
	          <if test="CUR_AMT !=null and CUR_AMT !=''">,CUR_AMT = #{CUR_AMT}</if>
	          <if test="EXPAND_MULTIPLE !=null and EXPAND_MULTIPLE !=''">,EXPAND_MULTIPLE = #{EXPAND_MULTIPLE}</if>
	          <if test="ASSURE_AMOUNT !=null and ASSURE_AMOUNT !=''">,ASSURE_AMOUNT = #{ASSURE_AMOUNT}</if>
	          <if test="ASSURE_AMOUNT_HIST !=null and ASSURE_AMOUNT_HIST !=''">,ASSURE_AMOUNT_HIST = #{ASSURE_AMOUNT_HIST}</if>
	    WHERE ID = #{FUND_ID}
	 </update>
	 <!-- 删除打分卡 -->
	 <delete id="deleteCreditScoreByAppid" parameterType="Map" >
	 	delete from t_credit_channel_score t where t.app_id= ${APP_ID}
	 </delete>
	 <insert id="insertCreditScore" parameterType="Map">
	 	insert into t_credit_channel_score (ID,MODEL,NAME,EN_NAME,SCORE,DESCRIP,APP_ID,SCORE_SUM) 
	 	select ${SCORE_ID},#{MODEL},#{NAME},#{EN_NAME},${SCORE},#{DESCRIP},${APP_ID},${SCORE_SUM} from dual 
	 </insert>
	 <select id="selectCreditScore" parameterType="Map" resultType="Map">
	 	select * from t_credit_channel_score t where t.app_id= ${APP_ID}
	 </select>
</mapper>