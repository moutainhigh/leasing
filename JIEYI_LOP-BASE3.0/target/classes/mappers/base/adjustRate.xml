<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="adjustRate">
	
	<select id="queryNewBaseRate" resultType="string">
	SELECT TO_CHAR(MAX(T.ADJUST_TIME),'YYYY-MM-DD')ADJUST_TIME FROM T_SYS_RATE T
	</select>
	
	<select id="queryAdjustRateList" parameterType="map" resultType="map">
		SELECT TTT.*
		  FROM (SELECT TT.*, ROWNUM RN
		          FROM (SELECT *
		                  FROM (SELECT MAX(T.DEPEND_TIME) DEPEND_TIME,
		                               TO_CHAR(MIN(T.CREATE_DATE), 'YYYY-MM-DD HH24:MI:SS') CREATE_DATE,
		                               COUNT(1) ALLCOUNT,
		                               COUNT(DECODE(T.TYPE_, '1', T.PAYLIST_CODE)) FAILCOUNT,
		                               COUNT(DECODE(T.TYPE_, '0', T.PAYLIST_CODE)) SUCCESSCOUNT,
		                               COUNT(DECODE(T.STATUS, '1', T.PAYLIST_CODE)) HFCOUNT,
		                               BATCH,
		                               MAX(T.CREATE_NAME) CREATE_NAME,
		                               MAX(T.STATUS) STATUS,
		                               MAX(T.ADJUST_DATE) ADJUST_DATE
		                          FROM FIL_RENT_UPDATE_INTEREST T
		                         GROUP BY T.BATCH)
		                 ORDER BY CREATE_DATE DESC) TT
		         WHERE ROWNUM &lt;= #{PAGE_END}) TTT
		 WHERE TTT.RN >= #{PAGE_BEGIN}
	</select>
	
	<select id="queryAdjustRateCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
		  FROM (SELECT MAX(T.DEPEND_TIME) DEPEND_TIME,
		               TO_CHAR(MAX(T.CREATE_DATE), 'YYYY-MM-DD') CREATE_DATE,
		               COUNT(1) ALLCOUNT,
		               COUNT(DECODE(T.TYPE_, '1', T.PAYLIST_CODE)) FAILCOUNT,
		               COUNT(DECODE(T.TYPE_, '0', T.PAYLIST_CODE)) SUCCESSCOUNT
		          FROM FIL_RENT_UPDATE_INTEREST T
		         GROUP BY T.BATCH)
	</select>
	
	<select id="showAdjustDetail" parameterType="map" resultType="map">
		SELECT T.PAYLIST_CODE,
		       T.ID,
		       T.START_TERM,
		       T.SYZJ,
		       T.TYPE_,
		       T.RESULT_MSG,
		       T.STATUS,
		       TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD HH24:MI:SS') CREATE_DATE
		  FROM FIL_RENT_UPDATE_INTEREST T
		  <where>
		  	<if test="ID!=null and ID!=''"> ID=#{ID}</if>
		  	<if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''"> AND PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
		  	<if test="TYPE_ !=null and TYPE_!=''"> AND TYPE_=#{TYPE_}</if>
		  	<if test="BATCH!=null and BATCH!=''"> AND BATCH=#{BATCH}</if>
		  </where>
		 ORDER BY T.CREATE_DATE ASC
	</select>
	
	<select id="showRentPlanHead" resultType="map"  parameterType="map" >
			SELECT T.ID PAY_ID,
			       T.PAYLIST_CODE,
			       T.YEAR_INTEREST,
			       T.LEASE_TERM,
			       T.LEASE_PERIOD,
			       T.PAY_WAY,
			       T.STATUS,
			       TDD.FLAG STATUS_NAME,
			       T.YEAR_TYPE,
			       TO_CHAR(T.START_DATE, 'YYYY-MM-DD') START_DATE,
			       T.CALCULATE_WAY,
			       T.VERSION_CODE,
			       T.MONEY_ALL OLDZJHJ
			  FROM FIL_RENT_PLAN_HEAD_MAX_V T
			  LEFT JOIN FIL_PROJECT_HEAD FPH
			    ON FPH.ID = T.PROJECT_ID
			  LEFT JOIN (SELECT TSD.CODE, TSD.FLAG
			               FROM T_SYS_DATA_DICTIONARY TSD
			              WHERE TSD.TYPE = '还款计划状态') TDD
			    ON T.STATUS = TDD.CODE
			 WHERE FPH.STATUS >= 20
			   AND FPH.STATUS &lt; 99
			  
			   AND T.PAYLIST_CODE NOT IN
			       (SELECT R.PAYLIST_CODE
			          FROM FIL_RENT_UPDATE_INTEREST R
			         WHERE R.STATUS = 0
			         <if test="BATCH!=null and BATCH!=''">
			          AND (R.TYPE_=0 OR ( R.TYPE_=1 AND R.BATCH=#{BATCH}))
			         </if>
			         <if test="DEPEND_TIME!=null and DEPEND_TIME!=''">
			           AND R.DEPEND_TIME = #{DEPEND_TIME}
			         </if>
			         )
			   AND T.STATUS NOT IN (2, 3, 6, 22, 5)
			  <if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''"> AND T.PAYLIST_CODE=#{PAYLIST_CODE}</if> 
			  AND ROWNUM &lt;=#{ROWNUM_}  
	</select>
	
	<select id="get_rate" resultType="map" >
		SELECT (t1.SIX_MONTHS-t2.SIX_MONTHS)/100 SIX_MONTHS,
		(t1.ONE_YEAR-t2.ONE_YEAR)/100 ONE_YEAR,
		(t1.ONE_THREE_YEARS-t2.ONE_THREE_YEARS)/100 ONE_THREE_YEARS,
		(t1.THREE_FIVE_YEARS-t2.THREE_FIVE_YEARS)/100 THREE_FIVE_YEARS,
		(t1.OVER_FIVE_YEARS-t2.OVER_FIVE_YEARS)/100 OVER_FIVE_YEARS
		 FROM (
		select * from (select tt.*, rownum rn from (
				    SELECT T.ADJUST_TIME, T.SIX_MONTHS,T.ONE_YEAR,T.ONE_THREE_YEARS,T.THREE_FIVE_YEARS,T.OVER_FIVE_YEARS 
					FROM t_sys_rate t order by t.adjust_time desc
				) tt where rownum &lt;=1) where rn >=1) t1
		 left join (
		select * from (select tt.*, rownum rn from (
				    SELECT T.ADJUST_TIME, T.SIX_MONTHS,T.ONE_YEAR,T.ONE_THREE_YEARS,T.THREE_FIVE_YEARS,T.OVER_FIVE_YEARS 
					FROM t_sys_rate t order by t.adjust_time desc
				) tt where rownum &lt;=2) where rn >=2) t2 on 1=1
	</select>
	
	<select id="binn_start_term_syzj" resultType="map" parameterType="map" >
		SELECT SUM(FRB.BEGINNING_MONEY)SYZJ,MIN(FRB.BEGINNING_NUM)START_TERM,COUNT(*) TOTAL_TERM,TO_CHAR(MIN(FRB.BEGINNING_RECEIVE_DATA),'YYYY-MM-DD') DATE_
		  FROM FI_R_BEGINNING FRB
		 WHERE FRB.BEGINNING_RECEIVE_DATA >= TO_DATE(#{STARTDATE}, 'YYYY-MM-DD')
		   AND FRB.BEGINNING_STATUS = 0
		   AND FRB.ITEM_FLAG=2
		   AND FRB.BEGINNING_NAME='本金'
		   AND NVL(FRB.BEGINNING_PAID,0)=0
		   AND FRB.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>
	
	<insert id="FIL_RENT_UPDATE_INTEREST" parameterType="Map">
		 insert into FIL_RENT_UPDATE_INTEREST t (t.id
		   ,PAYLIST_CODE
		   ,START_TERM
		   ,SYZJ
		   ,RESULT_MSG
		   ,TYPE_
		   ,BATCH
		   ,CREATE_DATE
		   ,depend_time
		   ,CREATE_CODE
		   ,CREATE_NAME
		   ,ADJUST_DATE
		   ,VERSION_CODE
		   ) values (SEQ_FIL_RENT_UPDATE_INTEREST.NEXTVAL
		   ,#{PAYLIST_CODE,jdbcType=VARCHAR}
		   ,#{START_TERM,jdbcType=VARCHAR}
		   ,#{SYZJ,jdbcType=VARCHAR}
		   ,#{RESULT_MSG,jdbcType=VARCHAR}
		   ,#{TYPE_,jdbcType=VARCHAR}
		   ,#{BATCH,jdbcType=VARCHAR}
		   ,SYSDATE
		   ,#{DEPEND_TIME,jdbcType=VARCHAR}
		   ,#{CREATE_CODE,jdbcType=VARCHAR}
		   ,#{CREATE_NAME,jdbcType=VARCHAR}
		   ,#{STARTDATE,jdbcType=VARCHAR}
		   ,#{VERSION_CODE,jdbcType=VARCHAR}
		   )
	</insert>
	
	<select id="anomaly_period_num" resultType="map"  parameterType="map" >
		SELECT t.period_num FROM fil_rent_plan_detail t where t.pay_id=#{PAY_ID} and t.locked_flag=1 and t.item_name='租金' and t.period_num>=#{start_term}
	</select>
	<insert id="upgrade_payplan" parameterType="Map" >
            insert into fil_rent_plan_head  (ID, PAYLIST_CODE,LEASE_TOPRIC,DEPOSIT_RATE,
					   DEPOSIT_VALUE,POUNDAGE_RATE,POUNDAGE_VALUE,FIRSTRENT_RATE,FIRSTRENT_VALUE,DAY_PUACCRATE_RATE,
					   INTER_UPRATE,YEAR_INTEREST,TOPRIC_SUBFIRENT,LEASE_TERM,PROJECT_ID,LEASE_PERIOD,CREATE_DATE,START_DATE,
					   STATUS,CREATE_PERSON,LEAD_PERSON,PAY_WAY,
					   VERSION_CODE,
					   END_DATE,
					   CHANGE_START_FLAG,
					   BANK_ID,
					   BANK_FLAG,
					   EX_STATUS,
					   EX_REMARK,
					   NOSTART_STATUS,
					   NOSTART_REMARK,
					   LEGAL_STATUS,
					   PAY_STATUS,
					   YEAR_TYPE,
					   RENT_CHARGE_RATE,
					   MANAGEMENT_FEETYPE,
					   COMPANY_PERCENT,
					   COMPANY_FEE,
					   CALCULATE_WAY,
					   PAY_TYPE,
					   CHANGE_TYPE,
					   UPDATE_STATUS,
					   FIRST_PAYMENT_TIME,
					   START_CONFIRM_DATE,
					   FIRST_MONEY_ALL,
					   MONEY_ALL)
	        select  #{NEWID}, paylist_code, lease_topric, deposit_rate,
	        deposit_value, poundage_rate,  poundage_value, firstrent_rate,  firstrent_value,
	        day_puaccrate_rate, inter_uprate, #{YEAR_INTEREST}, topric_subfirent, lease_term,
	        PROJECT_ID, lease_period, create_date, start_date,  status, create_person,
	        lead_person, pay_way, 1+version_code, end_date, change_start_flag, bank_id, bank_flag,
	        ex_status,  ex_remark, nostart_status, nostart_remark, legal_status, pay_status,
	        year_type, rent_charge_rate, management_feetype, company_percent, company_fee,
	        calculate_way, pay_type, change_type, update_status,FIRST_PAYMENT_TIME,START_CONFIRM_DATE,FIRST_MONEY_ALL,#{MONEY_ALL}
	        from fil_rent_plan_head_max_v t where t.PAYLIST_CODE = #{PAYLIST_CODE}
    </insert>
	<insert id="payplan_detail" parameterType="Map" >
       insert into fil_rent_plan_detail t (t.id
	   <if test="PAY_DATE !=null and PAY_DATE !=''">,PAY_DATE</if>
	   <if test="PERIOD_NUM !=null and PERIOD_NUM !=''">,PERIOD_NUM</if>
	   <if test="ITEM_NAME !=null and ITEM_NAME !=''">,ITEM_NAME</if>
	   <if test="ITEM_MONEY !=null and ITEM_MONEY !=''">,ITEM_MONEY</if>
	   <if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,ITEM_FLAG</if>
	   <if test="PAY_ID !=null and PAY_ID !=''">,PAY_ID</if>
	   ) values (SEQ_fil_rent_plan_detail.nextval
	   <if test="PAY_DATE !=null and PAY_DATE !=''">,to_date(#{PAY_DATE},'yyyy-mm-dd')</if>
	   <if test="PERIOD_NUM !=null and PERIOD_NUM !=''">,#{PERIOD_NUM}</if>
	   <if test="ITEM_NAME !=null and ITEM_NAME !=''">,#{ITEM_NAME}</if>
	   <if test="ITEM_MONEY !=null and ITEM_MONEY !=''">,#{ITEM_MONEY}</if>
	   <if test="ITEM_FLAG !=null and ITEM_FLAG !=''">,#{ITEM_FLAG}</if>
	   <if test="PAY_ID !=null and PAY_ID !=''">,#{PAY_ID}</if>
	   )
    </insert>
	<delete id="deleteBeginning" parameterType="Map">
		delete fi_r_beginning t where nvl(t.BEGINNING_PAID,0)=0 and t.BEGINNING_STATUS=0 and  t.paylist_code= #{PAYLIST_CODE} AND t.BEGINNING_RECEIVE_DATA >= TO_DATE(#{STARTDATE}, 'YYYY-MM-DD')
	</delete>
	<insert id="synchronizationBeginning" parameterType="Map" >
		INSERT INTO FI_R_BEGINNING F
	  (BEGINNING_ID,
	   BEGINNING_RECEIVE_DATA,
	   BEGINNING_NUM,
	   BEGINNING_NAME,
	   BEGINNING_MONEY,
	   CREATE_TIME,
	   MODIFY_TIME,
	   PAYLIST_CODE,
	   ITEM_FLAG,
	   BEGINNING_FLAG,
	   IS_DIFFERENCE,
	   PAY_WAY,
	   PROJECT_ID)
	  SELECT SEQ_FI_R_BEGINNING.NEXTVAL,
	         TT.PAY_DATE,
	         TT.PERIOD_NUM,
	         TT.ITEM_NAME,
	         NVL(TT.ITEM_MONEY,0),
	         TT.CREATE_TIME,
	         TT.MODIFY_TIME,
	         TT.PAYLIST_CODE,
	         TT.ITEM_FLAG,
	         CASE WHEN NVL(TT.ITEM_MONEY,0)=0 THEN 1 ELSE 0 END,
	         is_difference,
	         tt.PAY_WAY,
	         TT.PROJECT_ID
	    FROM (SELECT T.PAY_DATE,
	                 T.PERIOD_NUM,
	                 T.ITEM_NAME,
	                 T.ITEM_MONEY,
	                 SYSDATE         CREATE_TIME,
	                 SYSDATE         MODIFY_TIME,
	                 TH.PAYLIST_CODE,
	                 T.ITEM_FLAG,
	                 BEGIN_IS_DIFFERENCE(TH.PAYLIST_CODE,T.ITEM_NAME,T.PERIOD_NUM) IS_DIFFERENCE,
					 TH.PAY_WAY,
	                 TH.PROJECT_ID
	            FROM FIL_RENT_PLAN_DETAIL T, FIL_RENT_PLAN_HEAD_BAS_MAX__V TH
	           WHERE T.ITEM_NAME NOT IN (#{PMT}, #{ZJ}, #{SYBJ})
	             AND T.PAY_ID = TH.ID
	             AND TH.PAYLIST_CODE = #{PAYLIST_CODE}
	             AND #{D} || T.PERIOD_NUM || #{QI} || T.ITEM_NAME NOT IN
	                 (SELECT #{D} || FF.BEGINNING_NUM || #{QI} || FF.BEGINNING_NAME
	                    FROM FI_R_BEGINNING FF
	                   WHERE FF.PAYLIST_CODE = #{PAYLIST_CODE} and (nvl(FF.BEGINNING_PAID,0)&lt;>0
	                   OR FF.BEGINNING_RECEIVE_DATA &lt; TO_DATE(#{STARTDATE}, 'YYYY-MM-DD'))
					   union 
                     SELECT #{D} || FF.BEGINNING_NUM || #{QI} || FF.BEGINNING_NAME
	                    FROM FI_R_BEGINNING FF
	                   WHERE FF.PAYLIST_CODE = #{PAYLIST_CODE} and (ff.beginning_status=1
	                   OR FF.BEGINNING_RECEIVE_DATA &lt; TO_DATE(#{STARTDATE}, 'YYYY-MM-DD'))
					   )
	           ORDER BY T.PERIOD_NUM ASC, T.ITEM_NAME ASC) TT
    </insert>
	<select id="payDetail"  parameterType="map" resultType="map">
		SELECT  to_char(t.pay_date,'yyyy-mm-dd')pay_date,t.period_num,t.item_name,t.item_money 
		FROM fil_rent_plan_detail t where t.pay_id=#{ID} and t.item_flag=2 
		and t.period_num &lt;>0 order by t.period_num
	</select>
	
	<select id="checkPay" parameterType="map" resultType="int">
	SELECT COUNT(1) FROM FIL_RENT_UPDATE_INTEREST T WHERE T.BATCH>#{BATCH} AND T.STATUS=0 AND T.TYPE_=0
	</select>
	
	<delete id="doDelRentDetail" parameterType="map">
	DELETE FROM FIL_RENT_PLAN_DETAIL T WHERE T.PAY_ID=#{PAY_ID}
	</delete>
	
	<delete id="doDelRentHead" parameterType="map">
	DELETE FROM FIL_RENT_PLAN_HEAD T WHERE T.ID=#{PAY_ID}
	</delete>
	<update id="doUpdateRentStatus" parameterType="map">
	UPDATE FIL_RENT_UPDATE_INTEREST T SET T.STATUS=1 WHERE  T.PAYLIST_CODE=#{PAYLIST_CODE} AND T.BATCH=#{BATCH}  AND T.TYPE_=0
	</update>
	
	<select id="queryhfPayList" parameterType="map" resultType="map">
	 SELECT FRUI.PAYLIST_CODE, FRPHM.ID PAY_ID
	                FROM FIL_RENT_UPDATE_INTEREST FRUI,
	                     FIL_RENT_PLAN_HEAD_MAX_V FRPHM
	               WHERE FRUI.PAYLIST_CODE = FRPHM.PAYLIST_CODE
	                 AND FRUI.TYPE_ = 0
	                 AND FRUI.STATUS = 0
	                 <if test="PAYLIST_CODE !=null and PAYLIST_CODE!=''"> AND FRUI.PAYLIST_CODE=#{PAYLIST_CODE}</if>
	                 <if test="BATCH!=null and BATCH!=''">AND FRUI.BATCH=#{BATCH}</if>
	                 
	</select>
	<select id="queryAdjustRatePdfInfo" parameterType="map" resultType="map">
		SELECT FCC.NAME CUST_NAME,
		       CASE
		         WHEN FCC.SEX = 0 THEN
		          '先生'
		         WHEN FCC.SEX=1 THEN
              	  '女士'
	             ELSE
	              ''
		       END SEXY,
		       TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(T.ADJUST_DATE, 'YYYY-MM-DD'), -1)),
		               'YYYY-MM-DD') || ' 00:00:00' YHJZSJ,
		       FRPHM.LEASE_TERM-T.START_TERM+1  WHQC,
		       T.DEPEND_TIME,
		       TO_CHAR(TO_DATE(T.ADJUST_DATE, 'YYYY-MM-DD'), 'YYYY-MM') || '-01' ADJUST_START_DATE,
		       OFRPH.YEAR_INTEREST * 100 OLD_YEAR_INTEREST,
		       FRPHM.YEAR_INTEREST * 100 NEW_YEAR_INTEREST,
		       TO_CHAR(TO_DATE(T.ADJUST_DATE, 'YYYY-MM-DD'), 'YYYY-MM') ADJUST_START_MONTH,
		       T.START_TERM,
		       TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD')CREATE_DATE,
		       FRPHM.LEASE_TERM,
		       FRPHM.LEASE_PERIOD,
		       FRPHM.PAYLIST_CODE
		  FROM FIL_RENT_UPDATE_INTEREST T,
		       FIL_RENT_PLAN_HEAD_MAX_V FRPHM,
		       FIL_RENT_PLAN_HEAD       OFRPH,
		       FIL_PROJECT_HEAD         FPH,
		       FIL_CUST_CLIENT          FCC
		 WHERE T.TYPE_ = 0
		   AND T.BATCH = (SELECT MAX(TT.BATCH)
		                    FROM FIL_RENT_UPDATE_INTEREST TT
		                   WHERE TT.PAYLIST_CODE = T.PAYLIST_CODE
		                     AND TT.TYPE_ = 0 AND TT.STATUS=0)
		   AND T.STATUS=0
		   AND T.PAYLIST_CODE = FRPHM.PAYLIST_CODE
		   AND T.PAYLIST_CODE = OFRPH.PAYLIST_CODE(+)
		   AND FRPHM.VERSION_CODE = OFRPH.VERSION_CODE + 1
		   AND FRPHM.PROJECT_ID = FPH.ID
		   AND FPH.CLIENT_ID = FCC.ID
		   <if test="PAYLIST_CODE!=null and PAYLIST_CODE!=''"> AND T.PAYLIST_CODE=#{PAYLIST_CODE}</if>
	</select>
	
	<select id="queryRateInfo"  resultType="map">
	SELECT * FROM(SELECT T.* FROM T_SYS_RATE T ORDER BY T.ADJUST_TIME DESC ) WHERE ROWNUM &lt;=2
	</select>
	
	<select id="queryAdjustPayDetailList" parameterType="map" resultType="map">
	SELECT FRPD.PERIOD_NUM,
       TO_CHAR(FRPD.PAY_DATE,'YYYY-MM-DD')PAY_DATE,
       OFRPD.ITEM_MONEY OLD_ZUJIN,
       FRPD.ITEM_MONEY  NEW_ZUJIN
  FROM FIL_RENT_PLAN_HEAD_MAX_V FRPHM,
       FIL_RENT_PLAN_HEAD       FRPH,
       FIL_RENT_PLAN_DETAIL     FRPD,
       FIL_RENT_PLAN_DETAIL     OFRPD
 WHERE FRPHM.PAYLIST_CODE = FRPH.PAYLIST_CODE
   AND FRPHM.VERSION_CODE = FRPH.VERSION_CODE + 1
   AND FRPHM.ID = FRPD.PAY_ID
   AND FRPH.ID = OFRPD.PAY_ID
   AND FRPD.PERIOD_NUM=OFRPD.PERIOD_NUM
   AND FRPD.PERIOD_NUM >=#{START_TERM}
   AND OFRPD.PERIOD_NUM >=#{START_TERM}
   AND FRPD.ITEM_NAME = '租金'
   AND OFRPD.ITEM_NAME = '租金'
   AND FRPHM.PAYLIST_CODE=#{PAYLIST_CODE}
 ORDER BY FRPD.PERIOD_NUM ASC
	</select>
	
	<insert id="insertOtherMoney" parameterType="map">
		INSERT INTO FIL_RENT_PLAN_DETAIL
		  SELECT SEQ_FIL_RENT_PLAN_DETAIL.NEXTVAL,
		         EQUIPMENT_ID,
		         PAY_DATE,
		         PERIOD_NUM,
		         ITEM_NAME,
		         ITEM_MONEY,
		         ITEM_FLAG,
		         SPLIT_RATE,
		         SPLIT_MONEY,
		         PAID_MONEY,
		         #{NEWID},
		         TYPE,
		         REMARK,
		         ITEM_NAME_EN,
		         IRR,
		         LOCKED_FLAG,
		         TEMP_CLD1,
		         TEMP_CLD2,
		         TEMP_CLD3,
		         TEMP_CLD4,
		         FLAG_TYPE
		    FROM FIL_RENT_PLAN_DETAIL WHERE PAY_ID=#{ID} AND ITEM_FLAG!=2
	</insert>
	
</mapper>
