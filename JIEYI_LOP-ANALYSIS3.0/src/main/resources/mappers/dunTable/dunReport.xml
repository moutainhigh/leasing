<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="dunReport">
	<select id="showDunRateDate" parameterType="map" resultType="map">
		SELECT ${SQL_COLUMN} FROM (	 
						 SELECT CC.* ,ROWNUM ROWNO FROM 
						 (SELECT * FROM (	
							select vps.company_name,vps.company_id,vps.SUP_NAME,vps.SUP_ID,vps.PROVINCE_NAME,vps.PROVINCE_ID,vps.CITY_NAME,vps.CITY_ID 
							,vps.LEASE_CODE,frp.STATUS,tsdd.flag STATUS_NAME,vps.PAY_ID,vps.PAYLIST_CODE,to_char(vps.START_DATE,'yyyy-MM-dd') START_DATE,fo.PENALTY_DAY,fo.DUN_ZJ,fo1.MINDUN_PERIOD
							,fo1.COUNT_PERIOD,frb.DUN_RATE DUN_RATE_NUMBER,frb.DUN_RATE || '%' DUN_RATE,fph.clerk_id,fph.clerk_name,fph.platform_type,tsdd2.flag platform_name,fcc.TYPE CUST_TYPE,tsdd3.flag CUST_TYPE_NAME
							,fcc.id CUST_ID,fcc.name CUST_NAME,tsdd4.INDUSTRY_NAME FICATION_NAME,fph.INDUSTRY_FICATION
							from v_plan_scheme vps
							left join fil_rent_plan_head_max_v frp on frp.ID=vps.PAY_ID
							left join t_sys_data_dictionary tsdd on tsdd.type='还款计划状态' and tsdd.code=frp.STATUS
							left join (
							     select fo.pay_code,max(PENALTY_DAY) PENALTY_DAY,round(sum(nvl(fo.RENT_RECE,0))-sum(nvl(fo.RENT_PAID,0)),2) DUN_ZJ from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and nvl(fo.RENT_RECE,0)>nvl(fo.RENT_PAID,0) group by fo.pay_code
							) fo on vps.PAYLIST_CODE=fo.pay_code
							left join (
							     select distinct fo.pay_code,min(fo.period) MINDUN_PERIOD,count(distinct fo.period) COUNT_PERIOD from fi_overdue fo group by fo.pay_code
							) fo1 on vps.PAYLIST_CODE=fo1.pay_code
							left join (
							     select frb.paylist_code,round((sum(nvl(frb.BEGINNING_MONEY,0))-sum(nvl(frb.BEGINNING_PAID,0)))*100/sum(nvl(frb.BEGINNING_MONEY,0)),2) DUN_RATE  from fi_r_beginning frb where frb.ITEM_FLAG=2 group by frb.paylist_code
							) frb on frb.paylist_code=vps.PAYLIST_CODE
							left join fil_project_head fph on vps.PROJECT_ID=fph.id
							left join t_sys_site_dictionary tsdd2 on tsdd2.type='业务类型' and tsdd2.code=fph.platform_type
							left join fil_cust_client fcc on fph.client_id=fcc.id
							left join t_sys_data_dictionary tsdd3 on tsdd3.type='客户类型' and tsdd3.code=fcc.type
							left join FIL_INDUSTRY tsdd4 on tsdd4.INDUSTRY_CODE=fph.INDUSTRY_FICATION --行业类型
							where fo.PENALTY_DAY>0
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==2"> and fo.PENALTY_DAY &lt;=30</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==3"> and fo.PENALTY_DAY >30 and fo.PENALTY_DAY &lt;=60</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==4"> and fo.PENALTY_DAY >60 and fo.PENALTY_DAY &lt;=90</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==5"> and fo.PENALTY_DAY >90</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==2"> and fo1.COUNT_PERIOD =1</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==3"> and fo1.COUNT_PERIOD =2</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==4"> and fo1.COUNT_PERIOD =3</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==5"> and fo1.COUNT_PERIOD >3 and fo1.COUNT_PERIOD &lt;=6</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==6"> and fo1.COUNT_PERIOD >6</if>
		)
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">ORDER BY PROVINCE_ID</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">ORDER BY platform_type</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_TYPE</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_ID</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY INDUSTRY_FICATION</if>
			
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==1">,DUN_RATE_NUMBER desc</if>
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==2">,DUN_ZJ desc</if>
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==3">,COUNT_PERIOD desc</if>
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==4">,PENALTY_DAY desc</if>
		) CC

				<if test="PAGE_END!=null and PAGE_END!=''">	WHERE ROWNUM &lt;= #{PAGE_END}</if>
				) CCC
		 <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''"> WHERE CCC.ROWNO >= #{PAGE_BEGIN}</if>

	</select>
	
	<select id="showDunDateRate_count" parameterType="map" resultType="int">
		select count(1) from (
							select vps.company_name,vps.company_id,vps.SUP_NAME,vps.SUP_ID,vps.PROVINCE_NAME,vps.PROVINCE_ID,vps.CITY_NAME,vps.CITY_ID 
							,vps.LEASE_CODE,frp.STATUS,tsdd.flag STATUS_NAME,vps.PAY_ID,vps.PAYLIST_CODE,vps.START_DATE,fo.PENALTY_DAY,fo.DUN_ZJ,fo1.MINDUN_PERIOD
							,fo1.COUNT_PERIOD,frb.DUN_RATE,fph.clerk_id,fph.clerk_name,fph.platform_type,tsdd2.flag platform_name,fcc.TYPE CUST_TYPE,tsdd3.flag CUST_TYPE_NAME
							,fcc.id CUST_ID,fcc.name CUST_NAME,tsdd4.INDUSTRY_NAME FICATION_NAME,fph.INDUSTRY_FICATION
							from v_plan_scheme vps
							left join fil_rent_plan_head_max_v frp on frp.ID=vps.PAY_ID
							left join t_sys_data_dictionary tsdd on tsdd.type='还款计划状态' and tsdd.code=frp.STATUS
							left join (
							     select fo.pay_code,max(PENALTY_DAY) PENALTY_DAY,round(sum(nvl(fo.RENT_RECE,0))-sum(nvl(fo.RENT_PAID,0)),2) DUN_ZJ from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and nvl(fo.RENT_RECE,0)>nvl(fo.RENT_PAID,0) group by fo.pay_code
							) fo on vps.PAYLIST_CODE=fo.pay_code
							left join (
							     select distinct fo.pay_code,min(fo.period) MINDUN_PERIOD,count(distinct fo.period) COUNT_PERIOD from fi_overdue fo group by fo.pay_code
							) fo1 on vps.PAYLIST_CODE=fo1.pay_code
							left join (
							     select frb.paylist_code,round((sum(nvl(frb.BEGINNING_MONEY,0))-sum(nvl(frb.BEGINNING_PAID,0)))*100/sum(nvl(frb.BEGINNING_MONEY,0)),2) DUN_RATE  from fi_r_beginning frb where frb.ITEM_FLAG=2 group by frb.paylist_code
							) frb on frb.paylist_code=vps.PAYLIST_CODE
							left join fil_project_head fph on vps.PROJECT_ID=fph.id
							left join t_sys_site_dictionary tsdd2 on tsdd2.type='业务类型' and tsdd2.code=fph.platform_type
							left join fil_cust_client fcc on fph.client_id=fcc.id
							left join t_sys_data_dictionary tsdd3 on tsdd3.type='客户类型' and tsdd3.code=fcc.type
							left join FIL_INDUSTRY tsdd4 on tsdd4.INDUSTRY_CODE=fph.INDUSTRY_FICATION
							where fo.PENALTY_DAY>0
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==2"> and fo.PENALTY_DAY &lt;=30</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==3"> and fo.PENALTY_DAY >30 and fo.PENALTY_DAY &lt;=60</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==4"> and fo.PENALTY_DAY >60 and fo.PENALTY_DAY &lt;=90</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==5"> and fo.PENALTY_DAY >90</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==2"> and fo1.COUNT_PERIOD =1</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==3"> and fo1.COUNT_PERIOD =2</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==4"> and fo1.COUNT_PERIOD =3</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==5"> and fo1.COUNT_PERIOD >3 and fo1.COUNT_PERIOD &lt;=6</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==6"> and fo1.COUNT_PERIOD >6</if>
		)
	</select>
	

	<select id="DUN_REPORT_TYPE"  parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.platform_name DATA_TYPE,aa.platform_type</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_TYPE_NAME DATA_TYPE,aa.CUST_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE,aa.CLERK_ID</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.FICATION_NAME DATA_TYPE,aa.INDUSTRY_FICATION</if>
		from (
							select vps.company_name,vps.company_id,vps.SUP_NAME,vps.SUP_ID,vps.PROVINCE_NAME,vps.PROVINCE_ID,vps.CITY_NAME,vps.CITY_ID 
							,vps.LEASE_CODE,frp.STATUS,tsdd.flag STATUS_NAME,vps.PAY_ID,vps.PAYLIST_CODE,to_char(vps.START_DATE,'yyyy-MM-dd') START_DATE,fo.PENALTY_DAY,fo.DUN_ZJ,fo1.MINDUN_PERIOD
							,fo1.COUNT_PERIOD,frb.DUN_RATE,fph.clerk_id,fph.clerk_name,fph.platform_type,tsdd2.flag platform_name,fcc.TYPE CUST_TYPE,tsdd3.flag CUST_TYPE_NAME
							,fcc.id CUST_ID,fcc.name CUST_NAME,tsdd4.INDUSTRY_NAME FICATION_NAME,fph.INDUSTRY_FICATION
							from v_plan_scheme vps
							left join fil_rent_plan_head_max_v frp on frp.ID=vps.PAY_ID
							left join t_sys_data_dictionary tsdd on tsdd.type='还款计划状态' and tsdd.code=frp.STATUS
							left join (
							     select fo.pay_code,max(PENALTY_DAY) PENALTY_DAY,round(sum(nvl(fo.RENT_RECE,0))-sum(nvl(fo.RENT_PAID,0)),2) DUN_ZJ from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and nvl(fo.RENT_RECE,0)>nvl(fo.RENT_PAID,0) group by fo.pay_code
							) fo on vps.PAYLIST_CODE=fo.pay_code
							left join (
							     select distinct fo.pay_code,min(fo.period) MINDUN_PERIOD,count(distinct fo.period) COUNT_PERIOD from fi_overdue fo group by fo.pay_code
							) fo1 on vps.PAYLIST_CODE=fo1.pay_code
							left join (
							     select frb.paylist_code,round((sum(nvl(frb.BEGINNING_MONEY,0))-sum(nvl(frb.BEGINNING_PAID,0)))*100/sum(nvl(frb.BEGINNING_MONEY,0)),2) DUN_RATE  from fi_r_beginning frb where frb.ITEM_FLAG=2 group by frb.paylist_code
							) frb on frb.paylist_code=vps.PAYLIST_CODE
							left join fil_project_head fph on vps.PROJECT_ID=fph.id
							left join t_sys_site_dictionary tsdd2 on tsdd2.type='业务类型' and tsdd2.code=fph.platform_type
							left join fil_cust_client fcc on fph.client_id=fcc.id
							left join t_sys_data_dictionary tsdd3 on tsdd3.type='客户类型' and tsdd3.code=fcc.type
							left join FIL_INDUSTRY tsdd4 on  tsdd4.industry_code=fph.INDUSTRY_FICATION
							where fo.PENALTY_DAY>0
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.platform_type,aa.platform_name</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CUST_TYPE,aa.CUST_TYPE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">group by aa.CLERK_ID,aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">group by aa.INDUSTRY_FICATION,aa.FICATION_NAME</if>
	</select>
	
	<select id="showGroupDunSDTJ"  parameterType="map" resultType="map">
		select 
		round(sum(aa.DUNTOTAL)*100/sum(aa.ZJTOTAL),2) YVALUE,count(1) XVALUE
		from (
							select vps.company_name,vps.company_id,vps.SUP_NAME,vps.SUP_ID,vps.PROVINCE_NAME,vps.PROVINCE_ID,vps.CITY_NAME,vps.CITY_ID 
							,vps.LEASE_CODE,frp.STATUS,tsdd.flag STATUS_NAME,vps.PAY_ID,vps.PAYLIST_CODE,to_char(vps.START_DATE,'yyyy-MM-dd') START_DATE,fo.PENALTY_DAY,fo.DUN_ZJ,fo1.MINDUN_PERIOD
							,fo1.COUNT_PERIOD,frb.DUNTOTAL,frb.ZJTOTAL,fph.clerk_id,fph.clerk_name,fph.platform_type,tsdd2.flag platform_name,fcc.TYPE CUST_TYPE,tsdd3.flag CUST_TYPE_NAME
							,fcc.id CUST_ID,fcc.name CUST_NAME,tsdd4.INDUSTRY_NAME FICATION_NAME,fph.INDUSTRY_FICATION
							from v_plan_scheme vps
							left join fil_rent_plan_head_max_v frp on frp.ID=vps.PAY_ID
							left join t_sys_data_dictionary tsdd on tsdd.type='还款计划状态' and tsdd.code=frp.STATUS
							left join (
							     select fo.pay_code,max(PENALTY_DAY) PENALTY_DAY,round(sum(nvl(fo.RENT_RECE,0))-sum(nvl(fo.RENT_PAID,0)),2) DUN_ZJ from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and nvl(fo.RENT_RECE,0)>nvl(fo.RENT_PAID,0) group by fo.pay_code
							) fo on vps.PAYLIST_CODE=fo.pay_code
							left join (
							     select distinct fo.pay_code,min(fo.period) MINDUN_PERIOD,count(distinct fo.period) COUNT_PERIOD from fi_overdue fo group by fo.pay_code
							) fo1 on vps.PAYLIST_CODE=fo1.pay_code
							left join (
							     select frb.paylist_code,round((sum(nvl(frb.BEGINNING_MONEY,0))-sum(nvl(frb.BEGINNING_PAID,0))),2) DUNTOTAL,round(sum(nvl(frb.BEGINNING_MONEY,0)),2) ZJTOTAL  from fi_r_beginning frb where frb.ITEM_FLAG=2 group by frb.paylist_code
							) frb on frb.paylist_code=vps.PAYLIST_CODE
							left join fil_project_head fph on vps.PROJECT_ID=fph.id
							left join t_sys_site_dictionary tsdd2 on tsdd2.type='业务类型' and tsdd2.code=fph.platform_type
							left join fil_cust_client fcc on fph.client_id=fcc.id
							left join t_sys_data_dictionary tsdd3 on tsdd3.type='客户类型' and tsdd3.code=fcc.type
							left join FIL_INDUSTRY tsdd4 on  tsdd4.industry_code=fph.INDUSTRY_FICATION
							where fo.PENALTY_DAY>0
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> and vps.PROVINCE_NAME=#{DATA_TYPE}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> and fph.platform_type=#{PLATFORM_TYPE}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> and fcc.TYPE=#{CUST_TYPE}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> and fph.clerk_id=#{CLERK_ID}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> and fph.INDUSTRY_FICATION=#{INDUSTRY_FICATION}</if>
		) aa
		
	</select>
	
	<select id="showGroupDunMoney"  parameterType="map" resultType="map">
		select 
		round(sum(aa.DUN_ZJ),2) YVALUE,count(1) XVALUE
		from (
							select vps.company_name,vps.company_id,vps.SUP_NAME,vps.SUP_ID,vps.PROVINCE_NAME,vps.PROVINCE_ID,vps.CITY_NAME,vps.CITY_ID 
							,vps.LEASE_CODE,frp.STATUS,tsdd.flag STATUS_NAME,vps.PAY_ID,vps.PAYLIST_CODE,to_char(vps.START_DATE,'yyyy-MM-dd') START_DATE,fo.PENALTY_DAY,fo.DUN_ZJ,fo1.MINDUN_PERIOD
							,fo1.COUNT_PERIOD,fph.clerk_id,fph.clerk_name,fph.platform_type,tsdd2.flag platform_name,fcc.TYPE CUST_TYPE,tsdd3.flag CUST_TYPE_NAME
							,fcc.id CUST_ID,fcc.name CUST_NAME,tsdd4.flag FICATION_NAME,fph.INDUSTRY_FICATION
							from v_plan_scheme vps
							left join fil_rent_plan_head_max_v frp on frp.ID=vps.PAY_ID
							left join t_sys_data_dictionary tsdd on tsdd.type='还款计划状态' and tsdd.code=frp.STATUS
							left join (
							     select fo.pay_code,max(PENALTY_DAY) PENALTY_DAY,round(sum(nvl(fo.RENT_RECE,0))-sum(nvl(fo.RENT_PAID,0)),2) DUN_ZJ from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and nvl(fo.RENT_RECE,0)>nvl(fo.RENT_PAID,0) group by fo.pay_code
							) fo on vps.PAYLIST_CODE=fo.pay_code
							left join (
							     select distinct fo.pay_code,min(fo.period) MINDUN_PERIOD,count(distinct fo.period) COUNT_PERIOD from fi_overdue fo group by fo.pay_code
							) fo1 on vps.PAYLIST_CODE=fo1.pay_code
							
							left join fil_project_head fph on vps.PROJECT_ID=fph.id
							left join t_sys_site_dictionary tsdd2 on tsdd2.type='业务类型' and tsdd2.code=fph.platform_type
							left join fil_cust_client fcc on fph.client_id=fcc.id
							left join t_sys_data_dictionary tsdd3 on tsdd3.type='客户类型' and tsdd3.code=fcc.type
							left join FIL_INDUSTRY tsdd4 on tsdd4.industry_code=fph.INDUSTRY_FICATION
							where fo.PENALTY_DAY>0
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> and vps.PROVINCE_NAME=#{DATA_TYPE}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> and fph.platform_type=#{PLATFORM_TYPE}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> and fcc.TYPE=#{CUST_TYPE}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> and fph.clerk_id=#{CLERK_ID}</if>
							<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> and fph.INDUSTRY_FICATION=#{INDUSTRY_FICATION}</if>
		) aa
		
	</select>
	
	
	<select id="showGroupDunType" parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME DATA_TYPE,count(aa.PROVINCE_NAME) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.platform_name DATA_TYPE,count(aa.platform_type) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_TYPE_NAME DATA_TYPE,count(aa.CUST_TYPE) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.clerk_name DATA_TYPE,count(aa.clerk_id) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.FICATION_NAME DATA_TYPE,count(aa.INDUSTRY_FICATION) DATA_VALUE</if>
		from (
						select vps.company_name,vps.company_id,vps.SUP_NAME,vps.SUP_ID,vps.PROVINCE_NAME,vps.PROVINCE_ID,vps.CITY_NAME,vps.CITY_ID 
							,vps.LEASE_CODE,frp.STATUS,tsdd.flag STATUS_NAME,vps.PAY_ID,vps.PAYLIST_CODE,to_char(vps.START_DATE,'yyyy-MM-dd') START_DATE,fo.PENALTY_DAY,fo.DUN_ZJ,fo1.MINDUN_PERIOD
							,fo1.COUNT_PERIOD,fph.clerk_id,fph.clerk_name,fph.platform_type,tsdd2.flag platform_name,fcc.TYPE CUST_TYPE,tsdd3.flag CUST_TYPE_NAME
							,fcc.id CUST_ID,fcc.name CUST_NAME,tsdd4.INDUSTRY_NAME FICATION_NAME,fph.INDUSTRY_FICATION
							from v_plan_scheme vps
							left join fil_rent_plan_head_max_v frp on frp.ID=vps.PAY_ID
							left join t_sys_data_dictionary tsdd on tsdd.type='还款计划状态' and tsdd.code=frp.STATUS
							left join (
							     select fo.pay_code,max(PENALTY_DAY) PENALTY_DAY,round(sum(nvl(fo.RENT_RECE,0))-sum(nvl(fo.RENT_PAID,0)),2) DUN_ZJ from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and nvl(fo.RENT_RECE,0)>nvl(fo.RENT_PAID,0) group by fo.pay_code
							) fo on vps.PAYLIST_CODE=fo.pay_code
							left join (
							     select distinct fo.pay_code,min(fo.period) MINDUN_PERIOD,count(distinct fo.period) COUNT_PERIOD from fi_overdue fo group by fo.pay_code
							) fo1 on vps.PAYLIST_CODE=fo1.pay_code
							
							left join fil_project_head fph on vps.PROJECT_ID=fph.id
							left join t_sys_site_dictionary tsdd2 on tsdd2.type='业务类型' and tsdd2.code=fph.platform_type
							left join fil_cust_client fcc on fph.client_id=fcc.id
							left join t_sys_data_dictionary tsdd3 on tsdd3.type='客户类型' and tsdd3.code=fcc.type
							left join FIL_INDUSTRY tsdd4 on  tsdd4.industry_code=fph.INDUSTRY_FICATION
							where fo.PENALTY_DAY>0
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==2"> and fo.PENALTY_DAY &lt;=30</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==3"> and fo.PENALTY_DAY >30 and fo.PENALTY_DAY &lt;=60</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==4"> and fo.PENALTY_DAY >60 and fo.PENALTY_DAY &lt;=90</if>
							<if test="REPORT_DUN_TYPE==4 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==5"> and fo.PENALTY_DAY >90</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==2"> and fo1.COUNT_PERIOD =1</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==3"> and fo1.COUNT_PERIOD =2</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==4"> and fo1.COUNT_PERIOD =3</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==5"> and fo1.COUNT_PERIOD >3 and fo1.COUNT_PERIOD &lt;=6</if>
							<if test="REPORT_DUN_TYPE==3 and REPORT_GROUP !=null and REPORT_GROUP !='' and REPORT_GROUP ==6"> and fo1.COUNT_PERIOD >6</if>
		) aa
		
		group by 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.platform_type,aa.platform_name</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_TYPE,aa.CUST_TYPE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_ID,aa.clerk_name</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.INDUSTRY_FICATION,aa.FICATION_NAME</if>
	</select>
	<insert id="addFiOverDueMonth" parameterType="map">
INSERT INTO fi_overdue_month
  ( 
   cust_name,
   cust_type_name,
   province_name,
   city_name,
   company_name,
   sup_name,
   lease_code,
   clerk_name,
   platform_name,
   status_name,
   paylist_code,
   start_date,
   end_date,
   penalty_day,
   period,
   yqzj,
   wshj,
   zje,
   create_date,
   FICATION_NAME)

  SELECT  
         fcc.name,
         ctype.flag CUST_TYPE_NAME,
         fph.province_name,
         vps.CITY_NAME,
         vps.company_name,
         vps.SUP_NAME,
         fph.lease_code,
         --fph.SUB_COMPANY_NAME,
         fph.clerk_name,
         ptype.flag PLATFORM_NAME,
         ftdd.flag STATUS,
         fo.PAY_CODE,
         to_char(fo.PAY_START,'yyyy-mm-dd')PAY_START,
         to_char(frph.END_DATE, 'yyyy-mm-dd') end_date,
         fo.PENALTY_DAY,
         fo.PERIOD,
         fo.RENT_RECE - fo.RENT_PAID yqzj,
         to_char(sum(f.beginning_money), '99999999999999.99') wshj,
         to_char(sum(zjall.beginning_money), '99999999999999.99') zje,
         sysdate,
         FICATION.FLAG FICATION_NAME
    FROM fi_overdue fo,
         fil_project_head fph,
         fil_cust_client fcc,
         (select ff.paylist_code,
                 fio.period,
                 sum(ff.beginning_money) beginning_money
            from (SELECT frb.paylist_code,
                         frb.beginning_num,
                         sum(case
                               when frb.beginning_money - frb.BEGINNING_PAID -
                                    frb.INVENT_MONEY > 0 then
                                frb.beginning_money - frb.BEGINNING_PAID -
                                frb.INVENT_MONEY
                               else
                                0
                             end) beginning_money
                    FROM fi_r_beginning frb
                   where frb.ITEM_FLAG = 2
                     and frb.beginning_money - frb.BEGINNING_PAID -
                         frb.INVENT_MONEY > 0
                   group by frb.paylist_code, frb.beginning_num) ff,
                 fi_overdue fio
           where ff.paylist_code = fio.pay_code
             and to_char(fio.create_date, 'yyyy-mm-dd') = #{CREATE_DATE}
             and ff.beginning_num &lt;= fio.period
           group by paylist_code, fio.period) f,
         (SELECT frb.paylist_code,
                 
                 sum(case
                       when frb.beginning_money - frb.BEGINNING_PAID -
                            frb.INVENT_MONEY > 0 then
                        frb.beginning_money - frb.BEGINNING_PAID -
                        frb.INVENT_MONEY
                       else
                        0
                     end) beginning_money
            FROM fi_r_beginning frb
           where frb.ITEM_FLAG = 2
             and frb.beginning_money - frb.BEGINNING_PAID - frb.INVENT_MONEY > 0
           group by frb.paylist_code) zjall,
         fil_rent_plan_head_max_v frph,
         (SELECT Tdd.code, tdd.flag
            FROM t_sys_data_dictionary tdd
           where tdd.type = '还款计划状态') ftdd,
         (SELECT Tdd.code, tdd.flag
            FROM t_sys_data_dictionary tdd
           where tdd.type = '客户类型') ctype,
         (SELECT Tdd.code, tdd.flag
            FROM t_sys_site_dictionary tdd
           where tdd.type = '业务类型') ptype,
         v_plan_scheme vps,
         (SELECT 
		  	HY.INDUSTRY_CODE code,
				HY.INDUSTRY_NAME flag
				FROM FIL_INDUSTRY HY
           ) FICATION
   where fo.project_id = fph.id
     and fph.client_id = fcc.id
     and fcc.type = ctype.code
     and fph.platform_type = ptype.code
     and f.paylist_code = zjall.paylist_code
     and ftdd.code = frph.STATUS
     and f.paylist_code = fo.pay_code
     and frph.PAYLIST_CODE = vps.PAYLIST_CODE
     and fo.period = f.period
     and fo.pay_code = frph.PAYLIST_CODE
     and fo.RENT_RECE - fo.RENT_PAID > 0
     and fph.INDUSTRY_FICATION=FICATION.code
     and to_char(fo.create_date, 'yyyy-mm-dd') = #{CREATE_DATE}
   group by fcc.name,
            ctype.flag,
            fph.lease_code,
            fph.province_name,
            ptype.flag,
            fph.SUB_COMPANY_NAME,
            vps.SUP_NAME,
            vps.company_name,
            vps.CITY_NAME,
            fph.clerk_name,
            fo.PAY_CODE,
            ftdd.flag,
            to_char(frph.END_DATE, 'yyyy-mm-dd'),
            fo.PAY_START,
            fo.PENALTY_DAY,
            fo.PERIOD,
            FICATION.FLAG,
            (fo.RENT_RECE - fo.RENT_PAID)
	</insert>
	<select id="REPORT_X_MONTH" parameterType="map" resultType="map">
		 select b.CREATE_DATE X_VALUE from (
			SELECT 
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
			CREATE_DATE
	  		FROM DUAL CONNECT BY ROWNUM &lt;
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
			<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
		) b order by b.CREATE_DATE
	</select>
	<select id="DUNFX_REPORT_TYPE"  parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.PLATFORM_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CUST_TYPE_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">aa.CLERK_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">aa.FICATION_NAME DATA_TYPE</if>
		from (
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE) YQL
			  FROM FI_OVERDUE_MONTH
			  <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(CREATE_DATE)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(CREATE_DATE)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			  </where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          FICATION_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          START_DATE,
			          END_DATE
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.platform_name</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CUST_TYPE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">group by aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">group by aa.FICATION_NAME</if>
	</select>	
	<select id="showGroupDunSDFX"  parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(to_char(t2.COUNTS,'9999999999.99'),0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(YQL) COUNTS FROM (
				  	select  aa.CREATE_TIME CREATE_DATE,AA.YQL
					from (
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       TO_CHAR(CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE) YQL
			  FROM FI_OVERDUE_MONTH
			<where> 
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> PROVINCE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> PLATFORM_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> CUST_TYPE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> CLERK_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> FICATION_NAME=#{DATA_TYPE}</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !='' ">AND PAYLIST_CODE=#{PAYLIST_CODE}</if>
			</where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          TO_CHAR(CREATE_DATE,'YYYY-MM'),
			          START_DATE,
			          END_DATE,
			          FICATION_NAME
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> aa.PROVINCE_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> aa.PLATFORM_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> aa.CUST_TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> aa.FICATION_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE,t2.COUNTS desc
	</select>
	<select id="showGroupDunMoneyFX"  parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(to_char(t2.COUNTS,'9999999999.99'),0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(YQZJ) COUNTS FROM (
				  	select  aa.CREATE_TIME CREATE_DATE,AA.YQZJ
					from (
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       TO_CHAR(CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE) YQL
			  FROM FI_OVERDUE_MONTH
			<where> 
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> PROVINCE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> PLATFORM_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> CUST_TYPE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> CLERK_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> FICATION_NAME=#{DATA_TYPE}</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND PAYLIST_CODE=#{PAYLIST_CODE}</if>
			</where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          FICATION_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          TO_CHAR(CREATE_DATE,'YYYY-MM'),
			          START_DATE,
			          END_DATE
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> aa.PROVINCE_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> aa.PLATFORM_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> aa.CUST_TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> aa.FICATION_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE,t2.COUNTS desc
	</select>
	<select id="showGroupDunTermFX"  parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(to_char(t2.COUNTS,'9999999999'),0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(ALLPERIOD) COUNTS FROM (
				  	select  aa.CREATE_TIME CREATE_DATE,AA.ALLPERIOD
					from (
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       TO_CHAR(CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE) YQL
			  FROM FI_OVERDUE_MONTH
			<where> 
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> PROVINCE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> PLATFORM_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> CUST_TYPE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> CLERK_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> FICATION_NAME=#{DATA_TYPE}</if>
			</where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          FICATION_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          TO_CHAR(CREATE_DATE,'YYYY-MM'),
			          START_DATE,
			          END_DATE
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> aa.PROVINCE_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> aa.PLATFORM_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> aa.CUST_TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> aa.FICATION_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE,t2.COUNTS desc
	</select>
	<select id="showGroupDunDayFX"  parameterType="map" resultType="map">
		  select t1.CREATE_DATE CR,nvl(to_char(t2.COUNTS,'9999999999'),0) COUNTS from (
      				select b.CREATE_DATE from (
						SELECT 
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'mm')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">TO_CHAR(ADD_MONTHS (trunc(sysdate, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">TO_CHAR(ADD_MONTHS (trunc(trunc(sysdate, 'yy')-1, 'mm'), - (ROWNUM - 1)), 'yyyy-mm') </if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">TO_CHAR(ADD_MONTHS (trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), - (ROWNUM - 1)), 'yyyy-mm')</if>
						CREATE_DATE
				  		FROM DUAL CONNECT BY ROWNUM &lt;
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==1">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">MONTHS_BETWEEN(trunc(trunc(sysdate, 'mm')-1, 'mm'), trunc(trunc(sysdate, 'mm')-1, 'mm'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">MONTHS_BETWEEN(trunc(sysdate, 'mm'), trunc(sysdate, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">MONTHS_BETWEEN(trunc(trunc(sysdate, 'yy')-1, 'mm'), trunc(trunc(sysdate, 'yy')-1, 'yy'))+2</if>
						<if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6">MONTHS_BETWEEN(trunc(TO_DATE (#{END_TIME}, 'yyyy-mm-dd'), 'mm'), trunc(TO_DATE (#{START_TIME}, 'yyyy-mm-dd'), 'mm'))+2</if>
					) b order by b.CREATE_DATE
		   )t1
		  left join ( SELECT  T.CREATE_DATE CR,SUM(ALLPENALTY_DAY) COUNTS FROM (
				  	select  aa.CREATE_TIME CREATE_DATE,AA.ALLPENALTY_DAY
					from (
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       TO_CHAR(CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       SUM(PENALTY_DAY)ALLPENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE) YQL
			  FROM FI_OVERDUE_MONTH
			<where> 
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> PROVINCE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> PLATFORM_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> CUST_TYPE_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> CLERK_NAME=#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> FICATION_NAME=#{DATA_TYPE}</if>
			</where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          FICATION_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          TO_CHAR(CREATE_DATE,'YYYY-MM'),
			          START_DATE,
			          END_DATE
					) aa
					<where>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> aa.PROVINCE_NAME=#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> aa.PLATFORM_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> aa.CUST_TYPE_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4"> aa.CLERK_NAME =#{DATA_TYPE}</if>
						<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5"> aa.FICATION_NAME =#{DATA_TYPE}</if>
					</where>
		    
			) T GROUP BY T.CREATE_DATE order by T.CREATE_DATE) t2  on t1.CREATE_DATE=t2.CR
		  order by t1.CREATE_DATE,t2.COUNTS desc
	</select>
	<select id="showDunFXRateDate" parameterType="map" resultType="map">
		SELECT ${SQL_COLUMN} FROM (	 
						 SELECT CC.* ,ROWNUM ROWNO FROM 
						 (SELECT * FROM (	
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       TO_CHAR(CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       TO_CHAR(SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE),'999999999999.99') YQL
			  FROM FI_OVERDUE_MONTH
			  <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(CREATE_DATE)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(CREATE_DATE)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			  </where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          FICATION_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          TO_CHAR(CREATE_DATE,'YYYY-MM'),
			          START_DATE,
			          END_DATE
		)
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">ORDER BY PROVINCE_NAME</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">ORDER BY PLATFORM_NAME</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">ORDER BY CUST_TYPE_NAME</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==4">ORDER BY CLERK_NAME</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==5">ORDER BY FICATION_NAME</if>
			
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==1">,YQL desc</if>
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==2">,YQZJ desc</if>
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==3">,ALLPERIOD desc</if>
			<if test="REPORT_DUN_TYPE !=null and REPORT_DUN_TYPE !='' and REPORT_DUN_TYPE ==4">,PENALTY_DAY desc</if>
		) CC

				<if test="PAGE_END!=null and PAGE_END!=''">	WHERE ROWNUM &lt;= #{PAGE_END}</if>
				) CCC
		 <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''"> WHERE CCC.ROWNO >= #{PAGE_BEGIN}</if>

	</select>
	
	<select id="showDunFXDateRate_count" parameterType="map" resultType="int">
		select count(1) from (
			SELECT CUST_NAME,
			       CUST_TYPE_NAME,
			       PROVINCE_NAME,
			       CITY_NAME,
			       COMPANY_NAME,
			       SUP_NAME,
			       LEASE_CODE,
			       CLERK_NAME,
			       PLATFORM_NAME,
			       FICATION_NAME,
			       STATUS_NAME,
			       PAYLIST_CODE,
			       START_DATE,
			       END_DATE,
			       TO_CHAR(CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(PENALTY_DAY) PENALTY_DAY,
			       MIN(PERIOD) PERIOD,
			       COUNT(PERIOD) ALLPERIOD,
			       SUM(YQZJ) YQZJ,
			       SUM(NVL(WSHJ, 0)) * 100 / SUM(ZJE) YQL
			  FROM FI_OVERDUE_MONTH
			  <where>
  			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==2"> trunc(CREATE_DATE)>=trunc(sysdate, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==3">and trunc(CREATE_DATE)&lt;trunc(sysdate, 'mm') and trunc(CREATE_DATE) >= trunc(trunc(sysdate, 'mm')-1, 'mm')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==4">and trunc(CREATE_DATE)>=trunc(sysdate, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==5">and trunc(CREATE_DATE)&lt;trunc(sysdate, 'yy') and trunc(CREATE_DATE) >= trunc(trunc(sysdate, 'yy')-1, 'yy')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and START_TIME !=null and START_TIME !=''">and trunc(CREATE_DATE)>=to_date(#{START_TIME},'yyyy-MM-dd')</if>
			   <if test="REPORT_DATE !=null and REPORT_DATE !='' and REPORT_DATE ==6 and END_TIME !=null and END_TIME !=''">and trunc(CREATE_DATE)&lt;=to_date(#{END_TIME},'yyyy-MM-dd')</if>
			  </where>
			 GROUP BY CUST_NAME,
			          CUST_TYPE_NAME,
			          PROVINCE_NAME,
			          CITY_NAME,
			          COMPANY_NAME,
			          SUP_NAME,
			          LEASE_CODE,
			          CLERK_NAME,
			          PLATFORM_NAME,
			          FICATION_NAME,
			          STATUS_NAME,
			          PAYLIST_CODE,
			          TO_CHAR(CREATE_DATE,'YYYY-MM'),
			          START_DATE,
			          END_DATE
		)
	</select>
	
	
	
	<select id="showDunProjectRateDate" parameterType="map" resultType="map">
		SELECT * FROM (	 
						 SELECT CC.* ,ROWNUM ROWNO FROM 
						 (
			SELECT FM.CUST_NAME,
			       FM.CUST_TYPE_NAME,
			       FM.PROVINCE_NAME,
			       FM.CITY_NAME,
			       FM.COMPANY_NAME,
			       FM.SUP_NAME,
			       FM.LEASE_CODE,
			       FM.CLERK_NAME,
			       FM.PLATFORM_NAME,
			       FM.FICATION_NAME,
			       FM.STATUS_NAME,
			       FM.PAYLIST_CODE,
			       FM.START_DATE,
			       FM.END_DATE,
			       TO_CHAR(FM.CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(FM.PENALTY_DAY) PENALTY_DAY,
			       MIN(FM.PERIOD) PERIOD,
			       COUNT(FM.PERIOD) ALLPERIOD,
			       SUM(FM.YQZJ) YQZJ,
			       TO_CHAR(SUM(NVL(FM.WSHJ, 0)) * 100 / SUM(FM.ZJE),'999999999999.99') YQL,
			       FRH.PRO_CODE,
			       FRH.ID PROJECT_ID
			  FROM FI_OVERDUE_MONTH FM
			  LEFT JOIN FIL_PROJECT_HEAD FRH ON FM.LEASE_CODE=FRH.LEASE_CODE
			  <where>
			  trunc(FM.CREATE_DATE)>=trunc(sysdate, 'mm')
  			   <if test="CUST_NAME !=null and CUST_NAME !=''">AND FM.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			   <if test="PRO_CODE !=null and PRO_CODE !=''">AND FRH.PRO_CODE like '%'||#{PRO_CODE}||'%'</if>
			   <if test="LEASE_CODE !=null and LEASE_CODE !=''">AND FM.LEASE_CODE like '%'||#{LEASE_CODE}||'%'</if>
			   <if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND FM.PAYLIST_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			  </where>
			 GROUP BY FM.CUST_NAME,
			          FM.CUST_TYPE_NAME,
			          FM.PROVINCE_NAME,
			          FM.CITY_NAME,
			          FM.COMPANY_NAME,
			          FM.SUP_NAME,
			          FM.LEASE_CODE,
			          FM.CLERK_NAME,
			          FM.PLATFORM_NAME,
			          FM.FICATION_NAME,
			          FM.STATUS_NAME,
			          FM.PAYLIST_CODE,
			          TO_CHAR(FM.CREATE_DATE,'YYYY-MM'),
			          FM.START_DATE,
			          FM.END_DATE,
			          FRH.PRO_CODE,
			          FRH.ID 
			         ORDER BY FRH.PRO_CODE,FM.LEASE_CODE,FM.PAYLIST_CODE
		
		) CC

				<if test="PAGE_END!=null and PAGE_END!=''">	WHERE ROWNUM &lt;= #{PAGE_END}</if>
				) CCC
		 <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''"> WHERE CCC.ROWNO >= #{PAGE_BEGIN}</if>

	</select>
	
	<select id="showDunProjectRateDate_count" parameterType="map" resultType="int">
		select count(1) from (
			SELECT FM.CUST_NAME,
			       FM.CUST_TYPE_NAME,
			       FM.PROVINCE_NAME,
			       FM.CITY_NAME,
			       FM.COMPANY_NAME,
			       FM.SUP_NAME,
			       FM.LEASE_CODE,
			       FM.CLERK_NAME,
			       FM.PLATFORM_NAME,
			       FM.FICATION_NAME,
			       FM.STATUS_NAME,
			       FM.PAYLIST_CODE,
			       FM.START_DATE,
			       FM.END_DATE,
			       TO_CHAR(FM.CREATE_DATE,'YYYY-MM')CREATE_TIME,
			       MAX(FM.PENALTY_DAY) PENALTY_DAY,
			       MIN(FM.PERIOD) PERIOD,
			       COUNT(FM.PERIOD) ALLPERIOD,
			       SUM(FM.YQZJ) YQZJ,
			       TO_CHAR(SUM(NVL(FM.WSHJ, 0)) * 100 / SUM(FM.ZJE),'999999999999.99') YQL,
			       FRH.PRO_CODE,
			       FRH.ID PROJECT_ID
			  FROM FI_OVERDUE_MONTH FM
			  LEFT JOIN FIL_PROJECT_HEAD FRH ON FM.LEASE_CODE=FRH.LEASE_CODE
			  <where>
			  trunc(FM.CREATE_DATE)>=trunc(sysdate, 'mm')
  			   <if test="CUST_NAME !=null and CUST_NAME !=''">AND FM.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			   <if test="PRO_CODE !=null and PRO_CODE !=''">AND FRH.PRO_CODE like '%'||#{PRO_CODE}||'%'</if>
			    <if test="LEASE_CODE !=null and LEASE_CODE !=''">AND FM.LEASE_CODE like '%'||#{LEASE_CODE}||'%'</if>
			   <if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND FM.PAYLIST_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			  </where>
			 GROUP BY FM.CUST_NAME,
			          FM.CUST_TYPE_NAME,
			          FM.PROVINCE_NAME,
			          FM.CITY_NAME,
			          FM.COMPANY_NAME,
			          FM.SUP_NAME,
			          FM.LEASE_CODE,
			          FM.CLERK_NAME,
			          FM.PLATFORM_NAME,
			          FM.FICATION_NAME,
			          FM.STATUS_NAME,
			          FM.PAYLIST_CODE,
			          TO_CHAR(FM.CREATE_DATE,'YYYY-MM'),
			          FM.START_DATE,
			          FM.END_DATE,
			          FRH.PRO_CODE,
			          FRH.ID 
		)
	</select>
	
	<select id="BJFX_REPORT_TYPE"  parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CLERK_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.FICATION_NAME DATA_TYPE</if>
		from (
			select fph.clerk_name,fph.province_name,FICATION.FLAG FICATION_NAME 
				from fil_project_head fph
				left join (SELECT Tdd.code, tdd.flag FROM t_sys_data_dictionary tdd where tdd.type = '行业类型') FICATION on fph.INDUSTRY_FICATION=FICATION.code
 				<where>
 					<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">PROVINCE_NAME is not null</if>
					<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">CLERK_NAME is not null</if>
					<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">FICATION.FLAG is not null</if>
 				</where>
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.FICATION_NAME</if>
	</select>	
	
	<select id="queryDunMoneyList" parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME DATA_TYPE,ROUND(sum(NVL(aa.DUN_MONEY,0)),2) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CLERK_NAME DATA_TYPE,ROUND(sum(NVL(aa.DUN_MONEY,0)),2) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.FICATION_NAME DATA_TYPE,ROUND(sum(NVL(aa.DUN_MONEY,0)),2) DATA_VALUE</if>
		from (
			select fo.pay_code,ROUND(sum(NVL(fo.RENT_RECE,0) - NVL(fo.RENT_PAID,0)),2) DUN_MONEY
			,fph.clerk_name,fph.province_name,FICATION.FLAG FICATION_NAME  from fi_overdue fo
			left join fil_rent_plan_head_max_v frph on fo.pay_code=frph.PAYLIST_CODE
			left join fil_project_head fph on frph.PROJECT_ID=fph.id
			left join (SELECT Tdd.code, tdd.flag FROM t_sys_data_dictionary tdd where tdd.type = '行业类型') FICATION on fph.INDUSTRY_FICATION=FICATION.code
			where trunc(fo.create_date)=trunc(sysdate) 
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> and PROVINCE_NAME =#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> and CLERK_NAME =#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> and FICATION.FLAG =#{DATA_TYPE}</if>
			group by fo.pay_code,fph.clerk_name,fph.province_name,FICATION.FLAG
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.FICATION_NAME</if>
	</select>
	
	<select id="queryYQLList" parameterType="map" resultType="map">
		select 
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">aa.PROVINCE_NAME DATA_TYPE,ROUND(sum(aa.beginning_paid) * 100/sum(aa.beginning_money),2) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">aa.CLERK_NAME DATA_TYPE,ROUND(sum(aa.beginning_paid) * 100/sum(aa.beginning_money),2) DATA_VALUE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">aa.FICATION_NAME DATA_TYPE,ROUND(sum(aa.beginning_paid) * 100/sum(aa.beginning_money),2) DATA_VALUE</if>
		from (
			select frb.paylist_code,ROUND(sum(NVL(frb.beginning_money,0)),2) beginning_money,ROUND(sum(NVL(frb.beginning_money,0))-sum(NVL(frb.beginning_paid,0)),2) beginning_paid
			,fph.clerk_name,fph.province_name,FICATION.FLAG FICATION_NAME
			from fi_r_beginning frb
			left join fil_rent_plan_head_max_v frph on frb.paylist_code=frph.PAYLIST_CODE
			left join fil_project_head fph on frph.PROJECT_ID=fph.id
			left join (SELECT Tdd.code, tdd.flag FROM t_sys_data_dictionary tdd where tdd.type = '行业类型') FICATION on fph.INDUSTRY_FICATION=FICATION.code
			where frb.item_flag=2
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> and PROVINCE_NAME =#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> and CLERK_NAME =#{DATA_TYPE}</if>
			<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> and FICATION.FLAG =#{DATA_TYPE}</if>
			group by frb.paylist_code,fph.clerk_name,fph.province_name,FICATION.FLAG
		) aa
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">group by aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">group by aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">group by aa.FICATION_NAME</if>
	</select>
	
	
	<select id="queryIRRCashFlowList" parameterType="map" resultType="map">
		select aa.PAY_DATE,ROUND(SUM(NVL(aa.MONEY,0)),2) MONEY
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">,aa.PROVINCE_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">,aa.CLERK_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">,aa.FICATION_NAME DATA_TYPE</if>
		from (
			SELECT TRUNC(T.PAY_DATE) PAY_DATE, SUM(T.MONEY) MONEY,fph.PROVINCE_NAME,fph.CLERK_NAME,FICATION.FLAG FICATION_NAME
			  FROM (
			        --租金
			        SELECT FRB.PROJECT_ID,
			                CASE
			                  WHEN FFD.D_REALITY_DATE IS NOT NULL THEN
			                   FFD.D_REALITY_DATE
			                  ELSE
			                   FRB.BEGINNING_RECEIVE_DATA
			                END PAY_DATE,
			                CASE
			                  WHEN FFD.D_RECEIVE_MONEY IS NOT NULL THEN
			                   FFD.D_RECEIVE_MONEY
			                  ELSE
			                   FRB.BEGINNING_MONEY
			                END MONEY
			          FROM FI_R_BEGINNING FRB,
			                (SELECT FD.D_BEGING_ID,
			                        FD.D_PAY_PROJECT,
			                        FD.D_REALITY_DATE,
			                        FD.D_RECEIVE_MONEY
			                   FROM FI_FUND_DETAIL FD
			                  WHERE FD.D_REALITY_DATE IS NOT NULL
			                    AND FD.D_VINUAL_STATUS = 0) FFD
			         WHERE FRB.BEGINNING_ID = FFD.D_BEGING_ID(+)
			           AND (FRB.BEGINNING_RECEIVE_DATA IS not NULL or FFD.D_REALITY_DATE IS NOT NULL)
			        UNION ALL
			        --违约金
			        SELECT FPH.ID              PROJECT_ID,
			               WYJ.D_RECEIVE_DATE  PAY_DATE,
			               WYJ.D_RECEIVE_MONEY MONEY
			          FROM FI_FUND_DETAIL WYJ, FIL_PROJECT_HEAD FPH
			         WHERE WYJ.D_REALITY_DATE IS NOT NULL
			           AND WYJ.D_RECEIVE_MONEY IS NOT NULL
			           AND WYJ.D_BEGING_ID IS NULL
			           AND WYJ.D_VINUAL_STATUS = 0
			           AND WYJ.D_PROJECT_CODE = FPH.PRO_CODE(+)
			        UNION ALL
			        --项目花费
			        SELECT FSP.PROJECT_ID,
			               FSP.SPEND_DATE   PAY_DATE,
			               -FSP.SPEND_MONEY MONEY
			          FROM FIL_SPEND_PROJECT FSP
			         WHERE FSP.SPEND_DATE IS NOT NULL
			           AND FSP.SPEND_MONEY IS NOT NULL
			        UNION ALL
			        --设备款
			        SELECT FRPH.PROJECT_ID,
			               CASE
			                 WHEN FPD.PAY_DATE IS NOT NULL THEN
			                  FPD.PAY_DATE
			                 ELSE
			                  FRPH.START_DATE
			               END PAY_DATE,
			               CASE
			                 WHEN FPD.MONEY IS NOT NULL THEN
			                  FPD.MONEY
			                 ELSE
			                  -FRPH.LEASE_TOPRIC
			               END MONEY
			          FROM FIL_RENT_PLAN_HEAD_MAX_V FRPH,
			               (SELECT FK.ID PROJECT_ID,
			                       FFPD.PAYLIST_CODE,
			                       CASE
			                         WHEN FFPD.REALITY_DATE IS NOT NULL THEN
			                          FFPD.REALITY_DATE
			                         ELSE
			                          FFPD.RESERVE_DATE
			                       END PAY_DATE,
			                       -FFPD.PAY_MONEY MONEY
			                  FROM FI_FUND_PAYMENT_DETAIL FFPD, FIL_PROJECT_HEAD FK
			                 WHERE FFPD.STATUS != -2
			                   AND FFPD.PROJECT_CODE = FK.PRO_CODE(+)
			                   AND FFPD.RESERVE_DATE IS NOT NULL
			                   AND FFPD.PAY_NAME = '设备款') FPD
			         WHERE FRPH.PAYLIST_CODE = FPD.PAYLIST_CODE(+) and FRPH.STATUS NOT IN (1, 2, 22, 23)
			        UNION ALL
			        --其他应付款项
			        SELECT FK.ID PROJECT_ID,
			               CASE
			                 WHEN FFPD.REALITY_DATE IS NOT NULL THEN
			                  FFPD.REALITY_DATE
			                 ELSE
			                  FFPD.RESERVE_DATE
			               END PAY_DATE,
			               -FFPD.PAY_MONEY MONEY
			          FROM FI_FUND_PAYMENT_DETAIL FFPD, FIL_PROJECT_HEAD FK
			         WHERE FFPD.STATUS != -2
			           AND FFPD.PROJECT_CODE = FK.PRO_CODE(+)
			           AND FFPD.RESERVE_DATE IS NOT NULL
			           AND FFPD.PAY_NAME != '设备款'
	 				UNION ALL
	           --保险返利
	            SELECT E.PROJECT_ID         PROJECT_ID,
	                   I1.INSU_START_DATE   PAY_DATE,
	                   I1.INSU_PRICE_REBATE MONEY
	              FROM T_INSU_INSURANCELIST  I1,
	                   FIL_PROJECT_EQUIPMENT E,
	                   T_INSU_INSULIST2EMPT  I2
	             WHERE I1.INCU_ID(+) = I2.INSU_ID
	               AND E.ID(+) = I2.EQMT_ID
	               AND I1.STATUS != 1
			           ) T
			 left join fil_project_head fph on T.PROJECT_ID=fph.id
			 left join (SELECT HY.INDUSTRY_CODE code,--行业类型
								HY.INDUSTRY_NAME flag
								FROM FIL_INDUSTRY HY) FICATION on fph.INDUSTRY_FICATION=FICATION.code
			 <where>
			 	T.PAY_DATE is not null
			 	<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> and fph.PROVINCE_NAME =#{DATA_TYPE}</if>
				<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> and fph.CLERK_NAME =#{DATA_TYPE}</if>
				<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> and FICATION.FLAG =#{DATA_TYPE}</if>
			 </where>
			 GROUP BY TRUNC(T.PAY_DATE),fph.PROVINCE_NAME,fph.CLERK_NAME,FICATION.FLAG
		) aa
		GROUP BY aa.PAY_DATE
		 <if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">,aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">,aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">,aa.FICATION_NAME</if>
		order by aa.PAY_DATE
	</select>
	
	<select id="querySYList" parameterType="map" resultType="map">
		select ROUND(SUM(NVL(aa.MONEY,0)),2) DATA_VALUE
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">,aa.PROVINCE_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">,aa.CLERK_NAME DATA_TYPE</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">,aa.FICATION_NAME DATA_TYPE</if>
		from (
			SELECT SUM(T.MONEY) MONEY,fph.PROVINCE_NAME,fph.CLERK_NAME,FICATION.FLAG FICATION_NAME
			  FROM (
				        select NVL(fr.MONEY,0)-NVL(FSP.SPEND_MONEY,0) MONEY,fph.ID PROJECT_ID from fil_project_head fph
	                 left join (
	                      select round(sum(NVL(frb.beginning_money,0)),2) MONEY,frb.project_id from fi_r_beginning frb where (frb.beginning_name='利息' or frb.item_flag=4)
	                      group by frb.project_id
	                 ) fr on fph.id=fr.project_id
	                 left join FIL_SPEND_PROJECT fsp on fph.id=fsp.project_id
			     ) T
			 left join fil_project_head fph on T.PROJECT_ID=fph.id
			 left join (SELECT HY.INDUSTRY_CODE code,--行业类型
								HY.INDUSTRY_NAME flag
								FROM FIL_INDUSTRY HY) FICATION on fph.INDUSTRY_FICATION=FICATION.code
			 <where>
			 	<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1"> and fph.PROVINCE_NAME =#{DATA_TYPE}</if>
				<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3"> and fph.CLERK_NAME =#{DATA_TYPE}</if>
				<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2"> and FICATION.FLAG =#{DATA_TYPE}</if>
			 </where>
			 GROUP BY fph.PROVINCE_NAME,fph.CLERK_NAME,FICATION.FLAG
		) aa
		 <if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==1">GROUP BY aa.PROVINCE_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==3">GROUP BY aa.CLERK_NAME</if>
		<if test="REPORT_TYPE !=null and REPORT_TYPE !='' and REPORT_TYPE ==2">GROUP BY aa.FICATION_NAME</if>
	</select>
</mapper>