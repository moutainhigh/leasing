<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="fi.fund">

	<select id="getFundAll" parameterType="String" resultType="Map">
		SELECT T.*,to_char(T.FUND_ACCEPT_DATE,'yyyy-MM-dd') FUND_ACCEPT_DATE1
		FROM FI_FUND T WHERE T.FUND_ID = #{FUND_ID}
	</select>

	<insert id="add" parameterType="java.util.Map">
		insert into FI_FUND(
		<if test="FUND_CLIENT_ID!=null and FUND_CLIENT_ID !=''">FUND_CLIENT_ID,</if>
		<if test="FUND_CLIENT_NAME!=null and FUND_CLIENT_NAME !=''">FUND_CLIENT_NAME,</if>
		<if test="FUND_FUNDCODE!=null and FUND_FUNDCODE !=''">FUND_FUNDCODE,</if>
		<if test="FUND_COMECODE!=null and FUND_COMECODE !=''">FUND_COMECODE,</if>
		<if test="FUND_COMENAME!=null and FUND_COMENAME !=''">FUND_COMENAME,</if>
		<if test="FUND_ACCEPT_CODE!=null and FUND_ACCEPT_CODE !=''">FUND_ACCEPT_CODE,</if>
		<if test="FUND_ACCEPT_NAME!=null and FUND_ACCEPT_NAME !=''">FUND_ACCEPT_NAME,</if>
		<if test="FUND_ACCEPT_DATE!=null and FUND_ACCEPT_DATE !=''">FUND_ACCEPT_DATE,</if>
		<if test="FUND_CERTIFICATE_TYPE!=null and FUND_CERTIFICATE_TYPE !=''">FUND_CERTIFICATE_TYPE,</if>
		<if test="FUND_CERTIFICATE_NUM!=null and FUND_CERTIFICATE_NUM !=''">FUND_CERTIFICATE_NUM,</if>
		<if test="FUND_RECEIVE_MONEY!=null and FUND_RECEIVE_MONEY !=''">FUND_RECEIVE_MONEY,</if>
		<if test="FUND_SY_MONEY!=null and FUND_SY_MONEY !=''">FUND_SY_MONEY,</if>
		<if test="FUND_BUSINESS_NUM!=null and FUND_BUSINESS_NUM !=''">FUND_BUSINESS_NUM,</if>
		<if test="FUND_BORROWING_LOGO!=null and FUND_BORROWING_LOGO !=''">FUND_BORROWING_LOGO,</if>
		<if test="FUND_DOCKET!=null and FUND_DOCKET !=''">FUND_DOCKET,</if>
		<if test="FUND_MONEY_TYPE!=null and FUND_MONEY_TYPE !=''">FUND_MONEY_TYPE,</if>
		<if test="FUND_MATCH_DATE!=null and FUND_MATCH_DATE !=''">FUND_MATCH_DATE,</if>
		<if test="FUND_PIDENTIFY_PERSON!=null and FUND_PIDENTIFY_PERSON !=''">FUND_PIDENTIFY_PERSON,</if>
		<if test="FUND_PIDENTIFY_PERSON_ID!=null and FUND_PIDENTIFY_PERSON_ID !=''">FUND_PIDENTIFY_PERSON_ID,</if>
		<if test="FUND_IMPORT_PERSON!=null and FUND_IMPORT_PERSON !=''">FUND_IMPORT_PERSON,</if>
		<if test="FUND_IMPORT_PERSON_ID!=null and FUND_IMPORT_PERSON_ID !=''">FUND_IMPORT_PERSON_ID,</if>
		<if test="FUND_IMPORT_TYPE!=null and FUND_IMPORT_TYPE !=''">FUND_IMPORT_TYPE,</if>
		<if test="FUND_IMPORT_FILE!=null and FUND_IMPORT_FILE !=''">FUND_IMPORT_FILE,</if>
		<if test="FUND_CONFIRMATION_DATE!=null and FUND_CONFIRMATION_DATE !=''">FUND_CONFIRMATION_DATE,</if>
		<if test="FUND_CONFIRMATION_PERSON!=null and FUND_CONFIRMATION_PERSON !=''">FUND_CONFIRMATION_PERSON,</if>
		<if test="FUND_CONFIRMATION_PERSON_ID!=null and FUND_CONFIRMATION_PERSON_ID !=''">FUND_CONFIRMATION_PERSON_ID,</if>
		<if test="FUND_DECOMPOUND_DATE!=null and FUND_DECOMPOUND_DATE !=''">FUND_DECOMPOUND_DATE,</if>
		<if test="FUND_DECOMPOUND_PERSON!=null and FUND_DECOMPOUND_PERSON !=''">FUND_DECOMPOUND_PERSON,</if>
		<if test="FUND_DECOMPOUND_PERSON_ID!=null and FUND_DECOMPOUND_PERSON_ID !=''">FUND_DECOMPOUND_PERSON_ID,</if>
		<if test="FUND_MEMO!=null and FUND_MEMO !=''">FUND_MEMO,</if>
		<if test="FUND_TACTICS!=null and FUND_TACTICS !=''">FUND_TACTICS,</if>
		<if test="FUND_FILEURL!=null and FUND_FILEURL !=''">FUND_FILEURL,</if>
		<if test="FUND_NOTDECO_STATE!=null and FUND_NOTDECO_STATE !=''">FUND_NOTDECO_STATE,</if>
		<if test="FUND_STATUS!=null and FUND_STATUS !=''">FUND_STATUS,</if>
		<if test="FUND_ISCONGEAL!=null and FUND_ISCONGEAL !=''">FUND_ISCONGEAL,</if>
		<if test="FUND_RED_STATUS!=null and FUND_RED_STATUS !=''">FUND_RED_STATUS,</if>
		<if test="FUND_PRANT_ID!=null and FUND_PRANT_ID !=''">FUND_PRANT_ID,</if>
		<if test="FUND_BUDGET_ID!=null and FUND_BUDGET_ID !=''">FUND_BUDGET_ID,</if>
		<if test="FUND_PAY_CODE!=null and FUND_PAY_CODE !=''">FUND_PAY_CODE,</if>
		<if test="FUND_PAY_PROJECT!=null and FUND_PAY_PROJECT !=''">FUND_PAY_PROJECT,</if>
		<if test="FUND_PAY_COPE!=null and FUND_PAY_COPE !=''">FUND_PAY_COPE,</if>
		<if test="FUND_PAY_CODE_DATE !=null and FUND_PAY_CODE_DATE !=''">FUND_PAY_CODE_DATE,</if>
		<if test="FUND_BEGINNING_ID !=null and FUND_BEGINNING_ID !=''">FUND_BEGINNING_ID,</if>
		<if test="FUND_COMMIT_STATUS !=null and FUND_COMMIT_STATUS !=''">FUND_COMMIT_STATUS,</if>
		<if test="FUND_SPLIT_PRANT !=null and FUND_SPLIT_PRANT !=''">FUND_SPLIT_PRANT,</if>
		<if test="AUTOFLAG!=null and AUTOFLAG!=''">AUTOFLAG,</if>
		<if test="FUND_TYPE!=null and FUND_TYPE!=''">FUND_TYPE,</if>
		<if test="FUND_ADVANCE!=null and FUND_ADVANCE!=''">FUND_ADVANCE,</if>
		<if test="FUND_BUDGET_DIFFER!=null and FUND_BUDGET_DIFFER!=''">FUND_BUDGET_DIFFER,</if>
		FUND_IMPORT_DATE,
		FUND_ID
		)values(
		<if test="FUND_CLIENT_ID!=null and FUND_CLIENT_ID !=''">#{FUND_CLIENT_ID},</if>
		<if test="FUND_CLIENT_NAME !=null and FUND_CLIENT_NAME !=''">#{FUND_CLIENT_NAME},</if>
		<if test="FUND_FUNDCODE!=null and FUND_FUNDCODE !=''">#{FUND_FUNDCODE},</if>
		<if test="FUND_COMECODE!=null and FUND_COMECODE !=''">#{FUND_COMECODE},</if>
		<if test="FUND_COMENAME!=null and FUND_COMENAME !=''">#{FUND_COMENAME},</if>
		<if test="FUND_ACCEPT_CODE!=null and FUND_ACCEPT_CODE !=''">#{FUND_ACCEPT_CODE},</if>
		<if test="FUND_ACCEPT_NAME!=null and FUND_ACCEPT_NAME !=''">#{FUND_ACCEPT_NAME},</if>
		<if test="FUND_ACCEPT_DATE!=null and FUND_ACCEPT_DATE !=''">to_date(#{FUND_ACCEPT_DATE},'yyyy-mm-dd'),</if>
		<if test="FUND_CERTIFICATE_TYPE!=null and FUND_CERTIFICATE_TYPE !=''">#{FUND_CERTIFICATE_TYPE},</if>
		<if test="FUND_CERTIFICATE_NUM!=null and FUND_CERTIFICATE_NUM !=''">#{FUND_CERTIFICATE_NUM},</if>
		<if test="FUND_RECEIVE_MONEY!=null and FUND_RECEIVE_MONEY !=''">#{FUND_RECEIVE_MONEY},</if>
		<if test="FUND_SY_MONEY!=null and FUND_SY_MONEY !=''">#{FUND_SY_MONEY},</if>
		<if test="FUND_BUSINESS_NUM!=null and FUND_BUSINESS_NUM !=''">#{FUND_BUSINESS_NUM},</if>
		<if test="FUND_BORROWING_LOGO!=null and FUND_BORROWING_LOGO !=''">#{FUND_BORROWING_LOGO},</if>
		<if test="FUND_DOCKET!=null and FUND_DOCKET !=''">#{FUND_DOCKET},</if>
		<if test="FUND_MONEY_TYPE!=null and FUND_MONEY_TYPE !=''">#{FUND_MONEY_TYPE},</if>
		<if test="FUND_MATCH_DATE!=null and FUND_MATCH_DATE !=''">#{FUND_MATCH_DATE},</if>
		<if test="FUND_PIDENTIFY_PERSON!=null and FUND_PIDENTIFY_PERSON !=''">#{FUND_PIDENTIFY_PERSON},</if>
		<if test="FUND_PIDENTIFY_PERSON_ID!=null and FUND_PIDENTIFY_PERSON_ID !=''">#{FUND_PIDENTIFY_PERSON_ID},</if>
		<if test="FUND_IMPORT_PERSON!=null and FUND_IMPORT_PERSON !=''">#{FUND_IMPORT_PERSON},</if>
		<if test="FUND_IMPORT_PERSON_ID!=null and FUND_IMPORT_PERSON_ID !=''">#{FUND_IMPORT_PERSON_ID},</if>
		<if test="FUND_IMPORT_TYPE!=null and FUND_IMPORT_TYPE !=''">#{FUND_IMPORT_TYPE},</if>
		<if test="FUND_IMPORT_FILE!=null and FUND_IMPORT_FILE !=''">#{FUND_IMPORT_FILE},</if>
		<if test="FUND_CONFIRMATION_DATE!=null and FUND_CONFIRMATION_DATE !=''">#{FUND_CONFIRMATION_DATE},</if>
		<if test="FUND_CONFIRMATION_PERSON!=null and FUND_CONFIRMATION_PERSON !=''">#{FUND_CONFIRMATION_PERSON},</if>
		<if test="FUND_CONFIRMATION_PERSON_ID!=null and FUND_CONFIRMATION_PERSON_ID !=''">#{FUND_CONFIRMATION_PERSON_ID},</if>
		<if test="FUND_DECOMPOUND_DATE!=null and FUND_DECOMPOUND_DATE !=''">#{FUND_DECOMPOUND_DATE},</if>
		<if test="FUND_DECOMPOUND_PERSON!=null and FUND_DECOMPOUND_PERSON !=''">#{FUND_DECOMPOUND_PERSON},</if>
		<if test="FUND_DECOMPOUND_PERSON_ID!=null and FUND_DECOMPOUND_PERSON_ID !=''">#{FUND_DECOMPOUND_PERSON_ID},</if>
		<if test="FUND_MEMO!=null and FUND_MEMO !=''">#{FUND_MEMO,jdbcType=CLOB},</if>
		<if test="FUND_TACTICS!=null and FUND_TACTICS !=''">#{FUND_TACTICS},</if>
		<if test="FUND_FILEURL!=null and FUND_FILEURL !=''">#{FUND_FILEURL},</if>
		<if test="FUND_NOTDECO_STATE!=null and FUND_NOTDECO_STATE !=''">#{FUND_NOTDECO_STATE,jdbcType=VARCHAR},</if>
		<if test="FUND_STATUS!=null and FUND_STATUS !=''">#{FUND_STATUS,jdbcType=VARCHAR},</if>
		<if test="FUND_ISCONGEAL!=null and FUND_ISCONGEAL !=''">#{FUND_ISCONGEAL,jdbcType=VARCHAR},</if>
		<if test="FUND_RED_STATUS!=null and FUND_RED_STATUS !=''">#{FUND_RED_STATUS,jdbcType=VARCHAR},</if>
		<if test="FUND_PRANT_ID!=null and FUND_PRANT_ID !=''">#{FUND_PRANT_ID,jdbcType=VARCHAR},</if>
		<if test="FUND_BUDGET_ID!=null and FUND_BUDGET_ID !=''">#{FUND_BUDGET_ID,jdbcType=VARCHAR},</if>
		<if test="FUND_PAY_CODE!=null and FUND_PAY_CODE !=''">#{FUND_PAY_CODE,jdbcType=VARCHAR},</if>
		<if test="FUND_PAY_PROJECT!=null and FUND_PAY_PROJECT !=''">#{FUND_PAY_PROJECT,jdbcType=VARCHAR},</if>
		<if test="FUND_PAY_COPE!=null and FUND_PAY_COPE !=''">#{FUND_PAY_COPE,jdbcType=VARCHAR},</if>
		<if test="FUND_PAY_CODE_DATE !=null and FUND_PAY_CODE_DATE !=''">#{FUND_PAY_CODE_DATE,jdbcType=DATE},</if>
		<if test="FUND_BEGINNING_ID !=null and FUND_BEGINNING_ID !=''">#{FUND_BEGINNING_ID,jdbcType=VARCHAR},</if>
		<if test="FUND_COMMIT_STATUS !=null and FUND_COMMIT_STATUS !=''">#{FUND_COMMIT_STATUS,jdbcType=VARCHAR},</if>
		<if test="FUND_SPLIT_PRANT !=null and FUND_SPLIT_PRANT !=''">#{FUND_SPLIT_PRANT,jdbcType=VARCHAR},</if>
		<if test="AUTOFLAG!=null and AUTOFLAG!=''">#{AUTOFLAG},</if>
		<if test="FUND_TYPE!=null and FUND_TYPE!=''">#{FUND_TYPE},</if>
		<if test="FUND_ADVANCE!=null and FUND_ADVANCE!=''">#{FUND_ADVANCE},</if>
		<if test="FUND_BUDGET_DIFFER!=null and FUND_BUDGET_DIFFER!=''">#{FUND_BUDGET_DIFFER},</if>
		SYSDATE,
		#{FUND_ID}
		)
	</insert>

	<select id="getFundId" resultType="string">
		SELECT SEQ_FI_FUND.NEXTVAL FROM DUAL
	</select>

	<select id="getFundCode" resultType="string">
		SELECT 'ZJ'||TO_CHAR(SYSDATE,'YYYYMMDD')||TRIM(TO_CHAR(SEQ_FI_FUNDCODE.NEXTVAL,'000000000')) FROM DUAL
	</select>

	<select id="getPageList" parameterType="map" resultType="map">
	SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
		SELECT T.FUND_ID,
		T.FUND_FUNDCODE,
		T.FUND_COMENAME,
		T.FUND_ACCEPT_NAME,
		T.FUND_RECEIVE_MONEY,
		T.FUND_CLIENT_ID,
		TO_CHAR(T.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		T.FUND_DOCKET,
		T.FUND_PIDENTIFY_PERSON,
		T.FUND_CLIENT_NAME,
		T.FUND_STATUS,
		T.FUND_TYPE
		FROM FI_FUND T
		<where>
			FUND_PRANT_ID = 0
			<if test="ID != null and ID != ''"> AND FUND_IMPORT_PERSON_ID IN 
				(SELECT U.ID
				  FROM SECU_USER U
				 WHERE U.ID IN
				       (SELECT UO.USER_ID
				          FROM SECU_USER_ORG UO
				         WHERE UO.ORG_ID IN
				               (SELECT O.ID
				                  FROM SECU_ORG O
				                 WHERE O.PARENT_ID IN
				                       (SELECT SO.ID
				                          from SECU_ORG SO
				                         WHERE SO.PARENT_ID IS NOT NULL
				                           AND SO.PARENT_ID NOT IN (0, 1)
				                           AND SO.NAME NOT LIKE '%汽车%'
				                         START WITH SO.PARENT_ID IN
				                                    (SELECT O.PARENT_ID
				                                       FROM SECU_ORG O
				                                      WHERE O.ID IN
				                                            (SELECT O.ORG_ID
				                                               FROM SECU_USER_ORG O
				                                              WHERE O.USER_ID IN
				                                                    (SELECT S.ID
				                                                       FROM SECU_USER S
				                                                      WHERE S.ID = #{ID})))
				                        CONNECT BY PRIOR SO.PARENT_ID = SO.ID))))
			</if>
			<if test="FUND_FUNDCODE != null and FUND_FUNDCODE != ''">AND FUND_FUNDCODE LIKE '%${FUND_FUNDCODE}%'</if>
			<if test="FUND_COMENAME != null and FUND_COMENAME != ''">AND FUND_COMENAME LIKE '%${FUND_COMENAME}%'</if>
			<if test="FUND_ACCEPT_NAME != null and FUND_ACCEPT_NAME != ''">AND FUND_ACCEPT_NAME LIKE '%${FUND_ACCEPT_NAME}%'</if>
			<if test="FUND_CLIENT_NAME != null and FUND_CLIENT_NAME != ''">AND FUND_CLIENT_NAME LIKE '%${FUND_CLIENT_NAME}%'</if>
			<if test="FUND_RECEIVE_MONEY_START != null and FUND_RECEIVE_MONEY_START != ''">AND FUND_RECEIVE_MONEY >= ${FUND_RECEIVE_MONEY_START}</if>
			<if test="FUND_RECEIVE_MONEY_END != null and FUND_RECEIVE_MONEY_END != ''">AND FUND_RECEIVE_MONEY &lt;= ${FUND_RECEIVE_MONEY_END}</if>
			<if test="FUND_IMPORT_PERSON_ID != null and FUND_IMPORT_PERSON_ID != ''">AND FUND_IMPORT_PERSON_ID = ${FUND_IMPORT_PERSON_ID}</if>
		</where>
		ORDER BY T.FUND_STATUS,CREATE_DATE DESC
		) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>

	<select id="getPageCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM FI_FUND T
		<where>
			FUND_PRANT_ID = 0
			<if test="ID != null and ID != ''"> AND FUND_IMPORT_PERSON_ID IN 
				(SELECT U.ID
				  FROM SECU_USER U
				 WHERE U.ID IN
				       (SELECT UO.USER_ID
				          FROM SECU_USER_ORG UO
				         WHERE UO.ORG_ID IN
				               (SELECT O.ID
				                  FROM SECU_ORG O
				                 WHERE O.PARENT_ID IN
				                       (SELECT SO.ID
				                          from SECU_ORG SO
				                         WHERE SO.PARENT_ID IS NOT NULL
				                           AND SO.PARENT_ID NOT IN (0, 1)
				                           AND SO.NAME NOT LIKE '%汽车%'
				                         START WITH SO.PARENT_ID IN
				                                    (SELECT O.PARENT_ID
				                                       FROM SECU_ORG O
				                                      WHERE O.ID IN
				                                            (SELECT O.ORG_ID
				                                               FROM SECU_USER_ORG O
				                                              WHERE O.USER_ID IN
				                                                    (SELECT S.ID
				                                                       FROM SECU_USER S
				                                                      WHERE S.ID = #{ID})))
				                        CONNECT BY PRIOR SO.PARENT_ID = SO.ID))))
			</if>
			<if test="FUND_FUNDCODE != null and FUND_FUNDCODE != ''">AND FUND_FUNDCODE LIKE '%${FUND_FUNDCODE}%'</if>
			<if test="FUND_COMENAME != null and FUND_COMENAME != ''">AND FUND_COMENAME LIKE '%${FUND_COMENAME}%'</if>
			<if test="FUND_ACCEPT_NAME != null and FUND_ACCEPT_NAME != ''">AND FUND_ACCEPT_NAME LIKE '%${FUND_ACCEPT_NAME}%'</if>
			<if test="FUND_CLIENT_NAME != null and FUND_CLIENT_NAME != ''">AND FUND_CLIENT_NAME LIKE '%${FUND_CLIENT_NAME}%'</if>
			<if test="FUND_RECEIVE_MONEY_START != null and FUND_RECEIVE_MONEY_START != ''">AND FUND_RECEIVE_MONEY >= ${FUND_RECEIVE_MONEY_START}</if>
			<if test="FUND_RECEIVE_MONEY_END != null and FUND_RECEIVE_MONEY_END != ''">AND FUND_RECEIVE_MONEY &lt;= ${FUND_RECEIVE_MONEY_END}</if>
			<if test="FUND_IMPORT_PERSON_ID != null and FUND_IMPORT_PERSON_ID != ''">AND FUND_IMPORT_PERSON_ID = ${FUND_IMPORT_PERSON_ID}</if>
		</where>
	</select>

	<select id="getDfj" parameterType="Map" resultType="Object">
		SELECT SUM(FF.FUND_RECEIVE_MONEY) DFJ
		FROM FI_FUND FF
		WHERE FF.FUND_STATUS = 0
		START WITH FF.FUND_ID = #{FUND_ID}
		CONNECT BY PRIOR FF.FUND_ID = FF.FUND_PRANT_ID
	</select>

	<select id="getFundDetail" parameterType="Map" resultType="Map">
		SELECT FFD.*
		FROM FI_FUND_HEAD FFH,
		(SELECT FF.FUND_ID
		FROM FI_FUND FF
		START WITH FF.FUND_ID = #{FUND_ID}
		CONNECT BY PRIOR FF.FUND_ID = FF.FUND_PRANT_ID) FF,
		FI_FUND_DETAIL FFD
		WHERE FF.FUND_ID = FFH.FUND_ID
		AND FFH.ID = FFD.D_FUND_ID
		ORDER BY FFD.D_PAY_CODE, FFD.PERIOD NULLS FIRST, FFD.D_PAY_PROJECT DESC
	</select>

	<delete id="delFund" parameterType="map">
		DELETE FI_FUND WHERE FUND_ID = #{FUND_ID} AND FUND_STATUS = 0 AND
		FUND_PRANT_ID = 0
	</delete>

	<select id="getCompany" parameterType="Map" resultType="String">
		SELECT
		MAX(SO.NAME) NAME
		FROM SECU_ORG SO
		WHERE SO.PARENT_ID = 1
		GROUP BY SO.NAME
		START WITH SO.ID IN (SELECT T.ORG_ID FROM SECU_USER_ORG T WHERE T.USER_ID =
		#{USERID} )
		CONNECT BY PRIOR SO.PARENT_ID = SO.ID

	</select>

	<select id="getCompanyCopy" parameterType="Map" resultType="Map">
		SELECT MAX(SO.NAME) NAME,max(so.ID) ID
		FROM SECU_ORG SO
		WHERE SO.PARENT_ID = 1
		GROUP BY SO.NAME
		START WITH SO.ID IN (SELECT T.ORG_ID FROM SECU_USER_ORG T WHERE T.USER_ID =
		#{USERID} )
		CONNECT BY PRIOR SO.PARENT_ID = SO.ID

	</select>

	<select id="getPTInfo" parameterType="Map" resultType="Map">
		select
		ORGANIZATION_ID ID from FHFA_MANAGER FM where FM.ID=#{PLATFORMID}

	</select>

	<select id="getBank" parameterType="Map" resultType="Map">
		SELECT ('('
		|| tsb.bank_name || ')' || tsba.account_no) bank FROM
		T_SYS_BANK_ACCOUNT tsba,T_SYS_BANK tsb WHERE tsba.babi_id =
		tsb.babi_id
	</select>

	<select id="fundBankPageList" parameterType="map" resultType="map">
		SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
		select
		FM.FA_BINK,FM.FA_ACCOUNT from FHFA_MANAGER_BANK_INFO FM,fhfa_manager F
		where F.Id=FM.Manager_Id and F.Organization_Id=#{ID} and (FM.FLAG=1 or
		(FM.FLAG=2 and FM.Fa_Bank_Type=0))
		<if test="FA_ACCOUNT != null and FA_ACCOUNT != ''">AND (FM.FA_ACCOUNT LIKE '%${FA_ACCOUNT}%' OR FM.FA_BINK
			LIKE '%${FA_ACCOUNT}%')</if>
		order by FLAG
		) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>

	<select id="fundBankPageCount" parameterType="map" resultType="int">
		SELECT COUNT(1) FROM (
		select FM.FA_BINK,FM.FA_ACCOUNT from
		FHFA_MANAGER_BANK_INFO FM,fhfa_manager F
		where F.Id=FM.Manager_Id and F.Organization_Id=#{ID} and (FM.FLAG=1 or
		(FM.FLAG=2 and FM.Fa_Bank_Type=0))
		<if test="FA_ACCOUNT != null and FA_ACCOUNT != ''">AND (FM.FA_ACCOUNT LIKE '%${FA_ACCOUNT}%' OR FM.FA_BINK
			LIKE '%${FA_ACCOUNT}%')</if>
		) T
	</select>
	<update id="update_fund_type" parameterType="map">
		update FI_FUND FF
		set FF.FUND_TYPE = #{FUND_TYPE},
		FF.FUND_PIDENTIFY_PERSON =
		#{FUND_PIDENTIFY_PERSON}
		where
		FF.FUND_ID = #{FUND_ID}
	</update>
	<select id="seq_fi_fund_id" resultType="int">
		select SEQ_FI_FUND.CURRVAL from dual
	</select>
	<select id="selectClientId" parameterType="map" resultType="int">
		SELECT FCO.CLIENT_ID FROM FIL_CUST_OPENINGBANK FCO WHERE
		FCO.BANK_ACCOUNT = #{BANK_ACCOUNT}
	</select>
	<select id="selectClientIds" parameterType="map" resultType="map">
		SELECT ID FROM FIL_CUST_CLIENT WHERE NAME = #{FUND_COMENAME}
	</select>
	<select id="selectFundComeCode" parameterType="map" resultType="map">
		SELECT BANK_ACCOUNT FROM FIL_CUST_OPENINGBANK WHERE CLIENT_ID = #{ID}
	</select>
	<select id="getBinkInfo" parameterType="Map" resultType="Map">
		select
		FM.FA_NAME,FM.FA_BINK,FM.FA_ACCOUNT from FHFA_MANAGER FM where FM.ID=#{MANAGER_ID}
	</select>
	<select id="getBinkInfoTH" parameterType="Map" resultType="Map">
		select FM.FA_NAME,
		FM.FA_BINK,FM.FA_ACCOUNT from FHFA_MANAGER FM where FM.ID=#{ID}
	</select>
	<select id="getBinkInfoF" parameterType="map" resultType="map">
		 select
		FM.FA_BINK,FM.FA_ACCOUNT from FHFA_MANAGER_BANK_INFO FM,fhfa_manager F
		where F.Id=FM.Manager_Id and F.ID=#{MANAGER_ID} and (FM.FLAG=1 or
		(FM.FLAG=2 and FM.Fa_Bank_Type=1))
		order by FLAG
	</select>
	<select id="get_CS_BinkInfo" parameterType="Map" resultType="Map">
		select TS.OPEN_BANK,TS.OPEN_BANK_ACCOUNT from T_SYS_COMPANY TS WHERE TS.COMPANY_ID=#{COMPANY_ID}
	</select>
	<select id="get_Bank_jxs" parameterType="Map" resultType="Map">
		select T.OPEN_BANK,T.OPEN_BANK_NUMBER from T_SYS_SUPPLIERS T where T.SUP_ID = #{SUP_ID}
	</select>
	<select id="queryCustNameByProjectId" parameterType="String" resultType="map">
		select c.Name  from fil_project_head h, fil_cust_client c   where  h.client_id=c.id  and h.id = #{PROJECT_ID}
	</select>
		<select id="queryBankAccByProjectId" parameterType="String" resultType="map">
		select o.BANK_ACCOUNT from  fil_project_head h ,fil_cust_openingbank o where  h.bank_id=o.id  and h.id = #{PROJECT_ID}
	</select>
		<select id="queryFirstPayallByProjectId" parameterType="String" resultType="map">
		select  s.FIRSTPAYALL  from  fil_project_scheme s  where s.project_id= #{PROJECT_ID}
	</select>
	<select id="getBranchCompanyInfo" parameterType="Map" resultType="map">
			select  o.name,o.id  from secu_org o where o.id=(select parent_id from secu_org where id= #{ID})
	</select>
	<select id="getBranchCompanyBankAcc" parameterType="Map" resultType="map">
	       select ID,FA_BINK,FA_ACCOUNT from  FHFA_MANAGER_BANK_INFO where SON_COMPANY_ID=#{ID}
	</select>
</mapper>