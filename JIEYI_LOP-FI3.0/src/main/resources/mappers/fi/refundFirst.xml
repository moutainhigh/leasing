<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="refundFirst">
	<select id="toMgDeductData" parameterType="Map" resultType="Map">
	SELECT T2.*
	  FROM (SELECT T1.*, ROWNUM ROWNU
	          FROM (SELECT H.ID HEAD_ID,
	                       H.FI_PAY_MONEY,
	                       TO_CHAR(H.FI_PAY_DATE, 'yyyy-MM-dd') FI_PAY_DATE,
	                       H.FI_REALITY_MONEY,
	                       H.FI_ACCOUNT_DATE,
	                       H.FI_APP_CODE,
	                       H.FI_APP_NAME,
	                       TO_CHAR(H.FI_APP_DATE, 'yyyy-MM-dd') FI_APP_DATE,
	                       H.FI_STATUS,
	                       H.FI_REMARK
	                  FROM FI_FUND_HEAD H
	                  <where>
	                  	<if test="FI_PAY_DATE1 != null and FI_PAY_DATE1 != ''">AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') >= TO_DATE(#{FI_PAY_DATE1},'yyyy-MM-dd')</if>
	                  	<if test="FI_PAY_DATE2 != null and FI_PAY_DATE2 != ''"><![CDATA[AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') <= TO_DATE(#{FI_PAY_DATE2},'yyyy-MM-dd')]]></if>
	                  	<if test="HEAD_ID != null and HEAD_ID != ''">AND H.ID LIKE '%'||#{HEAD_ID}||'%'</if>
	                  	<if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">AND H.FI_PAY_MONEY LIKE '%'||#{FI_PAY_MONEY}||'%'</if>
	                  	<if test="FI_STATUS != null and FI_STATUS != ''">AND H.FI_STATUS LIKE '%'||#{FI_STATUS}||'%'</if>
	                  </where>) T1) T2
	 WHERE T2.ROWNU BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>
	
	<select id="toMgDeductCount" parameterType="Map" resultType="int">
	SELECT COUNT(1) FROM(SELECT H.ID HEAD_ID,
	                       H.FI_PAY_MONEY,
	                       TO_CHAR(H.FI_PAY_DATE, 'yyyy-MM-dd') FI_PAY_DATE,
	                       H.FI_REALITY_MONEY,
	                       H.FI_ACCOUNT_DATE,
	                       H.FI_APP_CODE,
	                       H.FI_APP_NAME,
	                       TO_CHAR(H.FI_APP_DATE, 'yyyy-MM-dd') FI_APP_DATE,
	                       H.FI_STATUS,
	                       H.FI_REMARK
	                  FROM FI_FUND_HEAD H
	                  <where>
	                  	<if test="FI_PAY_DATE1 != null and FI_PAY_DATE1 != ''">AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') >= TO_DATE(#{FI_PAY_DATE1},'yyyy-MM-dd')</if>
	                  	<if test="FI_PAY_DATE2 != null and FI_PAY_DATE2 != ''"><![CDATA[AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') <= TO_DATE(#{FI_PAY_DATE2},'yyyy-MM-dd')]]></if>
	                  	<if test="HEAD_ID != null and HEAD_ID != ''">AND H.ID LIKE '%'||#{HEAD_ID}||'%'</if>
	                  	<if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">AND H.FI_PAY_MONEY LIKE '%'||#{FI_PAY_MONEY}||'%'</if>
	                  	<if test="FI_STATUS != null and FI_STATUS != ''">AND H.FI_STATUS LIKE '%'||#{FI_STATUS}||'%'</if>
	                  </where>)T
	</select>
	
	<select id="toGetAppData" parameterType="Map" resultType="Map">
	SELECT T2.*
	  FROM (SELECT T1.*, ROWNUM ROWNU FROM(
				  SELECT H.ID HEAD_ID,
			       H.PRO_CODE,
			       CL.ID CLIENT_ID,
			       CL.NAME CLIENT_NAME,
			       H.PRODUCT_NAME  EQUIPMENINFOS,
			       H.SUP_SHORTNAME SUP_NAME ,
			       (SELECT MAX(TSD.FLAG)
			          FROM FIL_PROJECT_SCHEME SCH, T_SYS_DATA_DICTIONARY TSD
			         WHERE SCH.KEY_NAME_EN = 'FIRST_PAYMENT_TYPE'
			           AND SCH.PROJECT_ID = H.ID
			           AND TSD.CODE = SCH.VALUE_STR
			           AND TSD.DESCRIBE = 'FIRST_PAYMENT_TYPE') FIRST_PAYMENT_TYPE,
			       H.LEASE_TOPRIC,
			       H.COMPANY_NAME COMPANY_NAMES,
		             (CASE WHEN H.PAYMENT_STATUS = '1' OR H.PAYMENT_STATUS = '4' THEN GETFI_RECEIVE_BY_TYPE(H.ID, '1')  --   首期款非网银 全额放款和 DB 差额  
		               WHEN  H.PAYMENT_STATUS = '3' THEN (SELECT GETFI_RECEIVE_BY_TYPE(H.ID, '1') - SUM(YS.BEGINNING_MONEY) FROM FI_R_BEGINNING YS WHERE YS.BEGINNING_NAME IN('起租租金','留购价款') AND YS.ITEM_FLAG = 1 AND YS.PROJECT_ID = H.ID )  --部分差额放款 
		               ELSE 0 END) FIRST_MONEY,    --首期款 
			          (CASE WHEN H.PAYMENT_STATUS = '1' OR H.PAYMENT_STATUS = '3' THEN GETFI_RECEIVE_BY_TYPE(H.ID, '3')  --   首期款非网银全额放款+DB差额放款 DB保证金
			                ELSE 0 END) DB_MONEY,      --DB保证金
			          (CASE WHEN H.PAYMENT_STATUS IN (1,2,3,4)    THEN GETFI_RECEIVE_BY_TYPE(H.ID, '5') 
                      ELSE 0 END)  CS_MONEY,  --  厂商保证金
			          (CASE WHEN H.PAYMENT_STATUS != '2'  THEN GETFI_RECEIVE_BY_TYPE(H.ID, '4') 
			                ELSE 0 END) OTHER_MONEY,   --其他费用
			          (CASE WHEN H.PAYMENT_STATUS = '1' THEN GETFI_RECEIVE_BY_TYPE(H.ID, '1,3,4,5')  --首期款非网银全额放款
			                WHEN H.PAYMENT_STATUS = '3' THEN (SELECT GETFI_RECEIVE_BY_TYPE(H.ID, '1,3,4,5') -  SUM(YS.BEGINNING_MONEY) FROM FI_R_BEGINNING YS WHERE YS.BEGINNING_NAME IN('起租租金','留购价款') AND YS.ITEM_FLAG IN(1,3,4,5)  AND YS.PROJECT_ID = H.ID )  --首期款非网银部分差额放款 
			                WHEN H.PAYMENT_STATUS = '4' THEN  GETFI_RECEIVE_BY_TYPE(H.ID, '1,4,5')   --首期款非网银  DB差额放款 只算首期款和其他费用
			                ELSE 0 --DB差额， 差额放款 
			                END) REALITY_MONEY  ,
			       TO_CHAR(H.SQFKYD_DATE,'YYYY-MM-DD')  RECEIVE_DATE  ,
			       TO_CHAR(H.SQFKSS_DATE,'YYYY-MM-DD')  REALITY_DATE 
			  FROM FIL_PROJECT_HEAD H
			  LEFT JOIN FIL_CUST_CLIENT CL
			    ON H.CLIENT_ID = CL.ID
			 WHERE H.FIRST_APP_STATE = 2 AND H.STATUS &lt; 20 
	<if test="CLIENT_NAME != null and CLIENT_NAME != ''">AND cl.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	<if test="PRO_CODE != null and PRO_CODE != ''">AND h.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	<if test="SUP_NAME != null and SUP_NAME != ''">AND H.SUP_SHORTNAME LIKE '%'||#{SUP_NAME}||'%'</if>
	<if test="PRODUCT_NAME != null and PRODUCT_NAME != ''">AND H.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAME}||'%'</if>
	  ) T1) T2
	 WHERE T2.ROWNU BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>
	
	<select id="toGetDeductCount" parameterType="Map" resultType="int">
	select count(1) from(SELECT H.ID HEAD_ID,
			       H.PRO_CODE,
			       CL.ID CLIENT_ID,
			       CL.NAME CLIENT_NAME,
			       H.PRODUCT_NAME  EQUIPMENINFOS,
			       H.SUP_SHORTNAME SUP_NAME ,
			       H.LEASE_TOPRIC,
			       H.COMPANY_NAME COMPANY_NAMES,
			       H.SQFKYD_DATE  RECEIVE_DATE  ,
			       H.SQFKSS_DATE  REALITY_DATE 
			  FROM FIL_PROJECT_HEAD H
			  LEFT JOIN FIL_CUST_CLIENT CL
			    ON H.CLIENT_ID = CL.ID
			 WHERE H.FIRST_APP_STATE = 2 AND H.STATUS &lt; 20 
	<if test="CLIENT_NAME != null and CLIENT_NAME != ''">AND cl.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	<if test="PRO_CODE != null and PRO_CODE != ''">AND h.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	<if test="SUP_NAME != null and SUP_NAME != ''">AND H.SUP_SHORTNAME LIKE '%'||#{SUP_NAME}||'%'</if>
	<if test="PRODUCT_NAME != null and PRODUCT_NAME != ''">AND H.PRODUCT_NAME LIKE '%'||#{PRODUCT_NAME}||'%'</if>
	  )T
	</select>
	
	<select id="toGetCompany" parameterType="Map" resultType="Map">
	SELECT COMPANY_NAME FROM T_SYS_COMPANY
	</select>
	
	<select id="toGetProduct" parameterType="Map" resultType="Map">
	SELECT PRODUCT_NAME FROM T_PRODUCT
	</select>
	
	<insert id="doInsertFundHead" parameterType="Map">
		INSERT INTO FI_FUND_HEAD(ID
		<if test="FI_PAY_TYPE != null and FI_PAY_TYPE != ''">,FI_PAY_TYPE</if>
		<if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">,FI_PAY_MONEY</if>
		<if test="FI_PROJECT_NUM != null and FI_PROJECT_NUM != ''">,FI_PROJECT_NUM</if>
		<if test="FI_PAY_BANK != null and FI_PAY_BANK != ''">,FI_PAY_BANK</if>
		<if test="FI_ACCOUNT_DATE != null and FI_ACCOUNT_DATE != ''">,FI_ACCOUNT_DATE</if>
		<if test="FI_REALITY_MONEY != null and FI_REALITY_MONEY != ''">,FI_REALITY_MONEY</if>
		<if test="FI_REALITY_BANK != null and FI_REALITY_BANK != ''">,FI_REALITY_BANK</if>
		<if test="FI_FUND_CODE != null and FI_FUND_CODE != ''">,FI_FUND_CODE</if>
		,FI_APP_NAME
		,FI_APP_DATE
		<if test="FI_PAYEE != null and FI_PAYEE != ''">,FI_PAYEE</if>
		<if test="FI_PAYEE_ACCOUNT != null and FI_PAYEE_ACCOUNT != ''">,FI_PAYEE_ACCOUNT</if>
		<if test="FI_TO_THE_PAYEE != null and FI_TO_THE_PAYEE != ''">,FI_TO_THE_PAYEE</if>
		<if test="FI_PAY_DATE != null and FI_PAY_DATE != ''">,FI_PAY_DATE</if>
		<if test="FI_FLAG != null and FI_FLAG != ''">,FI_FLAG</if>
		<if test="FI_TAGE != null and FI_TAGE != ''">,FI_TAGE</if>
		<if test="FI_FILE_NAME != null and FI_FILE_NAME != ''">,FI_FILE_NAME</if>
		<if test="FI_FILE_URL != null and FI_FILE_URL != ''">,FI_FILE_URL</if>
		<if test="FI_FILE_DATE != null and FI_FILE_DATE != ''">,FI_FILE_DATE</if>
		<if test="FI_STATUS != null and FI_STATUS != ''">,FI_STATUS</if>
		<if test="FI_REMARK != null and FI_REMARK != ''">,FI_REMARK</if>
		,FI_APP_CODE
		<if test="FI_SUPPLIERS_ID != null and FI_SUPPLIERS_ID != ''">,FI_SUPPLIERS_ID</if>
		<if test="FI_REALITY_ACCOUNT != null and FI_REALITY_ACCOUNT != ''">,FI_REALITY_ACCOUNT</if>)VALUES(
		#{HEAD_ID}
		<if test="FI_PAY_TYPE != null and FI_PAY_TYPE != ''">,#{FI_PAY_TYPE}</if>
		<if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">,#{FI_PAY_MONEY}</if>
		<if test="FI_PROJECT_NUM != null and FI_PROJECT_NUM != ''">,#{FI_PROJECT_NUM}</if>
		<if test="FI_PAY_BANK != null and FI_PAY_BANK != ''">,#{FI_PAY_BANK}</if>
		<if test="FI_ACCOUNT_DATE != null and FI_ACCOUNT_DATE != ''">,TO_DATE(#{FI_ACCOUNT_DATE},'yyyy-MM-dd')</if>
		<if test="FI_REALITY_MONEY != null and FI_REALITY_MONEY != ''">,#{FI_REALITY_MONEY}</if>
		<if test="FI_REALITY_BANK != null and FI_REALITY_BANK != ''">,#{FI_REALITY_BANK}</if>
		<if test="FI_FUND_CODE != null and FI_FUND_CODE != ''">,#{FI_FUND_CODE}</if>
		,#{USERNAME}
		,SYSDATE
		<if test="FI_PAYEE != null and FI_PAYEE != ''">,#{FI_PAYEE}</if>
		<if test="FI_PAYEE_ACCOUNT != null and FI_PAYEE_ACCOUNT != ''">,#{FI_PAYEE_ACCOUNT}</if>
		<if test="FI_TO_THE_PAYEE != null and FI_TO_THE_PAYEE != ''">,#{FI_TO_THE_PAYEE}</if>
		<if test="FI_PAY_DATE != null and FI_PAY_DATE != ''">,TO_DATE(#{FI_PAY_DATE},'yyyy-MM-dd')</if>
		<if test="FI_FLAG != null and FI_FLAG != ''">,#{FI_FLAG}</if>
		<if test="FI_TAGE != null and FI_TAGE != ''">,#{FI_TAGE}</if>
		<if test="FI_FILE_NAME != null and FI_FILE_NAME != ''">,#{FI_FILE_NAME}</if>
		<if test="FI_FILE_URL != null and FI_FILE_URL != ''">,#{FI_FILE_URL}</if>
		<if test="FI_FILE_DATE != null and FI_FILE_DATE != ''">,TO_DATE(#{FI_FILE_DATE},'yyyy-MM-dd')</if>
		<if test="FI_STATUS != null and FI_STATUS != ''">,#{FI_STATUS}</if>
		<if test="FI_REMARK != null and FI_REMARK != ''">,#{FI_REMARK}</if>
		,#{UESECODE}
		<if test="FI_SUPPLIERS_ID != null and FI_SUPPLIERS_ID != ''">,#{FI_SUPPLIERS_ID}</if>
		<if test="FI_REALITY_ACCOUNT != null and FI_REALITY_ACCOUNT != ''">,#{FI_REALITY_ACCOUNT}</if>)
	</insert>
	
	<select id="toFindAppData" parameterType="String" resultType="Map">
	SELECT RB.BEGINNING_RECEIVE_DATA,
	       RB.BEGINNING_NUM,
	       RB.BEGINNING_NAME,
	       RB.BEGINNING_MONEY,
	       RB.BEGINNING_FLAG,
	       RB.ITEM_FLAG,
	       RB.PAYLIST_CODE
	  FROM FI_R_BEGINNING RB, FIL_RENT_PLAN_HEAD_MAX_V MV
	 WHERE RB.PAYLIST_CODE = MV.PAYLIST_CODE(+)
	 AND RB.ITEM_FLAG != 2
	 AND RB.BEGINNING_FLAG != 1
	 <if test="PAYLIST_CODE != null and PAYLIST_CODE != ''">MV.PAYLIST_CODE = #{PAYLIST_CODE}</if>
	</select>
	
	<insert id="doInsertAppDetail" parameterType="Map">
	INSERT INTO FI_FUND_DETAIL(ID
	<if test="D_FUND_ID != null and D_FUND_ID != ''">,D_FUND_ID</if>
	<if test="D_PAYEE != null and D_PAYEE != ''">,D_PAYEE</if>
	<if test="D_PAYEE_ACCOUNT != null and D_PAYEE_ACCOUNT != ''">,D_PAYEE_ACCOUNT</if>
	<if test="D_TO_THE_PAYEE != null and D_TO_THE_PAYEE != ''">,D_TO_THE_PAYEE</if>
	<if test="D_CLIENT_CODE != null and D_CLIENT_CODE != ''">,D_CLIENT_CODE</if>
	<if test="D_CLIENT_NAME != null and D_CLIENT_NAME != ''">,D_CLIENT_NAME</if>
	<if test="D_PAY_PROJECT != null and D_PAY_PROJECT != ''">,D_PAY_PROJECT</if>
	<if test="D_PAY_MONEY != null and D_PAY_MONEY != ''">,D_PAY_MONEY</if>
	<if test="D_RECEIVE_DATE != null and D_RECEIVE_DATE != ''">,D_RECEIVE_DATE</if>
	<if test="D_REALITY_DATE != null and D_REALITY_DATE != ''">,D_REALITY_DATE</if>
	<if test="D_PAY_CODE != null and D_PAY_CODE != ''">,D_PAY_CODE</if>
	<if test="D_PROJECT_CODE != null and D_PROJECT_CODE != ''">,D_PROJECT_CODE</if>
	<if test="D_BEGING_ID != null and D_BEGING_ID != ''">,D_BEGING_ID</if>
	<if test="D_RECEIVE_MONEY != null and D_RECEIVE_MONEY != ''">,D_RECEIVE_MONEY</if>)VALUES(#{DETAIL_ID}
	<if test="D_FUND_ID != null and D_FUND_ID != ''">,#{D_FUND_ID}</if>
	<if test="D_PAYEE != null and D_PAYEE != ''">,#{D_PAYEE}</if>
	<if test="D_PAYEE_ACCOUNT != null and D_PAYEE_ACCOUNT != ''">,#{D_PAYEE_ACCOUNT}</if>
	<if test="D_TO_THE_PAYEE != null and D_TO_THE_PAYEE != ''">,#{D_TO_THE_PAYEE}</if>
	<if test="D_CLIENT_CODE != null and D_CLIENT_CODE != ''">,#{D_CLIENT_CODE}</if>
	<if test="D_CLIENT_NAME != null and D_CLIENT_NAME != ''">,#{D_CLIENT_NAME}</if>
	<if test="D_PAY_PROJECT != null and D_PAY_PROJECT != ''">,#{D_PAY_PROJECT}</if>
	<if test="D_PAY_MONEY != null and D_PAY_MONEY != ''">,#{D_PAY_MONEY}</if>
	<if test="D_RECEIVE_DATE != null and D_RECEIVE_DATE != ''">,TO_DATE(#{D_RECEIVE_DATE},'yyyy-MM-dd')</if>
	<if test="D_REALITY_DATE != null and D_REALITY_DATE != ''">,TO_DATE(#{D_REALITY_DATE},'yyyy-MM-dd')</if>
	<if test="D_PAY_CODE != null and D_PAY_CODE != ''">,#{D_PAY_CODE}</if>
	<if test="D_PROJECT_CODE != null and D_PROJECT_CODE != ''">,#{D_PROJECT_CODE}</if>
	<if test="D_BEGING_ID != null and D_BEGING_ID != ''">,#D_BEGING_ID}</if>
	<if test="D_RECEIVE_MONEY != null and D_RECEIVE_MONEY != ''">,#{D_RECEIVE_MONEY}</if>)
	</insert>
	
	<select id="toMgAppAlready" parameterType="Map" resultType="Map">
	SELECT T2.*
	  FROM (SELECT T1.*, ROWNUM ROWNU
	          FROM (SELECT H.ID HEAD_ID,
	                       H.FI_PAY_TYPE,
	                       H.FI_PAY_MONEY,
	                       TO_CHAR(H.FI_PAY_DATE,'YYYY-MM-DD') FI_PAY_DATE,
	                       H.FI_PROJECT_NUM,
	                       H.FI_REALITY_MONEY,
	                       H.FI_REALITY_BANK,
	                       TO_CHAR( H.FI_ACCOUNT_DATE,'YYYY-MM-DD') FI_ACCOUNT_DATE,
	                       H.FI_APP_CODE,
	                       H.FI_APP_NAME,
	                       TO_CHAR(H.FI_APP_DATE,'YYYY-MM-DD') FI_APP_DATE,
	                       H.FI_CHECK_CODE,
	                       H.FI_CHECK_NAME,
	                       TO_CHAR(H.FI_CHECK_DATE,'YYYY-MM-DD') FI_CHECK_DATE,
	                       H.FI_STATUS,
	                       H.FI_REMARK,
	                       H.FI_SUPPLIERS_ID
	                  FROM FI_FUND_HEAD H
	                  WHERE H.FI_STATUS = 0
	                  <if test="HEAD_ID != null and HEAD_ID != ''">AND H.ID LIKE '%'||#{HEAD_ID}||'%'</if>
	                  <if test="FI_SUPPLIERS_ID != null and FI_SUPPLIERS_ID != ''">AND H.FI_SUPPLIERS_ID LIKE '%'||#{FI_SUPPLIERS_ID}||'%'</if>
	                  <if test="FI_PAY_DATE1 != null and FI_PAY_DATE1 != ''">AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') >= TO_DATE(#{FI_PAY_DATE1},'yyyy-MM-dd')</if>
	                  <if test="FI_PAY_DATE2 != null and FI_PAY_DATE2 != ''"><![CDATA[AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') <= TO_DATE(#{FI_PAY_DATE2},'yyyy-MM-dd')]]></if>) T1) T2
	 WHERE T2.ROWNU BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	 </select>
	 
	<select id="toMgAppAlreadyCount" parameterType="Map" resultType="int">
	SELECT COUNT(1) FROM(SELECT H.ID HEAD_ID,
	                       H.FI_PAY_TYPE,
	                       H.FI_PAY_MONEY,
	                       TO_CHAR(H.FI_PAY_DATE,'YYYY-MM-DD') FI_PAY_DATE,
	                       H.FI_PROJECT_NUM,
	                       H.FI_REALITY_MONEY,
	                       H.FI_REALITY_BANK,
	                       TO_CHAR( H.FI_ACCOUNT_DATE,'YYYY-MM-DD') FI_ACCOUNT_DATE,
	                       H.FI_APP_CODE,
	                       H.FI_APP_NAME,
	                       TO_CHAR(H.FI_APP_DATE,'YYYY-MM-DD') FI_APP_DATE,
	                       H.FI_CHECK_CODE,
	                       H.FI_CHECK_NAME,
	                       TO_CHAR(H.FI_CHECK_DATE,'YYYY-MM-DD') FI_CHECK_DATE,
	                       H.FI_STATUS,
	                       H.FI_REMARK,
	                       H.FI_SUPPLIERS_ID
	                  FROM FI_FUND_HEAD H
	                  WHERE H.FI_STATUS = 0
	                  <if test="HEAD_ID != null and HEAD_ID != ''">AND H.ID LIKE '%'||#{HEAD_ID}||'%'</if>
	                  <if test="FI_SUPPLIERS_ID != null and FI_SUPPLIERS_ID != ''">AND H.FI_SUPPLIERS_ID LIKE '%'||#{FI_SUPPLIERS_ID}||'%'</if>
	                  <if test="FI_PAY_DATE1 != null and FI_PAY_DATE1 != ''">AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') >= TO_DATE(#{FI_PAY_DATE1},'yyyy-MM-dd')</if>
	                  <if test="FI_PAY_DATE2 != null and FI_PAY_DATE2 != ''"><![CDATA[AND TO_DATE(TO_CHAR(H.FI_PAY_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') <= TO_DATE(#{FI_PAY_DATE2},'yyyy-MM-dd')]]></if>)T
	 </select>
	 
	<insert id="insertRefundHeadForFrist" parameterType="Map">
		INSERT INTO FI_REFUND_HEAD(RE_ID
			<if test="RE_CODE != null and RE_CODE != ''">,RE_CODE</if>
			<if test="RE_DATE != null and RE_DATE != ''">,RE_DATE</if>
			<if test="RE_MONEY != null and RE_MONEY != ''">,RE_MONEY</if>
			<if test="RE_PROJECT_COUNT != null and RE_PROJECT_COUNT != ''">,RE_PROJECT_COUNT</if>
			<if test="RE_TYPE != null and RE_TYPE != ''">,RE_TYPE</if>
			<if test="RE_APPLY_NAME != null and RE_APPLY_NAME != ''">,RE_APPLY_NAME</if>
			,RE_APPLY_TIME
			<if test="RE_STATUS != null and RE_STATUS != ''">,RE_STATUS</if>
			<if test="RE_APPLY_CODE != null and RE_APPLY_CODE != ''">,RE_APPLY_CODE</if>
			,CREATE_TIME
		)VALUES(#{RE_ID}
			<if test="RE_CODE != null and RE_CODE != ''">,#{RE_CODE}</if>
			<if test="RE_DATE != null and RE_DATE != ''">,TO_DATE(#{RE_DATE},'yyyy-MM-dd')</if>
			<if test="RE_MONEY != null and RE_MONEY != ''">,#{RE_MONEY}</if>
			<if test="RE_PROJECT_COUNT != null and RE_PROJECT_COUNT != ''">,#{RE_PROJECT_COUNT}</if>
			<if test="RE_TYPE != null and RE_TYPE != ''">,#{RE_TYPE}</if>
			<if test="RE_APPLY_NAME != null and RE_APPLY_NAME != ''">,#{RE_APPLY_NAME}</if>
			,SYSDATE
			<if test="RE_STATUS != null and RE_STATUS != ''">,#{RE_STATUS}</if>
			<if test="RE_APPLY_CODE != null and RE_APPLY_CODE != ''">,#{RE_APPLY_CODE}</if>
			,SYSDATE
		)
	</insert>
	
	<insert id="insertRefundAccountForFrist" parameterType="Map">
		INSERT INTO FI_REFUND_ACCOUNT(ID
			<if test="RE_ID != null and RE_ID != ''">,RE_ID</if>
			<if test="PRO_ID != null and PRO_ID != ''">,PRO_ID</if>
			<if test="POOL_ID != null and POOL_ID != ''">,POOL_ID</if>
			<if test="POOL_TABLE != null and POOL_TABLE != ''">,POOL_TABLE</if>
			<if test="RE_MONEY != null and RE_MONEY != ''">,REFUND_REALITY_MONEY</if>
		)VALUES(SEQ_REFUND_ACCOUNT.NEXTVAL
			<if test="RE_ID != null and RE_ID != ''">,#{RE_ID}</if>
			<if test="PRO_ID != null and PRO_ID != ''">,#{PRO_ID}</if>
			<if test="POOL_ID != null and POOL_ID != ''">,#{POOL_ID}</if>
			<if test="POOL_TABLE != null and POOL_TABLE != ''">,#{POOL_TABLE}</if>
			<if test="RE_MONEY != null and RE_MONEY != ''">,#{RE_MONEY}</if>
		)
	</insert>
	
	<select id="getRefundFirstConfirmData" parameterType="Map" resultType="Map">
	SELECT T2.*
	  FROM (SELECT T1.*, ROWNUM ROWNU FROM(
			SELECT H.ID HEAD_ID,
			       FRH.RE_ID,
			       H.PRO_CODE,
			       CL.ID CLIENT_ID,
			       CL.NAME CLIENT_NAME,
			       H.PRODUCT_NAME  EQUIPMENINFOS,
			       H.SUP_SHORTNAME SUP_NAME ,
			       (SELECT MAX(SCH.VALUE_STR)
			          FROM FIL_PROJECT_SCHEME SCH
			         WHERE SCH.KEY_NAME_EN = 'PAYMENT_STATUS'
			           AND SCH.PROJECT_ID = H.ID) PAYMENT_STATUS,
			       (SELECT MAX(TSD.FLAG)
			          FROM FIL_PROJECT_SCHEME SCH, T_SYS_DATA_DICTIONARY TSD
			         WHERE SCH.KEY_NAME_EN = 'FIRST_PAYMENT_TYPE'
			           AND SCH.PROJECT_ID = H.ID
			           AND TSD.CODE = SCH.VALUE_STR
			           AND TSD.DESCRIBE = 'FIRST_PAYMENT_TYPE') FIRST_PAYMENT_TYPE,
			       H.LEASE_TOPRIC,
			       H.COMPANY_NAME COMPANY_NAMES,
		             (CASE WHEN H.PAYMENT_STATUS = '1' OR H.PAYMENT_STATUS = '4' THEN GETFI_RECEIVE_BY_TYPE(H.ID, '1')  --   首期款非网银 全额放款和 DB 差额  
		               WHEN  H.PAYMENT_STATUS = '3' THEN (SELECT GETFI_RECEIVE_BY_TYPE(H.ID, '1') - SUM(YS.BEGINNING_MONEY) FROM FI_R_BEGINNING YS WHERE YS.BEGINNING_NAME IN('起租租金','留购价款') AND YS.ITEM_FLAG = 1 AND YS.PROJECT_ID = H.ID )  --部分差额放款 
		               ELSE 0 END) FIRST_MONEY,    --首期款 
			          (CASE WHEN H.PAYMENT_STATUS = '1' OR H.PAYMENT_STATUS = '3' THEN GETFI_RECEIVE_BY_TYPE(H.ID, '3')  --   首期款非网银全额放款+DB差额放款 DB保证金
			                ELSE 0 END) DB_MONEY,      --DB保证金
			          (CASE WHEN H.PAYMENT_STATUS IN (1,2,3,4)    THEN GETFI_RECEIVE_BY_TYPE(H.ID, '5') 
                      ELSE 0 END)  CS_MONEY,  --  厂商保证金
			          (CASE WHEN H.PAYMENT_STATUS != '2'  THEN GETFI_RECEIVE_BY_TYPE(H.ID, '4') 
			                ELSE 0 END) OTHER_MONEY,   --其他费用
			          (CASE WHEN H.PAYMENT_STATUS = '1' THEN GETFI_RECEIVE_BY_TYPE(H.ID, '1,3,4,5')  --首期款非网银全额放款
			                WHEN H.PAYMENT_STATUS = '3' THEN (SELECT GETFI_RECEIVE_BY_TYPE(H.ID, '1,3,4,5') -  SUM(YS.BEGINNING_MONEY) FROM FI_R_BEGINNING YS WHERE YS.BEGINNING_NAME IN('起租租金','留购价款') AND YS.ITEM_FLAG IN(1,3,4,5)  AND YS.PROJECT_ID = H.ID )  --首期款非网银部分差额放款 
			                WHEN H.PAYMENT_STATUS = '4' THEN  GETFI_RECEIVE_BY_TYPE(H.ID, '1,4,5')   --首期款非网银  DB差额放款 只算首期款和其他费用
			                ELSE 0 --DB差额， 差额放款 
			                END) REALITY_MONEY  ,
			       TO_CHAR(FRH.RE_DATE, 'yyyy-mm-dd') RE_DATE,
			       TO_CHAR(FRH.RE_REAL_TIME, 'yyyy-mm-dd') RE_REAL_TIME,
			       FRH.RE_STATUS
	        FROM FIL_PROJECT_HEAD H
	        LEFT JOIN FI_REFUND_ACCOUNT FRA
	          ON FRA.PRO_ID = H.ID
	        LEFT JOIN FI_REFUND_HEAD FRH
	          ON FRA.RE_ID = FRH.RE_ID
			  LEFT JOIN SECU_ORG ORG
			    ON H.ORD_ID = ORG.ID
			  LEFT JOIN FIL_CUST_CLIENT CL
			    ON H.CLIENT_ID = CL.ID
			 WHERE FRH.RE_TYPE = 0
				<if test="REFUND_TYPE == '0'.toString()">
                   AND FRH.RE_STATUS = 0
				</if>
				<if test="REFUND_TYPE == '1'.toString() ">
                   AND FRH.RE_STATUS = 1
				</if>
				<if test="REFUND_TYPE == '2'.toString() ">
                   AND FRH.RE_STATUS = 2
				</if>
	<if test="CLIENT_NAME != null and CLIENT_NAME != ''">AND CL.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	<if test="PRO_CODE != null and PRO_CODE != ''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	<if test="SUP_NAME != null and SUP_NAME != ''">AND H.SUP_SHORTNAME LIKE '%'||#{SUP_NAME}||'%'</if>
	<if test="SUPP_ID != null and SUPP_ID != ''">AND H.SUP_ID = #{SUPP_ID}</if>
	 ) T1) T2
	 WHERE T2.ROWNU BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}
	</select>
	
	<select id="getRefundFirstConfirmCount" parameterType="Map" resultType="int">
	select count(1) from(SELECT H.ID HEAD_ID,
		       FRH.RE_ID,
		       H.PRO_CODE,
		       CL.ID CLIENT_ID,
		       CL.NAME CLIENT_NAME,
		       H.PRODUCT_NAME  EQUIPMENINFOS,
		       H.SUP_SHORTNAME SUP_NAME ,
		       H.LEASE_TOPRIC,
		       H.COMPANY_NAME COMPANY_NAMES,
		       TO_CHAR(FRH.RE_DATE, 'yyyy-mm-dd') RE_DATE,
		       TO_CHAR(FRH.RE_REAL_TIME, 'yyyy-mm-dd') RE_REAL_TIME,
		       FRH.RE_STATUS
		  FROM FI_REFUND_ACCOUNT FRA
		  LEFT JOIN FI_REFUND_HEAD FRH
		    ON FRA.RE_ID = FRH.RE_ID
		  LEFT JOIN FIL_PROJECT_HEAD H
		    ON FRA.PRO_ID = H.ID
		  LEFT JOIN SECU_ORG ORG
		    ON H.ORD_ID = ORG.ID
		  LEFT JOIN FIL_CUST_CLIENT CL
		    ON H.CLIENT_ID = CL.ID
		 WHERE FRH.RE_TYPE = 0
				<if test="REFUND_TYPE == '0'.toString()">
                   AND FRH.RE_STATUS = 0 
				</if>
				<if test="REFUND_TYPE == '1'.toString() ">
                   AND FRH.RE_STATUS = 1
				</if>
				<if test="REFUND_TYPE == '2'.toString() ">
                   AND FRH.RE_STATUS = 2
				</if>
	<if test="CLIENT_NAME != null and CLIENT_NAME != ''">AND CL.NAME LIKE '%'||#{CLIENT_NAME}||'%'</if>
	<if test="PRO_CODE != null and PRO_CODE != ''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
	<if test="SUP_NAME != null and SUP_NAME != ''">AND H.SUP_SHORTNAME LIKE '%'||#{SUP_NAME}||'%'</if>
	<if test="SUPP_ID != null and SUPP_ID != ''">AND H.SUP_ID = #{SUPP_ID}</if>
	 )T
	</select>
	
	<delete id="delFristRefundHeadByReId" parameterType="Map">
		DELETE FROM FI_REFUND_ACCOUNT T WHERE 
		<if test="RE_ID != null and RE_ID != ''">T.RE_ID = #{RE_ID}</if>
		<if test="RE_ID == null or RE_ID == ''">1>1</if>
	</delete>
	
	<delete id="delFristRefundAccountByReId" parameterType="Map">
		DELETE FROM FI_REFUND_HEAD T WHERE 
		<if test="RE_ID != null and RE_ID != ''">T.RE_ID = #{RE_ID}</if>
		<if test="RE_ID == null or RE_ID == ''">1>1</if>
	</delete>
	
	<select id="doConfirmRefundAppByProId" statementType="CALLABLE">  
	    <![CDATA[  
	        {call PRC_FI_CONFIRM_REFUND_FRIST (#{PRO_ID,mode=IN,jdbcType=NUMERIC},#{RE_ID,mode=IN,jdbcType=NUMERIC},#{payment_type,mode=IN,jdbcType=NUMERIC}
			,#{REALITY_DATE,mode=IN,jdbcType=VARCHAR},#{USERNAME,mode=IN,jdbcType=VARCHAR},#{USERCODE,mode=IN,jdbcType=VARCHAR})}  
	    ]]>  
	</select>
	
	
</mapper>