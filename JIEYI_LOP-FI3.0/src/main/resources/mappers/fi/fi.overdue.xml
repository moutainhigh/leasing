<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="fi.overdue">
	
	<select id="getDueMax" parameterType="map" resultType="map">
		SELECT * FROM (
		 SELECT FO.ID,
				FO.CUST_NAME,
				FO.DUE_STATUS,
				FO.EQUI,
				FO.SUP,
				FO.PAY_CODE,
				FO.PAY_START,
				FO.PERIOD,
				FO.RENT_RECE,
				FO.RENT_PAID,
				FO.PENALTY_RECE,
				FO.PENALTY_PAID,
				FO.CREATE_DATE,
				FO.PROJECT_ID,
				FO.RENT_DATE,
				NVL(FO.PENALTY_DAY,TRUNC(FO.CREATE_DATE)-TRUNC(FO.RENT_DATE)) PENALTY_DAY,
				CASE WHEN TRUNC(CREATE_DATE)>=TRUNC(SYSDATE)
				     THEN 'isToday'
				     ELSE 'isNotToday'
				END ISTODAY
		   FROM FI_OVERDUE FO
		  WHERE FO.PAY_CODE = #{PAY_CODE}
		    AND FO.PERIOD=#{PERIOD}
		  ORDER BY FO.CREATE_DATE DESC
		) WHERE ROWNUM = 1
	</select>
	
	<insert id="addOverdue" parameterType="map">
		INSERT INTO FI_OVERDUE(
			ID
			,PAY_CODE
			,PERIOD
			,RENT_RECE
			,RENT_PAID
			,PENALTY_RECE
			,PENALTY_PAID
			,CREATE_DATE
			,RENT_DATE
			,PENALTY_DAY
			,DUE_STATUS
			<if test="PROJECT_ID != null">,PROJECT_ID</if>
			<if test="CUST_NAME != null">,CUST_NAME</if>
			<if test="SUP != null">,SUP</if>
			<if test="PAY_START != null">,PAY_START</if>
			<if test="EQUI != null">,EQUI</if>
		)values(
			SEQ_FI_OVERDUE.NEXTVAL
			,#{PAY_CODE}
			,#{PERIOD}
			,#{RENT_RECE}
			,#{RENT_PAID}
			,#{PENALTY_RECE}
			,#{PENALTY_PAID}
			,#{CREATE_DATE}
			,#{RENT_DATE}
			,#{PENALTY_DAY}
			,#{DUE_STATUS}
			<if test="PROJECT_ID != null">,#{PROJECT_ID}</if>
			<if test="CUST_NAME != null">,#{CUST_NAME}</if>
			<if test="SUP != null">,#{SUP}</if>
			<if test="PAY_START != null">,#{PAY_START}</if>
			<if test="EQUI != null">,#{EQUI}</if>
		)
	</insert>
	
	<select id="getOverduePays" parameterType="map" resultType="String">
 SELECT HEAD.PAYLIST_CODE  -- 支付表
	,HEAD.BEGINNING_NUM--期次
	,HEAD.BEGINNING_RECEIVE_DATA -- 租金应收时间
	,HEAD.BEGINNING_MONEY -- 应收租金
	,HEAD.BEGINNING_PAID -- 实收租金
	,NVL(DE.D_RECEIVE_MONEY,0) D_RECEIVE_MONEY -- 实收罚息
	FROM (
	  SELECT FRB.PAYLIST_CODE -- 支付表号
	  ,FRB.BEGINNING_NUM -- 期次
	  ,FRB.BEGINNING_RECEIVE_DATA -- 应收时间
	  ,SUM(NVL(FRB.BEGINNING_MONEY,0)) BEGINNING_MONEY -- 应收租金
	  ,SUM(NVL(FRB.BEGINNING_PAID,0)) BEGINNING_PAID -- 实收租金
    ,MAX(FO.ID) FOID
	  FROM FI_R_BEGINNING FRB 
	  LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRPH ON FRPH.PAYLIST_CODE=FRB.PAYLIST_CODE
    LEFT JOIN (SELECT * FROM FI_OVERDUE WHERE TRUNC(CREATE_DATE)=TRUNC(SYSDATE)) FO ON FO.PAY_CODE = FRB.PAYLIST_CODE AND FO.PERIOD = FRB.BEGINNING_NUM
	  WHERE FRB.BEGINNING_NUM IS NOT NULL AND FRPH.STATUS NOT IN (2,3,6) AND FRB.ITEM_FLAG=2
	  GROUP BY FRB.PAYLIST_CODE, FRB.BEGINNING_NUM, FRB.BEGINNING_RECEIVE_DATA
	) HEAD 
	LEFT JOIN (
	  SELECT A.PAYLIST_CODE,A.BEGINNING_NUM,SUM(A.D_RECEIVE_MONEY) D_RECEIVE_MONEY FROM (
	    SELECT FFD.D_PAY_CODE PAYLIST_CODE
	    ,FFD.PERIOD BEGINNING_NUM
	    ,FFD.D_RECEIVE_MONEY
	    FROM FI_FUND_DETAIL FFD
	    LEFT JOIN FI_FUND_HEAD FFH ON FFH.ID=FFD.D_FUND_ID
	    WHERE FFH.FI_STATUS=2 AND FFD.D_PAY_PROJECT=#{TEXT_WYJ}
	  ) A 
	  WHERE A.BEGINNING_NUM IS NOT NULL 
	  GROUP BY A.PAYLIST_CODE, A.BEGINNING_NUM
	) DE ON HEAD.PAYLIST_CODE=DE.PAYLIST_CODE AND HEAD.BEGINNING_NUM=DE.BEGINNING_NUM
		WHERE TRUNC(SYSDATE)>HEAD.BEGINNING_RECEIVE_DATA
    	AND HEAD.BEGINNING_RECEIVE_DATA > TO_DATE('2007','YYYY')
    AND HEAD.FOID IS NULL
    AND HEAD.BEGINNING_MONEY -HEAD.BEGINNING_PAID >= 0.1
	ORDER BY HEAD.BEGINNING_RECEIVE_DATA DESC,HEAD.PAYLIST_CODE,HEAD.BEGINNING_NUM
	</select>	
	
	<select id="getOverduePayitem" parameterType="map" resultType="map">
	SELECT HEAD.PAYLIST_CODE  -- 支付表
	,HEAD.BEGINNING_NUM--期次
	,HEAD.BEGINNING_RECEIVE_DATA -- 租金应收时间
	,HEAD.BEGINNING_MONEY -- 应收租金
	,HEAD.BEGINNING_PAID -- 实收租金
	,NVL(DE.D_RECEIVE_MONEY,0) D_RECEIVE_MONEY -- 实收罚息
	,HEAD.PROJECT_ID
	,HEAD.START_DATE PAY_START
	 ,FCC.NAME CUST_NAME
	 ,TSS.SUP_NAME SUP
	 ,FPH.ENGINE_TYPE EQUI
	FROM (
	  SELECT FRB.PAYLIST_CODE -- 支付表号
	  ,FRB.BEGINNING_NUM -- 期次
	  ,FRB.BEGINNING_RECEIVE_DATA -- 应收时间
	  ,SUM(NVL(FRB.BEGINNING_MONEY,0)) BEGINNING_MONEY -- 应收租金
	  ,SUM(NVL(FRB.BEGINNING_PAID,0)) BEGINNING_PAID -- 实收租金
	  ,FRPH.PROJECT_ID
	  ,FRPH.START_DATE
      ,MAX(FO.ID) FOID
	  FROM FI_R_BEGINNING FRB 
	  LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRPH ON FRPH.PAYLIST_CODE=FRB.PAYLIST_CODE
    LEFT JOIN (SELECT * FROM FI_OVERDUE WHERE TRUNC(CREATE_DATE)=TRUNC(SYSDATE)) FO ON FO.PAY_CODE = FRB.PAYLIST_CODE AND FO.PERIOD = FRB.BEGINNING_NUM
	  WHERE FRB.BEGINNING_NUM IS NOT NULL AND FRPH.STATUS NOT IN (2,3,6) AND FRB.ITEM_FLAG=2
	  GROUP BY FRB.PAYLIST_CODE, FRB.BEGINNING_NUM, FRB.BEGINNING_RECEIVE_DATA,FRPH.PROJECT_ID,FRPH.START_DATE
	) HEAD 
	LEFT JOIN (
	  SELECT A.PAYLIST_CODE,A.BEGINNING_NUM,SUM(A.D_RECEIVE_MONEY) D_RECEIVE_MONEY FROM (
	    SELECT FFD.D_PAY_CODE PAYLIST_CODE
	    ,FFD.PERIOD BEGINNING_NUM
	    ,FFD.D_RECEIVE_MONEY
	    FROM FI_FUND_DETAIL FFD
	    LEFT JOIN FI_FUND_HEAD FFH ON FFH.ID=FFD.D_FUND_ID
	    WHERE FFH.FI_STATUS=2 AND FFD.D_PAY_PROJECT=#{TEXT_WYJ}
	  ) A 
	  WHERE A.BEGINNING_NUM IS NOT NULL 
	  GROUP BY A.PAYLIST_CODE, A.BEGINNING_NUM
	) DE ON HEAD.PAYLIST_CODE=DE.PAYLIST_CODE AND HEAD.BEGINNING_NUM=DE.BEGINNING_NUM
	LEFT JOIN FIL_PROJECT_HEAD FPH ON HEAD.PROJECT_ID = FPH.ID
	LEFT JOIN T_SYS_SUPPLIERS TSS ON FPH.SUP_ID = TSS.SUP_ID
	LEFT JOIN FIL_CUST_CLIENT FCC ON FPH.CLIENT_ID = FCC.ID
		WHERE TRUNC(SYSDATE)>HEAD.BEGINNING_RECEIVE_DATA
    	AND HEAD.BEGINNING_RECEIVE_DATA > TO_DATE('2007','YYYY')
          AND HEAD.FOID IS NULL
          AND HEAD.PAYLIST_CODE = #{PAYLIST_CODE}
          AND HEAD.BEGINNING_MONEY -HEAD.BEGINNING_PAID >= 0.1
	ORDER BY HEAD.PAYLIST_CODE,HEAD.BEGINNING_NUM
	</select>
	
	<select id="query_Supp_OverDue_Page"  parameterType="java.util.Map" resultType="map">
	SELECT * FROM (	 
						SELECT  CC.*,ROWNUM ROWNO FROM 
							 (	
		select tss.SUP_ID,tss.sup_name,tsa.name area_name,tsa.id area_id,tsc.company_name,nvl(a.amountAll,0) amountAll,
			nvl(b.amountOverdue,0) amountOverdue,round(nvl(c.paid_money_all,0),2) paid_money_all,round(nvl(d.Overdue_money_all,0),2) Overdue_money_all,
			case when nvl(a.amountAll,0)=0 then round(0,2) else round(nvl(b.amountOverdue,0)/nvl(a.amountAll,0)*100,2) end eqOverdue,
			case when nvl(c.paid_money_all,0)=0 then round(0,2) else round(nvl(d.Overdue_money_all,0)/nvl(c.paid_money_all,0)*100,2) end priceOverdue
			from t_sys_suppliers tss
			left join T_SYS_AREA tsa on tss.area_id=tsa.id
			left join T_Sys_company tsc on tsc.company_id=tss.COMPANY_ID
			left join --在租的设备总和
			(
			  select fpe.suppliers_id,sum(fpe.amount) amountAll from fil_rent_plan_head_max_v frp 
			  left join fil_project_equipment fpe on fpe.paylist_code=frp.paylist_code
			  where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			  group by fpe.suppliers_id
			) a on tss.sup_id=a.suppliers_id
			left join --逾期的设备
			(
			    select fpe.suppliers_id,sum(fpe.amount) amountOverdue  from fil_project_equipment fpe
			    ,(
			    select frp.paylist_code from fi_r_beginning frb
			    left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			    where frp.STATUS in (0,33,66,4,44,7,77,8,88,99) and frp.start_date is not null
			    and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0) )>0
			    and sysdate>frb.BEGINNING_RECEIVE_DATA
			    group by frp.paylist_code
			    ) t where t.paylist_code=fpe.paylist_code
			    group by fpe.suppliers_id
			) b on tss.sup_id=b.suppliers_id
			left join --剩余租金
			(
			    select fpe.suppliers_id,sum(t.paid_money) paid_money_all  from fil_project_equipment fpe
			    ,(
			    select frp.paylist_code,sum(frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0)) paid_money
			    from fi_r_beginning frb
			    left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			    where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			    and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0) )>0 
			    group by frp.paylist_code) t where t.paylist_code=fpe.paylist_code
			    group by fpe.suppliers_id
			) c on tss.sup_id=c.suppliers_id
			left join --逾期租金
			(
			  select fpe.suppliers_id,sum(t.paid_money) Overdue_money_all  from fil_project_equipment fpe
			  ,(
			  select frp.paylist_code,sum(frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			  (frb.INVENT_MONEY,0)) paid_money
			  from fi_r_beginning frb
			  left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			  where frp.STATUS in (0,33,66,4,44,7,77,8,88,99) and frp.start_date is not null
			  and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			  (frb.INVENT_MONEY,0) )>0 
			  and sysdate>frb.BEGINNING_RECEIVE_DATA
			  group by frp.paylist_code) t where t.paylist_code=fpe.paylist_code
			  group by fpe.suppliers_id
			) d on tss.sup_id=d.suppliers_id
			<where>
				<if test="SUP_NAME !=null and SUP_NAME !=''"> tss.SUP_NAME like '%'||#{SUP_NAME}||'%'</if>
				<if test="COMPANY_NAME !=null and COMPANY_NAME !=''">and tsc.COMPANY_NAME like '%'||#{COMPANY_NAME}||'%'</if>
				<if test="AREA !=null and AREA !=''">and tsa.id =#{AREA}</if>
				<if test="SUP_ID !=null and SUP_ID !=''">and tss.SUP_ID =#{SUP_ID}</if>
				<if test="COMPANY_ID !=null and COMPANY_ID !=''">and tsc.COMPANY_ID =#{COMPANY_ID}</if>
			</where>
			order by tss.SUP_ID
			) CC where rownum &lt;=#{PAGE_END}
					) CCC
			 WHERE CCC.ROWNO >= #{PAGE_BEGIN}
	</select>
	
	<select id="query_Supp_OverDue_Page_count"  parameterType="java.util.Map" resultType="int">
		select count(tss.SUP_ID) count from t_sys_suppliers tss
		left join T_SYS_AREA tsa on tss.area_id=tsa.id
		left join T_Sys_company tsc on tsc.company_id=tss.COMPANY_ID
		<where>
			<if test="SUP_NAME !=null and SUP_NAME !=''"> tss.SUP_NAME like '%'||#{SUP_NAME}||'%'</if>
			<if test="COMPANY_NAME !=null and COMPANY_NAME !=''">and tsc.COMPANY_NAME like '%'||#{COMPANY_NAME}||'%'</if>
			<if test="AREA !=null and AREA !=''">and tsa.id =#{AREA}</if>
			<if test="SUP_ID !=null and SUP_ID !=''">and tss.SUP_ID =#{SUP_ID}</if>
			<if test="COMPANY_ID !=null and COMPANY_ID !=''">and tsc.COMPANY_ID =#{COMPANY_ID}</if>
		</where>
	</select>
	
	<select id="query_Supp_All"  parameterType="java.util.Map" resultType="map">
		select sum(nvl(a.amountAll,0)) amountAll,sum(nvl(b.amountOverdue,0)) amountOverdue,round(sum(round(nvl(c.paid_money_all,0),2)),2) paid_money_all,round(sum(round(nvl(d.Overdue_money_all,0),2)),2) Overdue_money_all
			from t_sys_suppliers tss
			left join T_SYS_AREA tsa on tss.area_id=tsa.id
			left join T_Sys_company tsc on tsc.company_id=tss.COMPANY_ID
			left join --在租的设备总和
			(
			  select fpe.suppliers_id,sum(fpe.amount) amountAll from fil_rent_plan_head_max_v frp 
			  left join fil_project_equipment fpe on fpe.paylist_code=frp.paylist_code
			  where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			  group by fpe.suppliers_id
			) a on tss.sup_id=a.suppliers_id
			left join --逾期的设备
			(
			    select fpe.suppliers_id,sum(fpe.amount) amountOverdue  from fil_project_equipment fpe
			    ,(
			    select frp.paylist_code from fi_r_beginning frb
			    left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			    where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			    and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0) )>0
			    and sysdate>frb.BEGINNING_RECEIVE_DATA
			    group by frp.paylist_code
			    ) t where t.paylist_code=fpe.paylist_code
			    group by fpe.suppliers_id
			) b on tss.sup_id=b.suppliers_id
			left join --剩余租金
			(
			    select fpe.suppliers_id,sum(t.paid_money) paid_money_all  from fil_project_equipment fpe
			    ,(
			    select frp.paylist_code,sum(frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0)) paid_money
			    from fi_r_beginning frb
			    left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			    where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			    and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0) )>0 
			    group by frp.paylist_code) t where t.paylist_code=fpe.paylist_code
			    group by fpe.suppliers_id
			) c on tss.sup_id=c.suppliers_id
			left join --逾期租金
			(
			  select fpe.suppliers_id,sum(t.paid_money) Overdue_money_all  from fil_project_equipment fpe
			  ,(
			  select frp.paylist_code,sum(frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			  (frb.INVENT_MONEY,0)) paid_money
			  from fi_r_beginning frb
			  left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			  where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			  and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			  (frb.INVENT_MONEY,0) )>0 
			  and sysdate>frb.BEGINNING_RECEIVE_DATA
			  group by frp.paylist_code) t where t.paylist_code=fpe.paylist_code
			  group by fpe.suppliers_id
			) d on tss.sup_id=d.suppliers_id
			<where>
				<if test="SUP_NAME !=null and SUP_NAME !=''"> tss.SUP_NAME like '%'||#{SUP_NAME}||'%'</if>
				<if test="COMPANY_NAME !=null and COMPANY_NAME !=''">and tsc.COMPANY_NAME like '%'||#{COMPANY_NAME}||'%'</if>
				<if test="AREA !=null and AREA !=''">and tsa.id =#{AREA}</if>
			</where>
	</select>
	
	<select id="query_Area_List"  parameterType="java.util.Map" resultType="map">
		select ID,NAME from T_SYS_AREA where parent_id is null
	</select>
	
	<select id="query_List"  parameterType="java.util.Map" resultType="map">
	select t.*,rownum ROW_NUM from (
		select tss.SUP_ID,tss.sup_name,tsa.name area_name,tsa.id area_id,tsc.company_name,nvl(a.amountAll,0) amountAll,
			nvl(b.amountOverdue,0) amountOverdue,round(nvl(c.paid_money_all,0),2) paid_money_all,round(nvl(d.Overdue_money_all,0),2) Overdue_money_all,
			case when nvl(a.amountAll,0)=0 then round(0,2) else round(nvl(b.amountOverdue,0)/nvl(a.amountAll,0)*100,2) end eqOverdue,
			case when nvl(c.paid_money_all,0)=0 then round(0,2) else round(nvl(d.Overdue_money_all,0)/nvl(c.paid_money_all,0)*100,2) end priceOverdue
			from t_sys_suppliers tss
			left join T_SYS_AREA tsa on tss.area_id=tsa.id
			left join T_Sys_company tsc on tsc.company_id=tss.COMPANY_ID
			left join --在租的设备总和
			(
			  select fpe.suppliers_id,sum(fpe.amount) amountAll from fil_rent_plan_head_max_v frp 
			  left join fil_project_equipment fpe on fpe.paylist_code=frp.paylist_code
			  where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			  group by fpe.suppliers_id
			) a on tss.sup_id=a.suppliers_id
			left join --逾期的设备
			(
			    select fpe.suppliers_id,sum(fpe.amount) amountOverdue  from fil_project_equipment fpe
			    ,(
			    select frp.paylist_code from fi_r_beginning frb
			    left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			    where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			    and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0) )>0
			    and sysdate>frb.BEGINNING_RECEIVE_DATA
			    group by frp.paylist_code
			    ) t where t.paylist_code=fpe.paylist_code
			    group by fpe.suppliers_id
			) b on tss.sup_id=b.suppliers_id
			left join --剩余租金
			(
			    select fpe.suppliers_id,sum(t.paid_money) paid_money_all  from fil_project_equipment fpe
			    ,(
			    select frp.paylist_code,sum(frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0)) paid_money
			    from fi_r_beginning frb
			    left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			    where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			    and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			    (frb.INVENT_MONEY,0) )>0 
			    group by frp.paylist_code) t where t.paylist_code=fpe.paylist_code
			    group by fpe.suppliers_id
			) c on tss.sup_id=c.suppliers_id
			left join --逾期租金
			(
			  select fpe.suppliers_id,sum(t.paid_money) Overdue_money_all  from fil_project_equipment fpe
			  ,(
			  select frp.paylist_code,sum(frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			  (frb.INVENT_MONEY,0)) paid_money
			  from fi_r_beginning frb
			  left join fil_rent_plan_head_max_v frp on frp.paylist_code=frb.paylist_code
			  where frp.STATUS in (0,33,66,4,44,7,77,8,88,99,100) and frp.start_date is not null
			  and frb.ITEM_FLAG=2 and (frb.BEGINNING_MONEY-nvl(frb.BEGINNING_PAID,0)-nvl
			  (frb.INVENT_MONEY,0) )>0 
			  and sysdate>frb.BEGINNING_RECEIVE_DATA
			  group by frp.paylist_code) t where t.paylist_code=fpe.paylist_code
			  group by fpe.suppliers_id
			) d on tss.sup_id=d.suppliers_id
			order by tss.SUP_ID
		) t
	</select>
	
    

     <!-- 催收管理列表页面, PENALTY_DAY是抛出供应商垫付逾期的最大天数-->
   <select id="query_overdue_Price_MG" parameterType="java.util.Map" resultType="map"> 
	  SELECT * FROM (	 
			SELECT  CC.*,ROWNUM ROWNO FROM   ( SELECT A.*, B.PAID_MONEY PAID_MONEY_ALL,B.VINUAL_MONEY VINUAL_MONEY_ALL,BB.PENALTY_DAY 
			,CASE WHEN NVL(BB.PENALTY_DAY,0)>TSDD1.CODE THEN '1' ELSE '2' END DUNFLAG
			 FROM (
			SELECT  FO.CUST_NAME,FO.PAY_CODE PAYLIST_CODE,FRP.STATUS,TSDD.FLAG PLAN_STATE 
			,ROUND(SUM(NVL(FO.RENT_RECE,0)-NVL(FO.RENT_PAID,0)),5) RENT_RECE_ALL
			,ROUND(SUM(NVL(FO.PENALTY_RECE,0)-NVL(FO.PENALTY_PAID,0)),5) PENALTY_RECE_ALL,
            ROUND(SUM(NVL(FO.VINUAL_PAID, 0)),5) VINUAL_PAID_ALL,
             MAX(FRP.ID) PAY_ID
			 FROM (
			    SELECT * FROM FI_OVERDUE WHERE CREATE_DATE = TRUNC(SYSDATE)
			) FO
			LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRP ON FO.PAY_CODE=FRP.PAYLIST_CODE
			LEFT JOIN v_plan_scheme VPS ON FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
			left join fil_project_head fph on VPS.project_id=fph.id
			LEFT JOIN T_SYS_DATA_DICTIONARY TSDD ON TSDD.TYPE='还款计划状态' AND FRP.STATUS=TSDD.CODE 
			<where>
			<if test="CUST_NAME !=null and CUST_NAME !=''"> and FO.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''"> and FO.PAY_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="SUP_ID !=null and SUP_ID !=''"> and VPS.SUP_ID =#{SUP_ID}</if>
	 	   <!--  <if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID IN ${SYS_ORGIDS_} </if> -->
	 		<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND FPH.CLERK_ID = #{SYS_CLERK_ID_} </if>
			</where>
         GROUP BY FO.CUST_NAME, FRP.STATUS,FO.PAY_CODE,TSDD.FLAG) A
				left join  ( SELECT FRB.PAYLIST_CODE,ROUND(SUM(FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0)),2) PAID_MONEY,
                    ROUND(SUM(NVL(FRB.VINUAL_MONEY,0)),2) VINUAL_MONEY
								    FROM FI_R_BEGINNING FRB
								    WHERE FRB.ITEM_FLAG=2
	                  AND (FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0))>=0.01 
								    GROUP BY FRB.PAYLIST_CODE) B on a.paylist_code=b.paylist_code
				left join (
			        select fo.PAY_CODE,MAX(fo.PENALTY_DAY) PENALTY_DAY from fi_overdue fo 
			        left join (
			          select frb.Paylist_Code,frb.Beginning_Num,round(sum(nvl(frb.VINUAL_MONEY,0)),5) VINUAL_MONEY from fi_overdue fo
			  		    left join fi_r_beginning frb on fo.period=frb.beginning_num and fo.pay_code=frb.paylist_code and frb.ITEM_FLAG=2
			          where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) 
			          group by frb.Paylist_Code,frb.Beginning_Num
			       ) t on fo.pay_code=t.Paylist_Code and fo.PERIOD=t.Beginning_Num
			       where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) and t.VINUAL_MONEY=0
			       group by fo.PAY_CODE
			    ) BB ON a.paylist_code=BB.PAY_CODE
		LEFT JOIN T_SYS_DATA_DICTIONARY TSDD1 ON TSDD1.TYPE = '逾期催收提醒天数' AND TSDD1.FLAG='逾期催收提醒天数'
		where A.RENT_RECE_ALL>0
		ORDER BY BB.PENALTY_DAY DESC nulls LAST,A.PAYLIST_CODE
			) CC
	    WHERE ROWNUM &lt;= #{PAGE_END}
			) CCC
	WHERE CCC.ROWNO >= #{PAGE_BEGIN}
	</select> 
	
	  
	
	
	
    <!-- 催收管理列表页面(取) -->
	  <select id="query_overdue_price_copy" parameterType="java.util.Map" resultType="map">
	  SELECT * FROM (	 
			SELECT  CC.*,ROWNUM ROWNO FROM 
				 (	
			SELECT A.*, B.PAID_MONEY PAID_MONEY_ALL,B.VINUAL_MONEY VINUAL_MONEY_ALL,BB.PENALTY_DAY 
			,CASE WHEN NVL(BB.PENALTY_DAY,0)>TSDD1.CODE THEN '1' ELSE '2' END DUNFLAG
			 FROM (
			SELECT  FO.CUST_NAME,FO.PAY_CODE PAYLIST_CODE,FRP.STATUS,TSDD.FLAG PLAN_STATE
			,ROUND(SUM(NVL(FO.RENT_RECE,0)-NVL(FO.RENT_PAID,0)),2) RENT_RECE_ALL
			,ROUND(SUM(NVL(FO.PENALTY_RECE,0)-NVL(FO.PENALTY_PAID,0)),2) PENALTY_RECE_ALL,
             ROUND(SUM(NVL(FO.VINUAL_PAID, 0)),2) VINUAL_PAID_ALL,
             MAX(FRP.ID) PAY_ID
             ,FPH.COMPANY_NAME
             ,max(to_char(FO.PAY_START, 'YYYY-MM-DD')) PAY_START
             ,max(to_char(FO.Create_Date, 'YYYY-MM-DD')) CREATE_DATE
             ,max(to_char(FO.PENALTY_DATE, 'YYYY-MM-DD')) PENALTY_DATE 
             ,FRP.TOPRIC_SUBFIRENT
            ,ROUND(SUM(NVL(FO.RENT_RECE,0)-NVL(FO.RENT_PAID,0)),2)+ROUND(SUM(NVL(FO.PENALTY_RECE,0)-NVL(FO.PENALTY_PAID,0)),2)  RECE_ALL
             ,min(to_char(FO.Rent_Date, 'YYYY-MM-DD')) RENT_DATE
			FROM (
			      SELECT F.ID,
                                 F.PAY_CODE,
                                 F.PERIOD,
                                 F.RENT_RECE,
                                 F.RENT_PAID,
                                 F.PENALTY_RECE,
                                 F.Project_Id,
                                 F.Cust_Name,
                                 F.Pay_Start,
                                 F.VINUAL_PAID,
                                 F.PENALTY_PAID
                                 ,F.Create_Date 
                                ,F.PENALTY_DATE  
                                      ,F.Rent_Date                            
                            FROM FI_OVERDUE F
                           WHERE F.CREATE_DATE = TRUNC(SYSDATE)
                           ORDER BY F.CUST_NAME ASC
			) FO
			LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRP ON FO.PAY_CODE=FRP.PAYLIST_CODE
			LEFT JOIN v_plan_scheme VPS ON FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
			left join fil_project_head fph on VPS.project_id=fph.id
			LEFT JOIN T_SYS_DATA_DICTIONARY TSDD ON TSDD.TYPE='还款计划状态' AND FRP.STATUS=TSDD.CODE 
			<where>
			<if test="CUST_NAME !=null and CUST_NAME !=''"> and FO.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''"> and FO.PAY_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="SUP_ID !=null and SUP_ID !=''"> and VPS.SUP_ID =#{SUP_ID}</if>
			<!-- <if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID IN ${SYS_ORGIDS_} </if> -->			
	 		<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND FPH.CLERK_ID = #{SYS_CLERK_ID_} </if>
			</where>
                GROUP BY FO.CUST_NAME
                                  ,FRP.STATUS
                                  ,FO.PAY_CODE
                                  ,TSDD.FLAG    
                                  ,FPH.COMPANY_NAME           
                                  ,FO.Create_Date
                                  ,FRP.TOPRIC_SUBFIRENT
         ) A
				left join  ( SELECT FRB.PAYLIST_CODE,ROUND(SUM(FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0)),2) PAID_MONEY,
                    ROUND(SUM(NVL(FRB.VINUAL_MONEY,0)),2) VINUAL_MONEY
								    FROM FI_R_BEGINNING FRB
								    WHERE FRB.ITEM_FLAG=2
	                  AND (FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0))>=0.01 
								    GROUP BY FRB.PAYLIST_CODE) B on a.paylist_code=b.paylist_code
				left join (
			        select fo.PAY_CODE,MAX(fo.PENALTY_DAY) PENALTY_DAY from fi_overdue fo 
			        left join (
			          select frb.Paylist_Code,frb.Beginning_Num,round(sum(nvl(frb.VINUAL_MONEY,0)),2) VINUAL_MONEY from fi_overdue fo
			  		    left join fi_r_beginning frb on fo.period=frb.beginning_num and fo.pay_code=frb.paylist_code and frb.ITEM_FLAG=2
			          where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) 
			          group by frb.Paylist_Code,frb.Beginning_Num
			       ) t on fo.pay_code=t.Paylist_Code and fo.PERIOD=t.Beginning_Num
			       where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) and t.VINUAL_MONEY=0
			       group by fo.PAY_CODE
			    ) BB ON a.paylist_code=BB.PAY_CODE
		LEFT JOIN T_SYS_DATA_DICTIONARY TSDD1 ON TSDD1.TYPE = '逾期催收提醒天数' AND TSDD1.FLAG='逾期催收提醒天数'
		where A.RENT_RECE_ALL>0
			<if test="PAY_ID!=null and PAY_ID!=''">AND A.PAY_ID = #{PAY_ID} </if>
		ORDER BY BB.PENALTY_DAY DESC nulls LAST, A.PAYLIST_CODE,A.CUST_NAME ASC
			) CC
	    WHERE ROWNUM &lt;= #{PAGE_END}
			) CCC
	WHERE CCC.ROWNO >= #{PAGE_BEGIN}
	</select> 
	
	<select id="query_overdue_Price_MG_count" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(1) FROM(
		SELECT A.*, B.PAID_MONEY PAID_MONEY_ALL,B.VINUAL_MONEY VINUAL_MONEY_ALL,BB.PENALTY_DAY 
			,CASE WHEN NVL(BB.PENALTY_DAY,0)>TSDD1.CODE THEN '1' ELSE '2' END DUNFLAG
			 FROM (
			SELECT  FO.CUST_NAME,FO.PAY_CODE PAYLIST_CODE,FRP.STATUS,TSDD.FLAG PLAN_STATE 
			,ROUND(SUM(NVL(FO.RENT_RECE,0)-NVL(FO.RENT_PAID,0)),2) RENT_RECE_ALL
			,ROUND(SUM(NVL(FO.PENALTY_RECE,0)-NVL(FO.PENALTY_PAID,0)),2) PENALTY_RECE_ALL,
            ROUND(SUM(NVL(FO.VINUAL_PAID, 0)),2) VINUAL_PAID_ALL,
             MAX(FRP.ID) PAY_ID
			FROM (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE = TRUNC(SYSDATE)) FO
			LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRP ON FO.PAY_CODE=FRP.PAYLIST_CODE
			LEFT JOIN v_plan_scheme VPS ON FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
			left join fil_project_head fph on VPS.project_id=fph.id
			LEFT JOIN T_SYS_DATA_DICTIONARY TSDD ON TSDD.TYPE='还款计划状态' AND FRP.STATUS=TSDD.CODE 
			<where>
			<if test="CUST_NAME !=null and CUST_NAME !=''"> and FO.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''"> and FO.PAY_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="SUP_ID !=null and SUP_ID !=''"> and VPS.SUP_ID =#{SUP_ID}</if>
			<!-- modify by lishuo 12-29-2015 若不注销Count条数对不上查询条数，导致分页功能异常 -->
			<!-- <if test="SYS_ORGIDS_ !=null and SYS_ORGIDS_ !=''">AND FPH.ORD_ID IN ${SYS_ORGIDS_} </if> -->				
	 		<if test="SYS_CLERK_ID_ !=null and SYS_CLERK_ID_ !=''">AND FPH.CLERK_ID = #{SYS_CLERK_ID_} </if>
			</where>
         GROUP BY FO.CUST_NAME, FRP.STATUS,FO.PAY_CODE,TSDD.FLAG) A
				left join  ( SELECT FRB.PAYLIST_CODE,ROUND(SUM(FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0)),2) PAID_MONEY,
                    ROUND(SUM(NVL(FRB.VINUAL_MONEY,0)),2) VINUAL_MONEY
								    FROM FI_R_BEGINNING FRB
								    WHERE FRB.ITEM_FLAG=2
	                  AND (FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0))>=0.01 
								    GROUP BY FRB.PAYLIST_CODE) B on a.paylist_code=b.paylist_code
				left join (
			        select fo.PAY_CODE,MAX(fo.PENALTY_DAY) PENALTY_DAY from fi_overdue fo 
			        left join (
			          select frb.Paylist_Code,frb.Beginning_Num,round(sum(nvl(frb.VINUAL_MONEY,0)),2) VINUAL_MONEY from fi_overdue fo
			  		    left join fi_r_beginning frb on fo.period=frb.beginning_num and fo.pay_code=frb.paylist_code and frb.ITEM_FLAG=2
			          where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) 
			          group by frb.Paylist_Code,frb.Beginning_Num
			       ) t on fo.pay_code=t.Paylist_Code and fo.PERIOD=t.Beginning_Num
			       where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) and t.VINUAL_MONEY=0
			       group by fo.PAY_CODE
			    ) BB ON a.paylist_code=BB.PAY_CODE
		LEFT JOIN T_SYS_DATA_DICTIONARY TSDD1 ON TSDD1.TYPE = '逾期催收提醒天数' AND TSDD1.FLAG='逾期催收提醒天数'
		where A.RENT_RECE_ALL>0
		ORDER BY BB.PENALTY_DAY DESC nulls LAST,A.PAYLIST_CODE
		) t
	</select>
	
	
	<select id="query_overdue_Price_MG_SUPP" parameterType="java.util.Map" resultType="map">
	  SELECT * FROM (	 
			SELECT  CC.*,ROWNUM ROWNO FROM 
				 (	
			SELECT A.*,B.PAID_MONEY PAID_MONEY_ALL,B.VINUAL_MONEY VINUAL_MONEY_ALL,BB.PENALTY_DAY --PENALTY_DAY是供应商垫付逾期的最大天数
			,CASE WHEN NVL(BB.PENALTY_DAY,0)>TSDD1.CODE THEN '1' ELSE '2' END DUNFLAG
			 FROM (
			SELECT  FO.CUST_NAME,FO.PAY_CODE PAYLIST_CODE,FRP.STATUS,TSDD.FLAG PLAN_STATE
			,ROUND(SUM(NVL(FO.RENT_RECE,0)-NVL(FO.RENT_PAID,0)),2) RENT_RECE_ALL
			,ROUND(SUM(NVL(FO.PENALTY_RECE,0)-NVL(FO.PENALTY_PAID,0)),2) PENALTY_RECE_ALL,
            ROUND(SUM(NVL(FO.VINUAL_PAID, 0)),2) VINUAL_PAID_ALL
			FROM (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE = TRUNC(SYSDATE)) FO
			LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRP ON FO.PAY_CODE=FRP.PAYLIST_CODE
			LEFT JOIN v_plan_scheme VPS ON FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
			left join fil_project_head fph on VPS.project_id=fph.id
			LEFT JOIN T_SYS_DATA_DICTIONARY TSDD ON TSDD.TYPE='还款计划状态' AND FRP.STATUS=TSDD.CODE 
			<where>
			fph.PLATFORM_TYPE !=7
			<if test="CUST_NAME !=null and CUST_NAME !=''"> and FO.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''"> and FO.PAY_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="SUP_ID !=null and SUP_ID !=''"> and VPS.SUP_ID =#{SUP_ID}</if>
			</where>
         GROUP BY FO.CUST_NAME, FRP.STATUS,FO.PAY_CODE,TSDD.FLAG) A
				left join  ( SELECT FRB.PAYLIST_CODE,ROUND(SUM(FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0)),2) PAID_MONEY,
                    ROUND(SUM(NVL(FRB.VINUAL_MONEY,0)),2) VINUAL_MONEY
								    FROM FI_R_BEGINNING FRB
								    WHERE FRB.ITEM_FLAG=2
	                  AND (FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0))>=0.01 
								    GROUP BY FRB.PAYLIST_CODE) B on a.paylist_code=b.paylist_code
				left join (
			        select fo.PAY_CODE,MAX(fo.PENALTY_DAY) PENALTY_DAY from fi_overdue fo 
			        left join (
			          select frb.Paylist_Code,frb.Beginning_Num,round(sum(nvl(frb.VINUAL_MONEY,0)),2) VINUAL_MONEY from fi_overdue fo
			  		    left join fi_r_beginning frb on fo.period=frb.beginning_num and fo.pay_code=frb.paylist_code and frb.ITEM_FLAG=2
			          where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) 
			          group by frb.Paylist_Code,frb.Beginning_Num
			       ) t on fo.pay_code=t.Paylist_Code and fo.PERIOD=t.Beginning_Num
			       where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) and (t.VINUAL_MONEY>0.0001 or fo.VINUAL_PAID>0.0001)
			       group by fo.PAY_CODE
			    ) BB ON a.paylist_code=BB.PAY_CODE
		LEFT JOIN T_SYS_DATA_DICTIONARY TSDD1 ON TSDD1.TYPE = '代理商逾期催收提醒天数' AND TSDD1.FLAG='代理商逾期催收提醒天数'
		where A.VINUAL_PAID_ALL>0.0001 or B.VINUAL_MONEY>0.0001
		ORDER BY BB.PENALTY_DAY DESC nulls LAST,A.PAYLIST_CODE
			) CC
	    WHERE ROWNUM &lt;= #{PAGE_END}
			) CCC
	WHERE CCC.ROWNO >= #{PAGE_BEGIN}
	</select>
	
	<select id="query_overdue_Price_MG_SUPP_count" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(1) FROM(
		SELECT A.*,B.PAID_MONEY PAID_MONEY_ALL,B.VINUAL_MONEY VINUAL_MONEY_ALL,BB.PENALTY_DAY --PENALTY_DAY是供应商垫付逾期的最大天数
			,CASE WHEN NVL(BB.PENALTY_DAY,0)>TSDD1.CODE THEN '1' ELSE '2' END DUNFLAG
			 FROM (
			SELECT  FO.CUST_NAME,FO.PAY_CODE PAYLIST_CODE,FRP.STATUS,TSDD.FLAG PLAN_STATE
			,ROUND(SUM(NVL(FO.RENT_RECE,0)-NVL(FO.RENT_PAID,0)),2) RENT_RECE_ALL
			,ROUND(SUM(NVL(FO.PENALTY_RECE,0)-NVL(FO.PENALTY_PAID,0)),2) PENALTY_RECE_ALL,
            ROUND(SUM(NVL(FO.VINUAL_PAID, 0)),2) VINUAL_PAID_ALL
			FROM (SELECT * FROM FI_OVERDUE WHERE CREATE_DATE = TRUNC(SYSDATE)) FO
			LEFT JOIN FIL_RENT_PLAN_HEAD_MAX_V FRP ON FO.PAY_CODE=FRP.PAYLIST_CODE
			LEFT JOIN v_plan_scheme VPS ON FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
			left join fil_project_head fph on VPS.project_id=fph.id
			LEFT JOIN T_SYS_DATA_DICTIONARY TSDD ON TSDD.TYPE='还款计划状态' AND FRP.STATUS=TSDD.CODE 
			<where>
			fph.PLATFORM_TYPE !=7
			<if test="CUST_NAME !=null and CUST_NAME !=''"> and FO.CUST_NAME like '%'||#{CUST_NAME}||'%'</if>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''"> and FO.PAY_CODE like '%'||#{PAYLIST_CODE}||'%'</if>
			<if test="SUP_ID !=null and SUP_ID !=''"> and VPS.SUP_ID =#{SUP_ID}</if>
			</where>
         GROUP BY FO.CUST_NAME, FRP.STATUS,FO.PAY_CODE,TSDD.FLAG) A
				left join  ( SELECT FRB.PAYLIST_CODE,ROUND(SUM(FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0)),2) PAID_MONEY,
                    ROUND(SUM(NVL(FRB.VINUAL_MONEY,0)),2) VINUAL_MONEY
								    FROM FI_R_BEGINNING FRB
								    WHERE FRB.ITEM_FLAG=2
	                  AND (FRB.BEGINNING_MONEY-NVL(FRB.BEGINNING_PAID,0))>=0.01 
								    GROUP BY FRB.PAYLIST_CODE) B on a.paylist_code=b.paylist_code
				left join (
			        select fo.PAY_CODE,MAX(fo.PENALTY_DAY) PENALTY_DAY from fi_overdue fo 
			        left join (
			          select frb.Paylist_Code,frb.Beginning_Num,round(sum(nvl(frb.VINUAL_MONEY,0)),2) VINUAL_MONEY from fi_overdue fo
			  		    left join fi_r_beginning frb on fo.period=frb.beginning_num and fo.pay_code=frb.paylist_code and frb.ITEM_FLAG=2
			          where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) 
			          group by frb.Paylist_Code,frb.Beginning_Num
			       ) t on fo.pay_code=t.Paylist_Code and fo.PERIOD=t.Beginning_Num
			       where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) and (t.VINUAL_MONEY>0.0001 or fo.VINUAL_PAID>0.0001)
			       group by fo.PAY_CODE
			    ) BB ON a.paylist_code=BB.PAY_CODE
		LEFT JOIN T_SYS_DATA_DICTIONARY TSDD1 ON TSDD1.TYPE = '代理商逾期催收提醒天数' AND TSDD1.FLAG='代理商逾期催收提醒天数'
		where A.VINUAL_PAID_ALL>0.0001 or B.VINUAL_MONEY>0.0001
		ORDER BY BB.PENALTY_DAY DESC nulls LAST,A.PAYLIST_CODE
		) t
	</select>
	
	<select id="getOverdueCollectRecordByRenterCode" parameterType="map" resultType="map">
		SELECT 
	      TO_CHAR(FIL.CALL_DATE,'YYYY-MM-DD HH24:MI:SS') CALLTIME,
	      FIL.ID,
	      FIL.RENTER_ID,
	      FIL.TYPE,
	      FIL.CALL_NAME,
	      FIL.RECIEVE_NAME,
	      FIL.RECORD,
	      FIL.INFO,
	      FIL.CALL_TEL ,
	      FIL.RETURN_TYPE,
	      FIL.PAYLIST_CODE,
	      FIL.REPAYMENT_TYPE,
	      COLL.FILE_PATH,
	      COLL.NAME FILE_NAME,
	      COLL.FILE_TYPE
	    FROM FIL_DUN_LOG FIL 
	    left join FIL_DUN_COLLECTIONRECORD COLL on (FIL.ID=COLL.FIL_DUN_LOG_ID)
	    WHERE  STATE=0
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">and FIL.PAYLIST_CODE=#{PAYLIST_CODE}</if>
			AND ROWNUM &lt;=3 
			 order by CALLTIME desc
	</select>
	
	<select id="selectDunLogPreId" parameterType="map" resultType="map">
		SELECT SEQ_FIL_DUN_LOG.CURRVAL FROM DUAL
	</select>
	
	<insert id="doAddCollectionRecord" parameterType="map">
		insert into FIL_DUN_COLLECTIONRECORD (ID
					<if test="FILE_NAME!=NULL and FILE_NAME!=''">,NAME</if>
					<if test="FILE_PATH!=NULL and FILE_PATH!=''">,FILE_PATH</if>
					<if test="FIL_DUN_LOG_ID!=NULL and FIL_DUN_LOG_ID!=''">,FIL_DUN_LOG_ID</if>
		)
		VALUES (SEQ_FIL_DUN_COLLECTIONRECORD.NEXTVAL
					<if test="FILE_NAME!=NULL and FILE_NAME!=''">,#{FILE_NAME}</if>
					<if test="FILE_PATH!=NULL and FILE_PATH!=''">,#{FILE_PATH}</if>
					<if test="FIL_DUN_LOG_ID!=NULL and FIL_DUN_LOG_ID!=''">,#{FIL_DUN_LOG_ID}</if>
					)
	</insert>
	
	<insert id="doAddPressDunLog" parameterType="java.util.Map">
		insert into FIL_DUN_LOG
				(
					ID	
					<if test="CALL_NAME !=null and CALL_NAME !=''">,CALL_NAME	</if>
					<if test="RECIEVE_NAME !=null and RECIEVE_NAME !=''">,RECIEVE_NAME	</if>
					<if test="CALL_DATE !=null and CALL_DATE !=''">,CALL_DATE	</if>
					<if test="RECORD !=null and RECORD !=''">,RECORD	</if>
					<if test="INFO !=null and INFO !=''">,INFO	</if>
					<if test="CREATE_DATE !=null and CREATE_DATE !=''">,CREATE_DATE 	</if>
					<if test="MODIFY_DATE !=null and MODIFY_DATE !=''">,MODIFY_DATE	 </if>
					<if test="TYPE !=null and TYPE !=''">,TYPE	</if>
					<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,PAYLIST_CODE	</if>
					<if test="RETURN_TYPE !=null and RETURN_TYPE !=''">,RETURN_TYPE	</if>
					 ,STATE	 
					<if test="CALL_TEL !=null and CALL_TEL !=''">,CALL_TEL  </if>
					,RENTER_ID 
					<if test="CREATEUSERID!=null and CREATEUSERID!=''">,CREATEUSERID</if>
					<if test="DETAILS!=null and DETAILS!=''">,DETAILS</if>
					<if test="REPAYMENT_TYPE!=null and REPAYMENT_TYPE!=''">,REPAYMENT_TYPE</if>
				)
				values
				(
					SEQ_FIL_DUN_LOG.nextval	
					<if test="CALL_NAME !=null and CALL_NAME !=''">,#{CALL_NAME}	</if>
					<if test="RECIEVE_NAME !=null and RECIEVE_NAME !=''">,#{RECIEVE_NAME}	</if>
					<if test="CALL_DATE !=null and CALL_DATE !=''">,to_date(#{CALL_DATE},'yyyy-MM-dd HH24:mi')	</if>
					<if test="RECORD !=null and RECORD !=''">,#{RECORD}	</if>
					<if test="INFO !=null and INFO !=''">,#{INFO}	</if>
					<if test="CREATE_DATE !=null and CREATE_DATE !=''">,#{CREATE_DATE} 	</if>
					<if test="MODIFY_DATE !=null and MODIFY_DATE !=''">,#{MODIFY_DATE}	 </if>
					<if test="TYPE !=null and TYPE !=''">,#{TYPE}	</if>
					<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">,#{PAYLIST_CODE}	</if>
					<if test="RETURN_TYPE !=null and RETURN_TYPE !=''">,#{RETURN_TYPE}	</if>
					 ,0	 
					<if test="CALL_TEL !=null and CALL_TEL !=''">,#{CALL_TEL}  </if>
					,(SELECT  nvl(FCC.ID,0)  FROM FIL_CUST_CLIENT FCC,FIL_PROJECT_HEAD FPD, FIL_RENT_PLAN_HEAD_MAX_V FRP
                   WHERE FCC.ID = FPD.CLIENT_ID AND FPD.ID = FRP.PROJECT_ID
                      and FRP.PAYLIST_CODE=#{PAYLIST_CODE})
					<if test="CREATEUSERID!=null and CREATEUSERID!=''">,#{CREATEUSERID}</if>
					<if test="DETAILS!=null and DETAILS!=''">,#{DETAILS}</if>
					<if test="REPAYMENT_TYPE!=null and REPAYMENT_TYPE!=''">,#{REPAYMENT_TYPE}</if>
				)
	</insert>
	
	<delete id="doDeletePressDunLog" parameterType="java.lang.String">
		delete from FIL_DUN_LOG where ID=#{ID}
	</delete>
	
	<select id="DunLog_more" parameterType="map" resultType="map">
		SELECT 
	      TO_CHAR(FIL.CALL_DATE,'YYYY-MM-DD HH24:MI:SS') CALLTIME,
	      FIL.ID,
	      FIL.RENTER_ID,
	      FIL.TYPE,
	      FIL.CALL_NAME,
	      FIL.RECIEVE_NAME,
	      FIL.RECORD,
	      FIL.INFO,
	      FIL.CALL_TEL ,
	      FIL.RETURN_TYPE,
	      FIL.PAYLIST_CODE,
	      FIL.REPAYMENT_TYPE,
	      COLL.FILE_PATH,
	      COLL.NAME FILE_NAME,
	      COLL.FILE_TYPE
	    FROM FIL_DUN_LOG FIL 
	    left join FIL_DUN_COLLECTIONRECORD COLL on (FIL.ID=COLL.FIL_DUN_LOG_ID)
	    WHERE  STATE=0
		<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">and FIL.PAYLIST_CODE=#{PAYLIST_CODE}</if>
			 order by CALLTIME desc
	</select>
	
	<select id="query_overdue_All" parameterType="map" resultType="map">
		select fo.PAY_CODE,fo.PERIOD,nvl(fo.RENT_RECE,0) RENT_RECE
		,round(nvl(fo.RENT_PAID,0),2) RENT_PAID,round(nvl(fo.PENALTY_RECE,0),2) PENALTY_RECE
		,round(nvl(fo.PENALTY_PAID,0),2) PENALTY_PAID,to_char(frb.beginning_receive_data,'yyyy-MM-dd') beginning_receive_data
		,round(sum(nvl(frb.VINUAL_MONEY,0)),2) VINUAL_MONEY,ROUND(NVL(fo.VINUAL_PAID, 0)) VINUAL_PAID
		from fi_overdue fo
		left join fi_r_beginning frb on fo.period=frb.beginning_num and fo.pay_code=frb.paylist_code and frb.ITEM_FLAG=2
		<where>
			TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE)
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">and fo.PAY_CODE=#{PAYLIST_CODE}</if>
		</where>
		group by fo.PAY_CODE,fo.PERIOD,fo.RENT_RECE,fo.RENT_PAID
		,fo.PENALTY_RECE,fo.PENALTY_PAID,frb.beginning_receive_data,fo.VINUAL_PAID
		order by fo.PAY_CODE,fo.PERIOD
	</select>
	
	<select id="STATEMENTS_ALL"  parameterType="map" resultType="map">
		select frb.PAYLIST_CODE,frb.BEGINNING_NUM,frb.BEGINNING_NAME
		,round(nvl(frb.BEGINNING_MONEY,0),2) BEGINNING_MONEY,round(nvl(frb.BEGINNING_PAID,0),2) BEGINNING_PAID,round(nvl(frb.VINUAL_MONEY,0),2) VINUAL_MONEY
		from fi_r_beginning frb
		<where>
			<if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''"> frb.PAYLIST_CODE=#{PAYLIST_CODE}</if>
		</where>
		 order by frb.BEGINNING_NUM nulls first
	</select>
	
	<update id="updateLawsuit_Pay_Plan"  parameterType="map">
		update fil_rent_plan_head set STATUS=100 where PAYLIST_CODE=#{PAYLIST_CODE}
	</update>
	
	<select id="queryPhoneByPay" parameterType="map" resultType="map">
		select fcc.name CUST_NAME,fcc.type,fpe.pro_code,
		case when fcc.type='LP' then fcc.LEGAL_PERSON_PHONE
		when fcc.type='NP' then fcc.TEL_PHONE
		end PHONE
		from fil_rent_plan_head_max_v frph
		left join fil_project_head fpe on fpe.id=frph.project_id
		left join fil_cust_client fcc on fcc.id=fpe.client_id
		where frph.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>
	
	<select id="query_dun_All"  parameterType="map" resultType="map">
		select ZH_CONCAT(DISTINCT fo.PERIOD) PERIODS,round(sum(fo.PENALTY_RECE-fo.PENALTY_PAID),2) PENALTY_ALL,PAY_CODE
		from fi_overdue fo
		where TRUNC(fo.CREATE_DATE)=TRUNC(SYSDATE) and fo.PAY_CODE=#{PAYLIST_CODE}
		group by PAY_CODE
	</select>
	
	<insert id="insert_SMS_Mes" parameterType="map">
		insert into T_SYS_SMS_MESSAGESEND(ID,mobile,content,sendState,stage,fact_sendTime)
		values (SEQ_T_SYS_SMS_MESSAGESEND.nextval,#{MOBILE},#{CONTENT},0,5,sysdate)
	</insert>
	
	<select id="showPayOverList" parameterType="map" resultType="map">
	SELECT FCC.NAME,
	       FPH.PRO_NAME,
	       FPH.PRO_CODE,
	       FOP.YQZJ,
	       FOP.PERIOD
	  FROM (SELECT PROJECT_ID, YQZJ, PERIOD
	          FROM (SELECT FR.PROJECT_ID,
	                       SUM(FO.RENT_RECE - FO.RENT_PAID) YQZJ,
	                       COUNT(1) PERIOD
	                  FROM FI_OVERDUE FO, FIL_RENT_PLAN_HEAD_MAX_V FR
	                 WHERE FO.PAY_CODE = FR.PAYLIST_CODE
	                   AND FO.CREATE_DATE = TO_DATE(#{CREATE_DATE}, 'YYYY-MM-DD')
	                 GROUP BY FR.PROJECT_ID)
	         WHERE PERIOD > 0) FOP,
	       V_EQUIPMENT_SUPS_COMS FPH,
	       FIL_CUST_CLIENT FCC,
	       FI_FUND_PAYMENT_DETAIL FFPH
	 WHERE  FFPH.PAYMENT_HEAD_ID=#{PAYMENT_HEAD_ID}
	   AND FFPH.SUPPER_ID = FPH.SUPPLIER_IDS
	   AND FPH.CLIENT_ID = FCC.ID
	   AND FPH.PROJECT_ID=FOP.PROJECT_ID
	</select>
	
	<select id="showOverDuePercent" parameterType="map" resultType="map">
		SELECT FP.SUPPLIERS_ID,
		       round(SUM(nvl(FRB.BEGINNING_MONEY,0) - nvl(FRB.BEGINNING_PAID,0)) / SUM(FRB.BEGINNING_MONEY),2) YQZJ,
		       round(SUM(FPE.AMOUNT) / SUM(FP.AMOUNT),2) AMOUNT
		       ,round(SUM(nvl(FPE.AMOUNT,0)) / SUM(nvl(FP.AMOUNT,0)),2)*100 AMOUNTRATE,
		       round(SUM(nvl(FRB.BEGINNING_MONEY,0) - nvl(FRB.BEGINNING_PAID,0)) / SUM(FRB.BEGINNING_MONEY),2)*100 YQZJRATE
		  FROM FI_OVERDUE            FO,
		       FIL_PROJECT_EQUIPMENT FPE,
		       FIL_PROJECT_EQUIPMENT FP,
		       FI_R_BEGINNING        FRB
		 WHERE FO.PAY_CODE = FPE.PAYLIST_CODE
		   AND FO.CREATE_DATE = TO_DATE(#{CREATE_DATE}, 'YYYY-MM-DD')
		   AND FP.SUPPLIERS_ID=#{SUPPER_ID}
		   AND FP.SUPPLIERS_ID = FPE.SUPPLIERS_ID(+)
		   AND FP.PAYLIST_CODE = FRB.PAYLIST_CODE(+)
		   AND FRB.BEGINNING_FLAG != 1
		   AND FRB.ITEM_FLAG = 2
		 GROUP BY FP.SUPPLIERS_ID
	</select>
	
	<insert id="addExemptOverdue" parameterType="map">
		INSERT　INTO FI_OVERDUE_EXEMPT
		  (
		    ID,
		    <if test="SUP != null">SUP,</if>
		    CREATE_CODE,
		    CREATE_NAME,
		    CREATE_DATE,
		    STATUS
		  )
		  VALUES
		  (
		    #{ID},
		    <if test="SUP != null">#{SUP},</if>
		    #{CREATE_CODE},
		    #{CREATE_NAME},
		    SYSDATE,
		    'apply'
		  )
	</insert>
	
	<select id="getApplyHisByOID" parameterType="String" resultType="map">
	   SELECT FO.PAY_CODE,FO.PERIOD FROM FI_OVERDUE FO,FI_OVERDUE_EXEMPT_ITEM FOEI,FI_OVERDUE_EXEMPT FOE
		WHERE FO.PAY_CODE = FOEI.PAY_CODE
		AND FOEI.P_ID = FOE.ID
		AND FO.PERIOD = FOEI.PERIOD
		AND FOE.STATUS = 'apply'
		AND FO.ID = #{OID}
		AND ROWNUM = 1
	</select>
	
	<update id="appOverdueUpStatus" parameterType="String">
		UPDATE FI_OVERDUE FO 
		SET FO.DUE_STATUS = '2'
		WHERE FO.DUE_STATUS = '1' AND FO.ID = #{OID}
	</update>
	
	<insert id="addExemptOverdueItem" parameterType="map">
		INSERT INTO FI_OVERDUE_EXEMPT_ITEM
		  (
		    ID,
		    P_ID,
		    PAY_CODE,
		    PERIOD,
		    CREATE_DATE,
		    MONEY,
		    MONEY_SRC,
		    SUP,
		    CUST_NAME,
		    EQUI,
		    OID
		  )
	 SELECT SEQ_FI_OVERDUE_EXEMPT_ITEM.NEXTVAL,
	 		#{PID},
	 		FO.PAY_CODE,
	  		FO.PERIOD,
	  		SYSDATE,
	  		ROUND(FO.PENALTY_RECE-FO.PENALTY_PAID),
	  		ROUND(FO.PENALTY_RECE-FO.PENALTY_PAID),
	  		VESC.SUPPLIER_NAMES SUP,
	  		FO.CUST_NAME,
	  		VESC.PRODUCT_NAMES EQUI,
	  		FO.ID 
	   FROM FI_OVERDUE FO
	   left join V_EQUIPMENT_SUPS_COMS VESC on FO.PAY_CODE=VESC.PAYLIST_CODE
	  WHERE FO.ID=#{OID}
	    AND FO.DUE_STATUS = '1'
	</insert>
	
	<insert id="addExemptOverdueItemAll" parameterType="map">
		INSERT INTO FI_OVERDUE_EXEMPT_ITEM
		  (
		    ID,
		    P_ID,
		    PAY_CODE,
		    PERIOD,
		    CREATE_DATE,
		    MONEY,
		    MONEY_SRC,
		    SUP,
		    CUST_NAME,
		    EQUI,
		    OID
		  )
	 SELECT SEQ_FI_OVERDUE_EXEMPT_ITEM.NEXTVAL,
	 		#{PID},
	 		FO.PAY_CODE,
	  		FO.PERIOD,
	  		SYSDATE,
	  		ROUND(FO.PENALTY_RECE-FO.PENALTY_PAID),
	  		ROUND(FO.PENALTY_RECE-FO.PENALTY_PAID),
	  		FO.SUP,
	  		FO.CUST_NAME,
	  		FO.EQUI,
	  		FO.ID 
  FROM (SELECT FO.CREATE_DATE,
               FO.PAY_START,
               FO.RENT_DATE,
               FO.PENALTY_PAID,
               FO.PERIOD,
               FO.RENT_RECE,
               FO.RENT_PAID,
               FO.PENALTY_RECE,
               FO.ID,
               FO.PROJECT_ID,
               FO.PENALTY_DAY,
               FO.DUE_STATUS,
               FO.EQUI,
               FO.SUP,
               FO.CUST_NAME,
               FO.PAY_CODE,
               CASE
                 WHEN T2.PAY_CODE IS NULL THEN
                  'noApply'
                 ELSE
                  NULL
               END ISAPPLY
          FROM FI_OVERDUE FO,
               (SELECT FOEI.PAY_CODE, FOEI.PERIOD
                  FROM FI_OVERDUE_EXEMPT　FOE, FI_OVERDUE_EXEMPT_ITEM FOEI
                 WHERE FOEI.P_ID = FOE.ID
                   AND STATUS = 'apply') T2
         WHERE FO.PAY_CODE = T2.PAY_CODE(+)
           AND FO.PERIOD = T2.PERIOD(+)
           AND FO.CREATE_DATE = TRUNC(SYSDATE)) FO
 WHERE ISAPPLY = 'noApply'
   AND FO.DUE_STATUS = '1'
<if test="EQUI != null and EQUI != ''">AND FO.EQUI LIKE '%${EQUI}%'</if>
<if test="SUP != null and SUP != ''">AND FO.SUP = #{SUP}</if>
<if test="CUST_NAME != null and CUST_NAME != ''">AND FO.CUST_NAME LIKE '%${CUST_NAME}%'</if>
<if test="PAY_CODE != null and PAY_CODE != ''">AND FO.PAY_CODE LIKE '%${PAY_CODE}%'</if>
<if test="RENT_DATE_START != null and RENT_DATE_START != ''">AND FO.RENT_DATE >= TO_DATE(#{RENT_DATE_START},'YYYY-MM-DD')</if>
<if test="RENT_DATE_END != null and RENT_DATE_END != ''">AND FO.RENT_DATE &lt;= TO_DATE(#{RENT_DATE_END},'YYYY-MM-DD')</if>
	</insert>
	
	<update id="appOverdueUpStatusAll" parameterType="map">
	update FI_OVERDUE FO
	   SET FO.DUE_STATUS = '2'
	WHERE FO.DUE_STATUS = '1'
		<if test="EQUI != null and EQUI != ''">AND FO.EQUI LIKE '%${EQUI}%'</if>
		<if test="SUP != null and SUP != ''">AND FO.SUP = #{SUP}</if>
		<if test="CUST_NAME != null and CUST_NAME != ''">AND FO.CUST_NAME LIKE '%${CUST_NAME}%'</if>
		<if test="PAY_CODE != null and PAY_CODE != ''">AND FO.PAY_CODE LIKE '%${PAY_CODE}%'</if>
		<if test="RENT_DATE_START != null and RENT_DATE_START != ''">AND FO.RENT_DATE >= TO_DATE(#{RENT_DATE_START},'YYYY-MM-DD')</if>
		<if test="RENT_DATE_END != null and RENT_DATE_END != ''">AND FO.RENT_DATE &lt;= TO_DATE(#{RENT_DATE_END},'YYYY-MM-DD')</if>
		AND FO.CREATE_DATE = TRUNC(SYSDATE)
	</update>
	
	<update id="upExemptOverdueItem" parameterType="map">
		update FI_OVERDUE_EXEMPT_ITEM
		set ID = #{ID}
		<if test="MONEY != null and MONEY != ''">,MONEY = #{MONEY}</if>
		WHERE ID = #{ID}
	</update>
	
	<update id="upExemptOverdue" parameterType="map">
		UPDATE FI_OVERDUE_EXEMPT
		SET ID = #{ID}
		<if test="STATUS != null">,STATUS = #{STATUS}</if>
		<if test="JBPM_ID != null">,JBPM_ID = #{JBPM_ID}</if>
		WHERE ID = #{ID}
	</update>
	
	<select id="getBpmInfoByPayCode" parameterType="map" resultType="map">
  SELECT TO_CHAR(FPH.CLIENT_ID) CLIENT_ID,TO_CHAR(FRPHMV.PROJECT_ID) PROJECT_ID FROM 
    FIL_RENT_PLAN_HEAD_MAX_V FRPHMV , 
    FIL_PROJECT_HEAD FPH
    WHERE FRPHMV.PROJECT_ID = FPH.ID
      AND FRPHMV.PAYLIST_CODE　＝　#{PAY_CODE}
	</select>
	
	<select id="getExemptPage" parameterType="map" resultType="map">
	SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
		 SELECT FOE.ID,
		  FOE.PAY_CODE,
		  FOE.PERIOD,
		  FOE.MONEY,
		  TO_CHAR(FOE.CREATE_DATE,'YYYY-MM-DD HH:MI:SS') CREATE_DATE,
		  FOE.STATUS,
		  FOE.JBPM_ID,
		  FCC.NAME,
		  FPH.PRO_NAME
		FROM FI_OVERDUE_EXEMPT FOE,
		     FIL_RENT_PLAN_HEAD_MAX_V FRPHMV , 
		    FIL_PROJECT_HEAD FPH,
		    FIL_CUST_CLIENT FCC
		  WHERE FRPHMV.PROJECT_ID = FPH.ID(+)
		  AND FOE.PAY_CODE = FRPHMV.PAYLIST_CODE(+)
		  AND FCC.ID(+) = FPH.CLIENT_ID
		<if test="content != null and content != ''">
		AND (FCC.NAME like '%${content}%'
			OR FPH.PRO_NAME like '%${content}%'
			OR FOE.PAY_CODE like '%${content}%' )
		</if>
		<if test="SUP != null and SUP != ''"> AND FOE.SUP = #{SUP}</if>
		ORDER BY FOE.CREATE_DATE DESC
	 ) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>
	
	<select id="getExemptPageCount" parameterType="map" resultType="int">
		 SELECT COUNT(1)
		FROM FI_OVERDUE_EXEMPT FOE,
		     FIL_RENT_PLAN_HEAD_MAX_V FRPHMV , 
		    FIL_PROJECT_HEAD FPH,
		    FIL_CUST_CLIENT FCC
		  WHERE FRPHMV.PROJECT_ID = FPH.ID(+)
		  AND FOE.PAY_CODE = FRPHMV.PAYLIST_CODE(+)
		  AND FCC.ID(+) = FPH.CLIENT_ID
		<if test="content != null and content != ''">
		AND (FCC.NAME like '%${content}%'
			OR FPH.PRO_NAME like '%${content}%'
			OR FOE.PAY_CODE like '%${content}%' )
		</if>
	</select>
	
	<select id="getExempt" parameterType="map" resultType="map">
	 SELECT ID,
		    CREATE_CODE,
		    CREATE_NAME,
		    CREATE_DATE,
		    STATUS
	   FROM FI_OVERDUE_EXEMPT
	  WHERE ID = #{ID}
	</select>
	
	<select id="getExemptList" parameterType="Map" resultType="map">
	SELECT * FROM FI_OVERDUE_EXEMPT_ITEM WHERE P_ID = #{ID}
	</select>
	
	<select id="getExemptOpCount" resultType="int" parameterType="map">
		SELECT COUNT(1) FROM FI_OVERDUE FO
		WHERE ID IN ( SELECT FOEI.OID FROM FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = #{ID}) 
		AND (FO.DUE_STATUS != 1 OR FO.DUE_STATUS IS NULL)
	</select>
	
	<select id="getExemptOpList" resultType="map" parameterType="map">
		SELECT FO.PAY_CODE PAYLIST_CODE, FO.PERIOD BEGINNING_NUM FROM FI_OVERDUE FO
		WHERE ID IN ( SELECT FOEI.OID FROM FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = #{ID}) 
		AND FO.DUE_STATUS = 1
	</select>
	
	<select id="getExemptOpList2" resultType="map" parameterType="String">
		SELECT FOEI.PAY_CODE PAYLIST_CODE, FOEI.PERIOD BEGINNING_NUM
		  FROM FI_OVERDUE_EXEMPT_ITEM FOEI
		 WHERE FOEI.P_ID = #{ID}
	</select>
	
	<update id="exemptPass" parameterType="map">
		UPDATE FI_OVERDUE FO
		   SET FO.PENALTY_RECE = FO.PENALTY_RECE - ( SELECT FOEI.MONEY FROM FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.OID = FO.ID AND FOEI.P_ID = #{ID})
		   , FO.DUE_STATUS = 1,PENALTY_DATE = SYSDATE
	 	 WHERE ID IN ( SELECT FOEI.OID FROM FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = #{ID})
	</update>
	
	<select id="getErrorCount" parameterType="Map" resultType="int">
	SELECT COUNT(1)
	  FROM FI_OVERDUE_EXEMPT_ITEM T1, FI_OVERDUE T2
	 WHERE T1.OID = T2.ID
	   AND T2.PENALTY_RECE &lt; 0
	   AND T1.P_ID = #{ID}
	</select>
	
	<update id="exemptNoPass" parameterType="map">
		UPDATE FI_OVERDUE FO
		   SET FO.DUE_STATUS = 1
	 	 WHERE ID IN ( SELECT FOEI.OID FROM FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = #{ID})
	</update>
	
	<select id="getExemptItemDue" parameterType="map" resultType="map">
	SELECT FOEI.PAY_CODE,FOEI.PERIOD FROM FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = #{ID}
	</select>
	
	<select id="getExemptApplyPage" parameterType="map" resultType="map">
	SELECT T2.* FROM ( SELECT T1.*,ROWNUM RN FROM (
		select FO.CREATE_DATE,
				   FO.PAY_START,
				   TO_CHAR(FO.RENT_DATE,'YYYY-MM-DD') RENT_DATE,
				   FO.PENALTY_PAID,
				   FO.PERIOD,
				   FO.RENT_RECE,
				   FO.RENT_PAID,
				   FO.PENALTY_RECE,
				   ROUND(FO.PENALTY_RECE - FO.PENALTY_PAID) SUMFUN,
				   FO.ID,
				   FO.PROJECT_ID,
				   FO.PENALTY_DAY,
				   FO.DUE_STATUS,
				   FO.EQUI,
				   FO.SUP,
				   FO.CUST_NAME,
				   FO.PAY_CODE
		 from ( SELECT FO.CREATE_DATE,
				   FO.PAY_START,
				   FO.RENT_DATE,
				   FO.PENALTY_PAID,
				   FO.PERIOD,
				   FO.RENT_RECE,
				   FO.RENT_PAID,
				   FO.PENALTY_RECE,
				   FO.ID,
				   FO.PROJECT_ID,
				   FO.PENALTY_DAY,
				   FO.DUE_STATUS,
				   VESC.PRODUCT_NAMES EQUI,
				   VESC.SUPPLIER_NAMES SUP,
				   FO.CUST_NAME,
				   FO.PAY_CODE,
		         CASE WHEN T2.PAY_CODE IS NULL THEN 'noApply'
		         ELSE NULL END ISAPPLY
		      FROM FI_OVERDUE FO,(SELECT FOEI.PAY_CODE,FOEI.PERIOD FROM FI_OVERDUE_EXEMPT　FOE,FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = FOE.ID AND STATUS = 'apply') T2
		      	,V_EQUIPMENT_SUPS_COMS VESC
	      WHERE FO.PAY_CODE = T2.PAY_CODE(+)
	        AND FO.PERIOD = T2.PERIOD(+)
	        AND FO.PAY_CODE = VESC.PAYLIST_CODE(+)
	        AND FO.OVERDUE_STATUS = '0'
	        <if test="EQUI != null and EQUI != ''">AND FO.EQUI LIKE '%${EQUI}%'</if>
			<if test="SUP != null and SUP != ''">AND FO.SUP LIKE '%${SUP}%'</if>
			<if test="CUST_NAME != null and CUST_NAME != ''">AND FO.CUST_NAME LIKE '%${CUST_NAME}%'</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">AND FO.PAY_CODE LIKE '%${PAY_CODE}%'</if>
			<if test="RENT_DATE_START != null and RENT_DATE_START != ''">AND FO.RENT_DATE >= TO_DATE(#{RENT_DATE_START},'YYYY-MM-DD')</if>
			<if test="RENT_DATE_END != null and RENT_DATE_END != ''">AND FO.RENT_DATE &lt;= TO_DATE(#{RENT_DATE_END},'YYYY-MM-DD')</if>
			AND FO.CREATE_DATE = TRUNC(SYSDATE)
		)FO WHERE ISAPPLY = 'noApply'
		ORDER BY CUST_NAME,PAY_CODE,PERIOD
	 ) T1 WHERE ROWNUM &lt;=#{PAGE_END} ) t2 WHERE t2.RN>=#{PAGE_BEGIN}
	</select>
	
	<select id="getExemptApplyPageCount" parameterType="map" resultType="int">
		SELECT COUNT(1)
		 from ( SELECT CASE WHEN T2.PAY_CODE IS NULL THEN 'noApply'
		         ELSE NULL END ISAPPLY
		      FROM FI_OVERDUE FO,(SELECT FOEI.PAY_CODE,FOEI.PERIOD FROM FI_OVERDUE_EXEMPT　FOE,FI_OVERDUE_EXEMPT_ITEM FOEI WHERE FOEI.P_ID = FOE.ID AND STATUS = 'apply') T2
	      WHERE FO.PAY_CODE = T2.PAY_CODE(+)
	        AND FO.PERIOD = T2.PERIOD(+)
	        AND FO.OVERDUE_STATUS = '0'
	        <if test="EQUI != null and EQUI != ''">AND FO.EQUI LIKE '%${EQUI}%'</if>
			<if test="SUP != null and SUP != ''">AND FO.SUP LIKE '%${SUP}%'</if>
			<if test="CUST_NAME != null and CUST_NAME != ''">AND FO.CUST_NAME LIKE '%${CUST_NAME}%'</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">AND FO.PAY_CODE LIKE '%${PAY_CODE}%'</if>
			<if test="RENT_DATE_START != null and RENT_DATE_START != ''">AND FO.RENT_DATE >= TO_DATE(#{RENT_DATE_START},'YYYY-MM-DD')</if>
			<if test="RENT_DATE_END != null and RENT_DATE_END != ''">AND FO.RENT_DATE &lt;= TO_DATE(#{RENT_DATE_END},'YYYY-MM-DD')</if>
			AND FO.CREATE_DATE = TRUNC(SYSDATE)
		)FO WHERE ISAPPLY = 'noApply'
	</select>
	
	<select id="queryAllProduct" resultType="map">
	SELECT T.PRODUCT_NAME FROM T_PRODUCT T ORDER BY T.GXTIME DESC
	</select>
	
	<select id="getDunRate" parameterType="map" resultType="double">
	SELECT CASE 
	          WHEN FPH.COMPANY_NAME = '社会产品' THEN 0.0007
	          WHEN FPH.COMPANY_NAME IN ( '山推股份','山推机械','山重建机' ) AND FPH.START_CONFIRM_DATE >= TO_DATE('2012-01-10','YYYY-MM-DD') THEN 0.0006
	          WHEN FPH.COMPANY_NAME IN ( '陕西通力','陕重汽' ) AND TSS.SUP_LEVEL='A' AND FPH.START_CONFIRM_DATE >= TO_DATE('2012-01-01','YYYY-MM-DD')THEN 0.0006
	          WHEN FPH.COMPANY_NAME IN ( '陕西通力','陕重汽' ) AND TSS.SUP_LEVEL = 'B' AND FPH.START_CONFIRM_DATE >= TO_DATE('2012-01-17','YYYY-MM-DD') THEN 0.0006
          ELSE 0.0005
       END RATE
	  FROM FIL_PROJECT_HEAD FPH,T_SYS_SUPPLIERS TSS,FIL_RENT_PLAN_HEAD_MAX_V FRPH
	 WHERE FRPH.PROJECT_ID = FPH.ID(+)
	   AND FPH.SUP_ID = TSS.SUP_ID(+)
	   AND FRPH.PAYLIST_CODE = #{PAYLIST_CODE}
	   AND ROWNUM = 1
	</select>
	
	<select id="getOveItem2" resultType="map">
	SELECT T1.* FROM FI_OVERDUE T1 ,
		   (SELECT MAX(ID) ID FROM FI_OVERDUE GROUP BY PAY_CODE,PERIOD) T2
	WHERE T1.ID = T2.ID
	AND T1.PENALTY_RECE - T1.PENALTY_PAID >= 0.1
	</select>
	
	<select id="upDueOne" statementType="CALLABLE" parameterType="map">
		{call prc_dun_one(#{PAY_CODE})}
	</select>

	<delete id="deleteByPayLJ" parameterType="map">
		DELETE FI_OVERDUE T WHERE T.PAY_CODE = #{PAY_CODE} AND T.PERIOD = #{PERIOD} AND PENALTY_DATE IS NULL
	</delete>

	<delete id="deleteByPay0" parameterType="map">
		DELETE FI_OVERDUE T WHERE T.PAY_CODE = #{PAY_CODE}
	</delete>

	<delete id="deleteByPay1" parameterType="map">
		DELETE FI_OVERDUE T WHERE T.PAY_CODE = #{PAY_CODE} AND T.PERIOD = #{PERIOD}
	</delete>

	<delete id="deleteByPay2" parameterType="map">
		DELETE FI_OVERDUE T WHERE T.PAY_CODE = #{PAY_CODE} AND T.PERIOD >= #{PERIOD}
	</delete>

	<delete id="deleteByPay3" parameterType="map">
		DELETE FI_OVERDUE T WHERE T.PAY_CODE = #{PAY_CODE} AND T.CREATE_DATE >= TO_DATE(#{CREATE_DATE},'YYYY-MM-DD')
	</delete>
	<delete id="deleteByPay4" parameterType="map">
		DELETE FI_OVERDUE T WHERE T.PAY_CODE = #{PAY_CODE} AND T.CREATE_DATE >TO_DATE(#{CREATE_DATE},'YYYY-MM-DD')
	</delete>

<!-- Add By YangJ 2014年5月15日11:06:54 查询资产明细 -->

<!-- 风险成因管理 -->



<select id="queryAssetDetail" parameterType="map" resultType="map">
		SELECT PRODUCT_NAME,--设备名称
		SPEC_NAME,--型号名称
		CERTIFICATE_NUM, --合格证编号
		ENGINE_TYPE,--发动机编号
		CAR_SYMBOL, --车架号
		ID,<!-- 2014年5月16日14:27:05 添加 -->
		tss.SUP_SHORTNAME SUP_SHORTNAME,
		tsc.COMPANY_SHORTNAME COMPANY_SHORTNAME
		FROM FIL_PROJECT_EQUIPMENT pe,T_SYS_SUPPLIERS tss,T_SYS_COMPANY tsc  WHERE pe.PAYLIST_CODE = #{PAYLIST_CODE}
		AND tss.SUP_ID=pe.SUPPLIERS_ID AND tsc.COMPANY_ID=pe.COMPANY_ID
</select>

<select id="over_Mg_AJAX"  parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM (	 
						SELECT  CC.*,ROWNUM ROWNO FROM 
							 (	
							 	SELECT  FCC.NAME,--客户名称
							 			FDL.ID,
							            FDL.PAYLIST_CODE,
							            FDL.CALL_NAME,--催收人员
							            FDL.RECIEVE_NAME,--客户联系人
							            TO_CHAR(FDL.CALL_DATE,'YYYY-MM-DD')CALL_DATE,--联系日期
							            FDL.INFO,--反馈信息
							            FDL.CALL_TEL,--联系电话
							            (SELECT FLAG FROM T_SYS_DATA_DICTIONARY WHERE TYPE='逾期原因' AND CODE=FDL.REPAYMENT_TYPE) REPAYMENT_TYPE,  --未还款原因
							            CASE WHEN FDL.STATE=0 THEN '未消除' ELSE '消除' END STATE,
							            FDL.STATE  FDLSTATE
							  FROM FIL_DUN_LOG FDL, FIL_CUST_CLIENT FCC
							  WHERE FDL.RENTER_ID = FCC.ID
							<if test="REPAYMENT_TYPE != null and REPAYMENT_TYPE != ''">AND FDL.REPAYMENT_TYPE=#{REPAYMENT_TYPE}</if>
							<if test="PAYLIST_CODE != null and PAYLIST_CODE != ''">AND FDL.PAYLIST_CODE=#{PAYLIST_CODE}</if>
							<if test="NAME != null and NAME != ''">AND FCC.NAME=#{NAME}</if>
							<if test="STATE != null and STATE != ''">AND FDL.STATE=#{STATE}</if>
							) CC 
					) CCC
			 <if test="PAGE_BEGIN!=null and PAGE_BEGIN!=''">WHERE CCC.ROWNO BETWEEN #{PAGE_BEGIN} AND #{PAGE_END}</if>
	</select>
	<select id="over_Mg_AJAX_count"  parameterType="java.util.Map" resultType="int">
							
							 	SELECT  count(1)counts
							  FROM FIL_DUN_LOG FDL, FIL_CUST_CLIENT FCC
							  WHERE FDL.RENTER_ID = FCC.ID
							 <if test="REPAYMENT_TYPE != null and REPAYMENT_TYPE != ''">AND FDL.REPAYMENT_TYPE=#{REPAYMENT_TYPE}</if>
							<if test="PAYLIST_CODE != null and PAYLIST_CODE != ''">AND FDL.PAYLIST_CODE=#{PAYLIST_CODE}</if>
							<if test="NAME != null and NAME != ''">AND FCC.NAME=#{NAME}</if>
							<if test="STATE != null and STATE != ''">AND FDL.STATE=#{STATE}</if>
	</select>
	<select id="getRemoveData" parameterType="Map" resultType="Map">
	SELECT ID,
	       (SELECT NAME FROM SECU_USER WHERE CODE=ELIMINATE_PERSONNEL)ELIMINATE_PERSONNEL,
	       TO_CHAR(ELIMINATE_DATE,'YYYY-MM-DD')ELIMINATE_DATE,
	       ELIMINATE_COURSE,
	       ELIMINATE_MEMO
		FROM FIL_DUN_LOG
		WHERE ID=#{ID}
	</select>
	<update id="addRemoveData" parameterType="Map">
	UPDATE 
	 FIL_DUN_LOG
	 SET ELIMINATE_PERSONNEL=#{USERCODE},
	     ELIMINATE_COURSE =#{ELIMINATE_COURSE},
	     ELIMINATE_MEMO = #{ELIMINATE_MEMO},
	     ELIMINATE_DATE =SYSDATE,
	     STATE =1
		WHERE ID=#{ID}
	</update>
	<select id="getemployee" parameterType="Map" resultType="Map">
		SELECT CL.ID CLIENT_ID,
		       CL.NAME,
		       CL.TYPE,
		       CL.ID_CARD_TYPE,
		       CL.ID_CARD_NO,
		       CL.SEX,
		       CL.BIRTHDAY,
		       CL.TEL_PHONE,
		       CL.PHONE,
		       CL.POST,
		       CL.DEGREE_EDU,
		       CL.POSITION,
		       CL.WORK_UNIT,
		       CL.COMPANY_ADDR,
		       CL.COMPANY_PROPERTY,
		       TO_CHAR(CL.ENTRY_TIME, 'yyyy-MM-dd') ENTRY_TIME,
		       CL.HOUSE_ADDRESS,
		       CL.HOUSR_RE_ADDRESS,
		       CL.IS_MARRY,
		       CL.IS_CHILDRED,
		       CL.NATION,
		       CL.FAX,
		       CL.BUSINESS_TYPE,
		       CL.CORP_BUSINESS_LICENSE,
		       CL.TAX_CODE,
		       TO_CHAR(CL.SETUP_DATE, 'yyyy-MM-dd') SETUP_DATE,
		       TO_CHAR(CL.REGISTE_DATE, 'yyyy-MM-dd') REGISTE_DATE,
		       CL.REGISTE_CAPITAL,
		       CL.ORAGNIZATION_CODE,
		       CL.RATEPAYING,
		       CL.REGISTE_ADDRESS,
		       CL.REGISTE_PHONE,
		       CL.NUMBER_PER,
		       CL.WORK_ADDRESS,
		       CL.TAX_QUALIFICATION,
		       CL.IS_GUARANTEE,
		       CL.MAIN_BUSINESS,
		       CL.LEGAL_PERSON,
		       CL.LEGAL_PERSON_PHONE,
		       TO_CHAR(CL.PERIOD_OF_VALIDITY, 'yyyy-MM-dd') PERIOD_OF_VALIDITY,
		       CL.REMARK,
		       CL.PROVINCE,
		       CL.CITY,
		       (SELECT NAME FROM T_SYS_AREA A WHERE A.ID = CL.CITY) CITY_NAME,
		       (SELECT DIC.FLAG
		          FROM T_SYS_DATA_DICTIONARY DIC
		         WHERE DIC.CODE(+) = CL.BUSINESS_TYPE) TYPE_NAME,
		       CL.IDCARD_CHECK,
		       CL.IDCARD_PHOTO,
		       CL.USER_YEAR,
		       CL.PHYSICAL_STATE,
		       SCALE_ENTERPRISE,
		       INDUSTRY_FICATION
		  FROM FIL_CUST_CLIENT CL
		 WHERE CL.ID = (SELECT DISTINCT CLIENT_ID
		                  FROM FIL_RENT_PLAN_HEAD FRPH, FIL_PROJECT_HEAD FPH
		                 WHERE FPH.ID = FRPH.PROJECT_ID(+)
		                   AND FRPH.PAYLIST_CODE = #{PAYLIST_CODE})
	</select>
	<select id="getGuarantorList" parameterType="Map" resultType="Map">
		SELECT T.FCGI_ID,
		       T.CREDIT_ID,
		       T.CUST_ID,
		       T.NAME,
		       T.CO_NO,
		       T.FCC_TYPE,
		       T.TYPE,
		       T.CREATE_TIME,
		       T.STATUS,
		       T.SCORE
		  FROM (SELECT FCGI.ID FCGI_ID,
		  			   FCGI.SCORE,
		               FCGI.CREDIT_ID,
		               FCC.ID CUST_ID,
		               FCC.NAME,
		               (FCC.ID_CARD_NO || FCC.ORAGNIZATION_CODE) CO_NO,
		               (SELECT TSDD.FLAG
		                  FROM t_sys_data_dictionary tsdd
		                 WHERE tsdd.code = FCC.TYPE
		                   and tsdd.type = '客户类型') TYPE,
		               FCC.TYPE FCC_TYPE,
		               to_char(FCC.CREATE_TIME, 'yyyy-mm-dd') CREATE_TIME,
		               FCGI.STATUS
		          FROM FIL_CREDIT_GUARANTOR_INFO FCGI, FIL_CUST_CLIENT FCC
		         WHERE FCGI.CUST_ID = FCC.ID
		           AND FCC.JUDGE_GUARANTOR = 1
		           AND FCGI.CREDIT_ID = #{CREDIT_ID}) T ORDER BY T.CREATE_TIME
	</select>
	<select id="getCredit" parameterType="Map" resultType="Map">
		SELECT DISTINCT FRPH.ID CREDIT_ID
                      FROM FIL_RENT_PLAN_HEAD_BAS_MAX__V FRPH, FIL_PROJECT_HEAD FPH
                     WHERE FPH.ID = FRPH.PROJECT_ID(+)
                       AND FRPH.PAYLIST_CODE = #{PAYLIST_CODE}
	</select>
	
	<select id="queryRentHead" parameterType="map" resultType="map">
		SELECT FCC.NAME,
		       FRPH.LEASE_TOPRIC,
		       FRPH.PAYLIST_CODE,
	           FRPH.TOPRIC_SUBFIRENT,
	           FRPH.YEAR_INTEREST,
	           FRPH.YEAR_TYPE,
	           FRPH.* ,
	           FPH.FEES,
	           FPH.POB_ID,
		       FPH.PRO_CODE,
		       FPH.PRO_NAME,
		       TO_CHAR(FRPH.START_DATE, 'YYYY-MM-DD') START_DATE,
		       FRPH.LEASE_TERM,
		       FRPH.LEASE_PERIOD || TDD.FLAG LEASE_PERIOD
		  FROM FIL_RENT_PLAN_HEAD_BAS_MAX__V FRPH,
		       FIL_PROJECT_HEAD FPH,
		       FIL_CUST_CLIENT FCC,
		       (SELECT TSDD.FLAG, TSDD.CODE
		          FROM T_SYS_DATA_DICTIONARY TSDD
		         WHERE TSDD.TYPE = #{_TYPE}
		           AND TSDD.STATUS = 0) TDD
		 WHERE FRPH.PROJECT_ID = FPH.ID
		   AND FPH.CLIENT_ID=FCC.ID
		   AND FRPH.LEASE_PERIOD = TDD.CODE(+)
		   AND FRPH.PAYLIST_CODE=#{PAYLIST_CODE}
	</select>
	<select id="doShowRentDetailOtherFeeListByPayId" parameterType="map" resultType="map">
	SELECT FRPD.ITEM_NAME,
	       FRPD.ITEM_MONEY,
	       TO_CHAR(FRPD.PAY_DATE, 'YYYY-MM-DD') PAY_DATE,
	       TDD.FLAG ITEM_FLAG
	  FROM FIL_RENT_PLAN_DETAIL FRPD,
	  (SELECT TSDD.FLAG,TSDD.CODE FROM T_SYS_DATA_DICTIONARY TSDD WHERE TSDD.TYPE =#{_TYPE}) TDD
	 WHERE FRPD.ITEM_FLAG != 2
	   AND FRPD.ITEM_FLAG=TDD.CODE(+)
	  AND FRPD.PAY_ID =(SELECT ID FROM FIL_RENT_PLAN_HEAD_BAS_MAX__V WHERE PAYLIST_CODE=#{PAYLIST_CODE})
	 ORDER BY FRPD.ITEM_FLAG,FRPD.ID
	</select>
	<select id="getPaymentDetailsByBuyContractId" parameterType="Long" resultType="map">
		SELECT 
			  T.ID,T.PAYMENT_HEAD_ID,T.PROJECT_CODE,T.SUPPER_ID,T.SUPPER_NAME,T.COMP_ID,T.COMP_NAME,T.START_DATE,T.PAY_MONEY,
			  T.PAY_NAME,T.PAY_TYPE,to_char(T.RESERVE_DATE,'yyyy-MM-dd') RESERVE_DATE,T.PAYEE_NAME,T.PAY_BANK_ACCOUNT,T.INVOICE_NUM,T.INVOICE_DATE,T.PLATFORM_TYPE,
			  T.PAYMENT_TYPE,T.STATUS,T.REALITY_DATE,T.REALITY_BANK_NAME,T.CREATE_ID,T.CREATE_DATE,T.MONDFY_ID,T.MONDFY_DATE,T.REMARK,
			  T.LEASE_TOPRIC,T.SQ_PRICE,T.GUARANTEE_NUM,T.GUARANTEE_DATE,T.ACCEPTANCE_DATE,T.PAY_BANK_ADDRESS,T.PAY_BANK_NAME,T.DELIVERY_DATE,
			  T.DELIVERY_ADDR,T.TEMP_CLD,T.CS_PRICE,T.DEDUCTION_MONEY,T.DEDUCTION_RATE,T.LAST_MONEY,T.PAYLIST_CODE,T.BUY_CONTRACT_ID,T.DEKOU_SQ,T.IS_PAY_WHY
		FROM  FI_FUND_PAYMENT_DETAIL T 
		  WHERE T.PAYLIST_CODE = #{PAYLIST_CODE} 	
	</select>
	<!-- 通过主键ID查询买卖合同及支付表信息 -->
	<select id="getBuyContractAndFilRentPlanHeadById" parameterType="Long" resultType="Map">
		SELECT  T1.ID,
			  T1.LEASE_ORDER_CODE,
			  T1.LEASE_CODE,
			  T1.LESSOR_NAME,
			  T1.LESSEE_NAME,
			  T1.PAYLIST_CODE,
			  T1.SIGN_ADDR,
			  T1.IDENTIFY_DATE,
			  TO_CHAR(T1.SIGN_DATE,'YYYY-MM-DD') SIGN_DATE,
			  T1.MESSAGE_CODE,
			  T1.CONTRACT_ID,
			  T1.PRODUCT_CODE,
			  T1.TOTAL,
			  T1.UTOTAL,
			  T1.BANK_LOAN_CONTRACT,
			  T1.NON_BANK_LOAN_CONTRACT,
			  T1.DOWN_PAYMENT,
			  T1.DATE_TO_PULL,
			  T1.DESCRIPTION_OF_GOODS,
			  T1.OTHER,
			  T1.OTHER_REMARK,
			  T1.CONFIGURATION_NOTE_TOWE_CRA,
			  T1.TOWER_CRAN_REMA,
			  T1.CONCRETE_FABRIC_MACH_REM,
			  T1.REMARKS_BANK_LOAN,
			  T1.INSPECTION,
			  T1.SELLER_COMMITMENT_UNLO_CHA,
			  T1.RECEIVING_UNIT,
			  T1.CARGO_COME_ADDR,
			  T1.CONTACT,
			  T1.CONTACT_PHONE,
			  T1.CONTACT_MOBILE,
			  T1.BANK_LOAN,
			  TO_CHAR(T1.FIRST_PAYMENT) FIRST_PAYMENT,
			  T1.FIRST_PAYMENT_DATE,
			  TO_CHAR(T1.THE_BALANCE) THE_BALANCE,
			  T1.BANK_MORTGAGE_LOAN_MON,
			  T1.NON_BANK_LOAN,
			  T1.PAYMENT_TOWER_CRAN,
			  TO_CHAR(T1.FIRST_PAYMENT2) FIRST_PAYMENT2,
			  T1.DAYS,
			  TO_CHAR(T1.PAY_MONEY) PAY_MONEY,
			  T1.DAYS2,
			  T1.MI,
			  TO_CHAR(T1.PAY_MONEY2) PAY_MONEY2,
			  T1.DAYS3,
			  T1.DAYS4,
			  T1.OTHER_PAYMENT_AGRE,
			  T1.OTHER_PAYMENT_AGRE_TOW,
			  T1.SECURITY_WAY,
			  T1.SALES_INVOICES_WAY,
			  T1.SALES_TAX,
			  T1.TWO_INVOICES_PROV_MAN,
			  T1.SELLER_UNIT_NAME,
			  T1.SELLER_UNIT_ADDR,
			  T1.SELLER_LEGAL_REPR,
			  T1.SELLER_AGENT,
			  T1.SELLER_PHONE,
			  T1.SELLER_FAX,
			  T1.SELLER_BANK_ACCO,
			  T1.SELLER_ACCOUNT,
			  T1.SELLER_CODE,
			  T1.BUYER_UNIT_NAME,
			  T1.BUYER_UNIT_ADDR,
			  T1.BUYER_LEGAL_REPR,
			  T1.BUYER_AGENT,
			  T1.BUYER_PHONE,
			  T1.BUYER_FAX,
			  T1.BUYER_BANK_ACCO,
			  T1.BUYER_ACCOUNT,
			  T1.BUYER_UNIT_TAX,
			  T1.BUYER_CODE,
			  T1.BUYER_ID,
			  T1.BUYER_HOME_ADDR,
			  T1.GUARANTOR_SIGNED,
			  T1.GUARANTOR_SIGNED_SEAL,
			  TO_CHAR(T1.GUARANTOR_SIGNED_SEAL_DAT,'YYYY-MM-DD') GUARANTOR_SIGNED_SEAL_DAT,
			  T1.FORENSIC_AUTHORITIES_SEAL,
			  TO_CHAR(T1.FORENSIC_AUTHORITIES_SEAL_DAT,'YYYY-MM-DD') FORENSIC_AUTHORITIES_SEAL_DAT,
			  T1.CREATE_TIME,
			  T1.TYPE,
			  T1.REMARK,
			  T1.MODIFY_DATE,
			  T1.SUBCOMPANY ,
		      T2.LEASE_TOPRIC ,
		      T1.SELLER_PAY_BANK_ADDRESS
		  FROM FIL_BUY_CONTRACT T1 , FIL_RENT_PLAN_HEAD_BAS_MAX__V T2 WHERE T1.PAY_ID = T2.ID AND T2.PAYLIST_CODE=#{PAYLIST_CODE} 
	</select>
	<select id="getRepayment" parameterType="Map" resultType="Map">
		SELECT SUM(F.BEGINNING_MONEY) BEGINNING_MONEY,
		       SUM(F.BEGINNING_PAID) BEGINNING_PAID,
		       TO_CHAR(T.D_REALITY_DATE,'YYYY-MM-DD') D_REALITY_DATE,
		       TO_CHAR(F.BEGINNING_RECEIVE_DATA,'YYYY-MM-DD') BEGINNING_RECEIVE_DATA,
		       F.BEGINNING_NUM BEGINNING_NUM
		  FROM FI_FUND_HEAD H, FI_FUND_DETAIL T, FI_R_BEGINNING F
		 WHERE F.BEGINNING_ID = T.D_BEGING_ID
		   AND T.D_FUND_ID = H.ID
		   AND F.BEGINNING_NUM IS NOT NULL
		   AND F.PAYLIST_CODE = #{PAYLIST_CODE}
		 GROUP BY BEGINNING_NUM, F.BEGINNING_RECEIVE_DATA, T.D_REALITY_DATE
		 ORDER BY BEGINNING_NUM ASC
	</select>
	
	<select id="queryDunListByPayListCode" parameterType="Map" resultType="Map">
		select t.*,fo.ID,round(NVL(fo.PENALTY_RECE,0)-NVL(fo.PENALTY_PAID,0),2) PENALTY_RECE,
			case when fo.ID is not null then to_date(#{PAY_DATE},'yyyy-MM-dd')-trunc(sysdate) else to_date(#{PAY_DATE},'yyyy-MM-dd')-trunc(t.beginning_receive_data) end dun_day
			from (
			    select frb.Paylist_Code,frb.beginning_num,round(sum(NVL(frb.beginning_money,0)-NVL(frb.beginning_paid,0)),2) beginning_money
			    ,frb.beginning_receive_data 
			    from fi_r_beginning frb 
			    where frb.beginning_receive_data &lt; to_date(#{PAY_DATE},'yyyy-MM-dd')
			     and frb.paylist_code=#{PAYLIST_CODE} and frb.beginning_num is not null and frb.ITEM_FLAG=2
			     
			     group by Paylist_Code,beginning_num,frb.beginning_receive_data
			 ) t
			 left join fi_overdue fo on fo.pay_code=t.PAYLIST_CODE and fo.period=t.beginning_num and trunc(fo.create_date)=trunc(sysdate)
			 where t.paylist_code=#{PAYLIST_CODE}
			 order by t.beginning_num
	</select>
	<insert id="saveTaskManData" parameterType="map">
		INSERT INTO T_SYS_TASK_CLAIM (
	       ID,TYPE,CREATE_TIME,STATE,TASK_NAME,DATA_ID,NAME,PROJECT_ID,URL
	       )VALUES(
	       #{CLAIM_ID},
	       2,
	       SYSDATE,
	       0,
	       #{TASK_NAME},
	       #{DATA_ID},
	       #{DATA_NAME},
	       #{PROJECT_ID},
	       #{URL}
		)
	</insert>
	<update id="updateLogId">
		UPDATE FIL_DUN_LOG SET CLAIM_ID = #{CLAIM_ID} WHERE ID = #{FIL_DUN_LOG_ID}
	</update>
	<insert id="saveUrgePhone" parameterType="map">
		INSERT INTO RE_OVERDUE_COLL_PHONE (
			CREATE_TIME,TYPE
			<if test="DATA_ID != null and DATA_ID != ''">,ID</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,PAY_CODE</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">,CLIENT_NAME</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, CLIENT_ID</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, CALL_TEL</if>
			<if test="PAY_ID != null and PAY_ID != ''">, PAY_ID</if>
			<if test="PLAQUE != null and PLAQUE != ''">, PLAQUE</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,CAR_CATENA</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,CAR_TYPE</if>

			)VALUES(
			SYSDATE,1
			<if test="DATA_ID != null and DATA_ID != ''">,#{DATA_ID}</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,#{PAY_CODE}</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">, #{CLIENT_NAME}</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, #{CLIENT_ID}</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, #{CALL_TEL}</if>
			<if test="PAY_ID != null and PAY_ID != ''">, #{PAY_ID}</if>
			<if test="PLAQUE != null and PLAQUE != ''">, #{PLAQUE}</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,#{CAR_CATENA}</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,#{CAR_TYPE}</if>
		)
	</insert>
	<insert id="saveUrgeLetter" parameterType="map">
		INSERT INTO RE_OVERDUE_COLL_LETTER (
			CREATE_TIME,TYPE
			<if test="DATA_ID != null and DATA_ID != ''">,ID</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,PAY_CODE</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">,CLIENT_NAME</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, CLIENT_ID</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, CALL_TEL</if>
			<if test="PAY_ID != null and PAY_ID != ''">, PAY_ID</if>
			<if test="PLAQUE != null and PLAQUE != ''">, PLAQUE</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,CAR_CATENA</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,CAR_TYPE</if>
			)VALUES(
			SYSDATE,2
			<if test="DATA_ID != null and DATA_ID != ''">,#{DATA_ID}</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,#{PAY_CODE}</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">, #{CLIENT_NAME}</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, #{CLIENT_ID}</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, #{CALL_TEL}</if>
			<if test="PAY_ID != null and PAY_ID != ''">, #{PAY_ID}</if>
			<if test="PLAQUE != null and PLAQUE != ''">, #{PLAQUE}</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,#{CAR_CATENA}</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,#{CAR_TYPE}</if>
		)
	</insert>
	<insert id="saveUrgeLawyer" parameterType="map">
		INSERT INTO RE_OVERDUE_COLL_LAWYER (
			CREATE_TIME,TYPE
			<if test="DATA_ID != null and DATA_ID != ''">,ID</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,PAY_CODE</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">,CLIENT_NAME</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, CLIENT_ID</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, CALL_TEL</if>
			<if test="PLAQUE != null and PLAQUE != ''">, PLAQUE</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,CAR_CATENA</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,CAR_TYPE</if>
			<if test="PAY_ID != null and PAY_ID != ''">, PAY_ID</if>

			)VALUES(
			SYSDATE,3
			<if test="DATA_ID != null and DATA_ID != ''">,#{DATA_ID}</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,#{PAY_CODE}</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">, #{CLIENT_NAME}</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, #{CLIENT_ID}</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, #{CALL_TEL}</if>
			<if test="PLAQUE != null and PLAQUE != ''">, #{PLAQUE}</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,#{CAR_CATENA}</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,#{CAR_TYPE}</if>
			<if test="PAY_ID != null and PAY_ID != ''">, #{PAY_ID}</if>
		)
	</insert>
	<insert id="saveUrgeForce" parameterType="map">
		INSERT INTO RE_OVERDUE_COLL_FORCE (
			CREATE_TIME,TYPE
			<if test="DATA_ID != null and DATA_ID != ''">,ID</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,PAY_CODE</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">,CLIENT_NAME</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, CLIENT_ID</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, CALL_TEL</if>
			<if test="PLAQUE != null and PLAQUE != ''">, PLAQUE</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">,CAR_CATENA</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">,CAR_TYPE</if>
			<if test="PAY_ID != null and PAY_ID != ''">, PAY_ID</if>

			)VALUES(
			SYSDATE,4
			<if test="DATA_ID != null and DATA_ID != ''">,#{DATA_ID}</if>
			<if test="PAY_CODE != null and PAY_CODE != ''">,#{PAY_CODE}</if>
			<if test="CLIENT_NAME != null and CLIENT_NAME != ''">,#{CLIENT_NAME}</if>
			<if test="CLIENT_ID != null and CLIENT_ID != ''">, #{CLIENT_ID}</if>
			<if test="CALL_TEL != null and CALL_TEL != ''">, #{CALL_TEL}</if>
			<if test="PLAQUE != null and PLAQUE != ''">, #{PLAQUE}</if>
			<if test="CAR_CATENA != null and CAR_CATENA != ''">, #{CAR_CATENA}</if>
			<if test="CAR_TYPE != null and CAR_TYPE != ''">, #{CAR_TYPE}</if>
			<if test="PAY_ID != null and PAY_ID != ''">, #{PAY_ID}</if>
		)
	</insert>
	<select id="getUrgeData" parameterType="map" resultType="map">
		SELECT *
		  FROM (SELECT MAX(T.ID),
		  				 MAX(FPH.ID) PROJECT_ID,
		  				 MAX(T.PAYLIST_CODE) PAYLIST_CODE,
		               MAX(FCC.ID) CLIENT_ID,
		               MAX(FCC.NAME) CLIENT_NAME,
		               MAX(FCC.TEL_PHONE) CALL_TEL,
		               WM_CONCAT(FPE.PRODUCT_NAME) PLAQUE,
		               WM_CONCAT(FPE.CATENA_NAME) CAR_CATENA,
		               WM_CONCAT(FPE.SPEC_NAME) CAR_TYPE
		          FROM FIL_RENT_PLAN_HEAD T
		          LEFT JOIN FIL_PROJECT_HEAD FPH
		            ON FPH.ID = T.PROJECT_ID
		          LEFT JOIN FIL_CUST_CLIENT FCC
		            ON FCC.ID = FPH.CLIENT_ID
		          LEFT JOIN FIL_PROJECT_EQUIPMENT FPE
		            ON FPE.PROJECT_ID = FPH.ID
		         WHERE T.ID = #{PAY_ID}
		         GROUP BY T.ID
		         ORDER BY T.ID DESC)
		 WHERE ROWNUM = 1
	</select>
	<insert id="saveUrgeLog" parameterType="map" >
		INSERT INTO FIL_URGE_LOG(
		       ID,PAY_ID,CLAIM_ID,CREATE_DATE,TYPE,DATA_ID
		)VALUES(
       SEQ_FIL_URGE_LOG.NEXTVAL,#{PAY_ID},#{CLAIM_ID},SYSDATE,#{TYPE},#{DATA_ID}
)
	</insert>
	
	<select id="queryZujinByData" parameterType="map" resultType="map">
		 select round(sum(NVL(frb.beginning_money,0)-NVL(frb.beginning_paid,0)),2) beginning_money
			    from fi_r_beginning frb 
			    where frb.beginning_receive_data &lt;= to_date(#{PAY_DATE},'yyyy-MM-dd')
			     and frb.paylist_code=#{PAYLIST_CODE} and frb.ITEM_FLAG=2
	</select>
	
	<select id="queryDunDayByData" parameterType="map" resultType="map">
		 select max(fo.penalty_day) penalty_day
           from fi_overdue fo 
           where  trunc(fo.create_date)=trunc(sysdate) and fo.pay_code=#{PAYLIST_CODE}
	</select>
	
	<select id="queryDayWL" parameterType="map" resultType="map">
		select (to_date(#{PAY_DATE},'yyyy-MM-dd') - trunc(sysdate)) dun_day_wl from dual
	</select>
</mapper>