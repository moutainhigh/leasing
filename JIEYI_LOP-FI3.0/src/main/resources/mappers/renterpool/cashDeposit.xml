<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cashDeposit">
<select id="toMgCashDeposit" parameterType="Map" resultType="Map">
SELECT T1.*
  FROM (SELECT T.*, ROWNUM ROWNU
          FROM (SELECT P.PROJECT_ID,
                       CU.NAME CUST_NAME,
                       CU.CUST_ID,
                       CU.ID CLIENT_ID,
                       CU.ID CL_ID,
                       H.CLERK_NAME,
                       H.PRO_NAME,
                       H.PRO_CODE,
                       H.LEASE_CODE,
                       H.STATUS PROJECT_STATUS,
                       H.DELIVER_DATE,
                       P.BASE_MONEY,
                       P.CANUSE_MONEY,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                         AND SD.TYPE = #{ZJC_STATUS}) STATUS,
                       TO_CHAR(P.THAW_TIME, 'YYYY-MM-DD') THAW_TIME,
                       TO_CHAR(P.PAY_TIME, 'YYYY-MM-DD') PAY_TIME,
                       P.TYPE,
                       P.POOL_ID
                  FROM FI_DEPOSIT_POOL  P,
                       FIL_PROJECT_HEAD H,
                       FIL_CUST_CLIENT  CU
                 WHERE P.PROJECT_ID = H.ID
                   AND H.CLIENT_ID = CU.ID
                   AND P.TYPE = 4
                   <if test="CUST_NAME!=null and CUST_NAME!=''">AND CU.NAME LIKE '%'||#{CUST_NAME}||'%'</if>
                   <if test="STATUS!=null and STATUS!=''">AND P.STATUS LIKE '%'||#{STATUS}||'%'</if>
                   <if test="PRO_CODE!=null and PRO_CODE!=''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="CANUSE_MONEY!=null and CANUSE_MONEY!=''">AND P.CANUSE_MONEY LIKE '%'||#{CANUSE_MONEY}||'%'</if>
                   <if test="LEASE_CODE!=null and LEASE_CODE!=''">AND H.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
                   <if test="BASE_MONEY!=null and BASE_MONEY!=''">AND P.BASE_MONEY LIKE '%'||#{BASE_MONEY}||'%'</if>
                 ORDER BY P.THAW_TIME) T WHERE ROWNUM &lt;= #{PAGE_END}) T1
 WHERE T1.ROWNU >= #{PAGE_BEGIN}
</select>

<select id="toMgCashDepositNu" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM(SELECT P.PROJECT_ID,
                       CU.NAME CUST_NAME,
                       CU.CUST_ID,
                       CU.ID CLIENT_ID,
                       CU.ID CL_ID,
                       H.CLERK_NAME,
                       H.PRO_NAME,
                       H.PRO_CODE,
                       H.STATUS PROJECT_STATUS,
                       H.DELIVER_DATE,
                       P.BASE_MONEY,
                       P.CANUSE_MONEY,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                         AND SD.TYPE = #{ZJC_STATUS}) STATUS,
                       TO_CHAR(P.THAW_TIME, 'YYYY-MM-DD') THAW_TIME,
                       TO_CHAR(P.PAY_TIME, 'YYYY-MM-DD') PAY_TIME,
                       P.TYPE,
                       P.POOL_ID
                  FROM FI_DEPOSIT_POOL  P,
                       FIL_PROJECT_HEAD H,
                       FIL_CUST_CLIENT  CU
                 WHERE P.PROJECT_ID = H.ID
                   AND H.CLIENT_ID = CU.ID
                   AND P.TYPE = 4
                   AND P.STATUS != 2
                   <if test="CUST_NAME!=null and CUST_NAME!=''">AND CU.NAME LIKE '%'||#{CUST_NAME}||'%'</if>
                   <if test="STATUS!=null and STATUS!=''">AND P.STATUS LIKE '%'||#{STATUS}||'%'</if>
                   <if test="PRO_CODE!=null and PRO_CODE!=''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="CANUSE_MONEY!=null and CANUSE_MONEY!=''">AND P.CANUSE_MONEY LIKE '%'||#{CANUSE_MONEY}||'%'</if>
                   <if test="LEASE_CODE!=null and LEASE_CODE!=''">AND H.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
                   <if test="BASE_MONEY!=null and BASE_MONEY!=''">AND P.BASE_MONEY LIKE '%'||#{BASE_MONEY}||'%'</if>
                 ORDER BY P.THAW_TIME)T
</select>


<select id="toMgCashDepositNew" parameterType="Map" resultType="Map">
SELECT T1.*
  FROM (SELECT T.*, ROWNUM ROWNU
          FROM (
          		select F.* from (
          		SELECT P.PROJECT_ID,
                       CU.NAME CUST_NAME,
                       CU.CUST_ID,
                       CU.ID CLIENT_ID,
                       CU.ID CL_ID,
                       CU.TYPE CUST_TYP,
                       H.CLERK_NAME,
                       H.PRO_NAME,
                       H.PRO_CODE,
                       H.LEASE_CODE,
                       H.STATUS PROJECT_STATUS,
                       H.DELIVER_DATE,
                       ROUND(NVL(P.BASE_MONEY,0),2) BASE_MONEY,
                       ROUND(NVL(P.CANUSE_MONEY,0),2) CANUSE_MONEY,
                       P.STATUS,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                         AND SD.TYPE = #{ZJC_STATUS}) STATUSFLAG,
                       TO_CHAR(P.THAW_TIME, 'YYYY-MM-DD') THAW_TIME,
                       TO_CHAR(P.PAY_TIME, 'YYYY-MM-DD') PAY_TIME,
                       P.TYPE,
                       P.POOL_ID,
                       P.PAYLIST_CODE,
                       P.POUNDAGE_WAY,
                       P.REMIND_FLAG,
                       FRP.ID PAY_ID,
                       FRP.STATUS PAY_STATUS,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = FRP.STATUS
                         AND SD.TYPE = #{PAY_STATUS}) PAY_STATUSFLAG,
                         VPS.SUP_ID,VPS.SUP_NAME,
                        CASE WHEN P.CANUSE_MONEY>0 then 1 ELSE 0 END PAGETYPE 
                  FROM FI_DEPOSIT_POOL  P,
                       fil_rent_plan_head_max_v FRP,
                       v_plan_scheme VPS,
                       FIL_PROJECT_HEAD H,
                       FIL_CUST_CLIENT  CU
                 WHERE P.PROJECT_ID = H.ID
                   AND P.PAYLIST_CODE = FRP.PAYLIST_CODE
                   AND P.PROJECT_ID=FRP.PROJECT_ID
                   AND H.CLIENT_ID = CU.ID
                   AND FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
                   AND P.TYPE = 4
                   <if test="CUST_NAME!=null and CUST_NAME!=''">AND CU.NAME LIKE '%'||#{CUST_NAME}||'%'</if>
                   <if test="STATUS!=null and STATUS!=''">AND P.STATUS =#{STATUS}</if>
                   <if test="PRO_CODE!=null and PRO_CODE!=''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="CANUSE_MONEY!=null and CANUSE_MONEY!=''">AND P.CANUSE_MONEY LIKE '%'||#{CANUSE_MONEY}||'%'</if>
                   <if test="LEASE_CODE!=null and LEASE_CODE!=''">AND H.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
                   <if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND P.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
                   <if test="POUNDAGE_WAY !=null and POUNDAGE_WAY !=''">AND P.POUNDAGE_WAY =#{POUNDAGE_WAY}</if>
                   <if test="BASE_MONEY!=null and BASE_MONEY!=''">AND P.BASE_MONEY LIKE '%'||#{BASE_MONEY}||'%'</if>
                 ) F
                 ORDER BY F.PAGETYPE desc,F.REMIND_FLAG desc,F.PAYLIST_CODE,F.THAW_TIME) T WHERE ROWNUM &lt;= #{PAGE_END}) T1
 WHERE T1.ROWNU >= #{PAGE_BEGIN}
</select>

<select id="toMgCashDepositNuNew" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM(SELECT P.PROJECT_ID,
                       CU.NAME CUST_NAME,
                       CU.CUST_ID,
                       CU.ID CLIENT_ID,
                       CU.ID CL_ID,
                       CU.TYPE CUST_TYP,
                       H.CLERK_NAME,
                       H.PRO_NAME,
                       H.PRO_CODE,
                       H.STATUS PROJECT_STATUS,
                       H.DELIVER_DATE,
                       ROUND(NVL(P.BASE_MONEY,0),2) BASE_MONEY,
                       ROUND(NVL(P.CANUSE_MONEY,0),2) CANUSE_MONEY,
                       P.STATUS,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                         AND SD.TYPE = #{ZJC_STATUS}) STATUSFLAG,
                       TO_CHAR(P.THAW_TIME, 'YYYY-MM-DD') THAW_TIME,
                       TO_CHAR(P.PAY_TIME, 'YYYY-MM-DD') PAY_TIME,
                       P.TYPE,
                       P.POOL_ID,
                       P.PAYLIST_CODE,
                       P.POUNDAGE_WAY,
                       P.REMIND_FLAG,
                       FRP.ID PAY_ID
                  FROM FI_DEPOSIT_POOL  P,
                       fil_rent_plan_head_max_v FRP,
                       FIL_PROJECT_HEAD H,
                       FIL_CUST_CLIENT  CU
                 WHERE P.PROJECT_ID = H.ID
                   AND P.PAYLIST_CODE = FRP.PAYLIST_CODE
                   AND P.PROJECT_ID=FRP.PROJECT_ID
                   AND H.CLIENT_ID = CU.ID
                   AND P.TYPE = 4
                   <if test="CUST_NAME!=null and CUST_NAME!=''">AND CU.NAME LIKE '%'||#{CUST_NAME}||'%'</if>
                   <if test="STATUS!=null and STATUS!=''">AND P.STATUS LIKE '%'||#{STATUS}||'%'</if>
                   <if test="PRO_CODE!=null and PRO_CODE!=''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="CANUSE_MONEY!=null and CANUSE_MONEY!=''">AND P.CANUSE_MONEY LIKE '%'||#{CANUSE_MONEY}||'%'</if>
                   <if test="LEASE_CODE!=null and LEASE_CODE!=''">AND H.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
                   <if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND P.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
                   <if test="POUNDAGE_WAY !=null and POUNDAGE_WAY !=''">AND P.POUNDAGE_WAY =#{POUNDAGE_WAY}</if>
                   <if test="BASE_MONEY!=null and BASE_MONEY!=''">AND P.BASE_MONEY LIKE '%'||#{BASE_MONEY}||'%'</if>
                 ORDER BY P.REMIND_FLAG,P.PAYLIST_CODE,P.THAW_TIME)T
</select>

<select id="getPoolData_1" parameterType="Map" resultType="Map">
	SELECT * FROM FI_DEPOSIT_POOL P WHERE P.PROJECT_ID = #{PRO_ID} AND TYPE=4
</select>

<select id="getFundDetail" parameterType="Map" resultType="Map">
	SELECT * FROM FI_FUND_DETAIL DE WHERE DE.D_FUND_ID = #{SOURCE_ID} AND 
</select>

<select id="getPaylist" parameterType="Map" resultType="String">	
	SELECT MV.PAYLIST_CODE FROM FIL_RENT_PLAN_HEAD_MAX_V MV WHERE MV.PROJECT_ID=#{PRO_ID} 
</select>

<select id="toMgCDChargeAgainst" parameterType="Map" resultType="Map">
SELECT *
  FROM (SELECT T.*, ROWNUM ROWNO
          FROM (SELECT P.POOL_ID,
                       PH.PRO_NAME,
                       PH.PRO_CODE,
                       PH.ID PRO_ID,
                       PH.SUP_ID,
                       PH.SUP_SHORTNAME,
                       PH.COMPANY_NAME,
                       NVL(ROUND(P.BASE_MONEY,2),0) BASE_MONEY,
                       NVL(ROUND(NVL(P.BASE_MONEY,0)-NVL(P.CANUSE_MONEY,0),2),0) CDJE,
                       NVL(ROUND(P.CANUSE_MONEY,2),0) CANUSE_MONEY,
                       P.SOURCE_ID,
                       TO_CHAR(P.PAY_TIME,'yyyy-MM-dd')PAY_TIME,
                       CL.ID CUST_ID,
                       CL.NAME CUST_NAME,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                           AND SD.TYPE = #{ZJ_STATUS}) STATUS
                  FROM FI_DEPOSIT_POOL P
                  LEFT JOIN FI_FUND_HEAD H ON P.SOURCE_ID = H.ID
                  LEFT JOIN FIL_PROJECT_HEAD PH ON P.PROJECT_ID = PH.ID
                  LEFT JOIN FIL_CUST_CLIENT CL ON CL.ID = PH.CLIENT_ID
                   WHERE P.TYPE = 4
                   <if test="PRO_CODE!=null and PRO_CODE!=''">and H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="PRO_NAME!=null and PRO_NAME!=''">and H.PRO_NAME LIKE '%'|| #{PRO_NAME}||'%'</if>
                   <if test="SUP_NAME!=null and SUP_NAME!=''">and SU.SUP_NAME LIKE '%'|| #{SUP_NAME}||'%'</if>                  
                ) T WHERE ROWNUM &lt;= #{PAGE_END}) TT
 WHERE TT.ROWNO >= #{PAGE_BEGIN}
</select>

<select id="toMgCDChargeAgainstNu" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM(SELECT P.POOL_ID,
                       PH.PRO_NAME,
                       PH.PRO_CODE,
                       PH.ID PRO_ID,
                       PH.SUP_ID,
                       PH.SUP_SHORTNAME,
                       PH.COMPANY_NAME,
                       NVL(ROUND(P.BASE_MONEY,2),0) BASE_MONEY,
                       NVL(ROUND(NVL(P.BASE_MONEY,0)-NVL(P.CANUSE_MONEY,0),2),0) CDJE,
                       NVL(ROUND(P.CANUSE_MONEY,2),0) CANUSE_MONEY,
                       P.SOURCE_ID,
                       TO_CHAR(P.PAY_TIME,'yyyy-MM-dd')PAY_TIME,
                       CL.ID CUST_ID,
                       CL.NAME CUST_NAME,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                           AND SD.TYPE = #{ZJ_STATUS}) STATUS
                  FROM FI_DEPOSIT_POOL P
                  LEFT JOIN FI_FUND_HEAD H ON P.SOURCE_ID = H.ID
                  LEFT JOIN FIL_PROJECT_HEAD PH ON P.PROJECT_ID = PH.ID
                  LEFT JOIN FIL_CUST_CLIENT CL ON CL.ID = PH.CLIENT_ID
                   WHERE P.TYPE = 4
                   <if test="PRO_CODE!=null and PRO_CODE!=''">and H.PRO_CODE LIKE '%'|| #{PRO_CODE}||'%'</if>
                   <if test="PRO_NAME!=null and PRO_NAME!=''">and H.PRO_NAME LIKE '%'|| #{PRO_NAME}||'%'</if>
                   <if test="SUP_NAME!=null and SUP_NAME!=''">and SU.SUP_NAME LIKE '%'|| #{SUP_NAME}||'%'</if>)T
</select>

<select id="getCDDetainlByFundId" parameterType="Map" resultType="Map">
SELECT H.ID FUND_ID, --付款单号
       TO_CHAR(H.FI_ACCOUNT_DATE, 'YYYY-MM-DD') FI_ACCOUNT_DATE, --付款时间
       PH.PRO_CODE, --项目编号
       PH.PRO_NAME, --项目名称
       PH.SUP_SHORTNAME, --供应商
       PH.LEASE_TERM, --租赁期次
       CL.NAME CUST_NAME, --客户名称
       TO_CHAR(DE.D_RECEIVE_DATE, 'YYYY-MM-DD') D_RECEIVE_DATE, --计划日期
       NVL(ROUND(A.FA_CAN_USE_MONEY), 0) FA_CAN_USE_MONEY, --保证金
       P.CANUSE_MONEY, --剩余保证金
       PH.PRODUCT_NAME, --租赁物类型
       ROUND(NVL(P.BASE_MONEY, 0) - NVL(P.CANUSE_MONEY, 0)) ZYBZJ, --剩余保证金
       ROUND(NVL(T1.BJ_MONEY, 0), 2) BJ_MONEY, --本金
       ROUND(NVL(T1.LX_MONEY, 0), 2) LX_MONEY, --利息
       ROUND(NVL(T1.BJ_MONEY, 0) + NVL(T1.LX_MONEY, 0), 2) ZJ_MONEY, --租金
       ROUND(NVL(T1.BJ_MONEY, 0) + NVL(T1.LX_MONEY, 0) -
             NVL(T1.SHSHBJ_MONEY, 0) - NVL(T1.SHSHLX_MONEY, 0),
             2) XJZJ_MONEY, --需交租金
      ROUND(NVL(T2.WS_YQ,0),2) WS_YQ, --逾期金额
      P.SOURCE_ID
  FROM FI_DEPOSIT_POOL P
  LEFT JOIN FI_FUND_ACCOUNT A ON P.POOL_ID = A.FA_POOL_ID
  LEFT JOIN FI_FUND_DETAIL DE ON DE.ID = A.FA_DETAIL_ID
  LEFT JOIN (SELECT SUM(DECODE(FRB.BEGINNING_NAME,
                               #{BJ_MONEY},
                               FRB.BEGINNING_MONEY)) BJ_MONEY,
                    SUM(DECODE(FRB.BEGINNING_NAME,
                               #{LX_MONEY},
                               FRB.BEGINNING_MONEY)) LX_MONEY,
                    SUM(DECODE(FRB.BEGINNING_NAME,
                               #{BJ_MONEY},
                               FRB.BEGINNING_PAID)) SHSHBJ_MONEY,
                    SUM(DECODE(FRB.BEGINNING_NAME,
                               #{LX_MONEY},
                               FRB.BEGINNING_PAID)) SHSHLX_MONEY,
                    FRB.BEGINNING_RECEIVE_DATA,
                    FRB.PAYLIST_CODE
               FROM FI_R_BEGINNING FRB
              WHERE FRB.ITEM_FLAG = 2
                AND FRB.BEGINNING_STATUS = 0
              GROUP BY FRB.BEGINNING_RECEIVE_DATA, FRB.PAYLIST_CODE
              ORDER BY FRB.BEGINNING_RECEIVE_DATA DESC) T1 ON DE.D_PAY_CODE =
                                                              T1.PAYLIST_CODE
  LEFT JOIN (SELECT ROUND(MAX(OV.PENALTY_RECE), 2) -
                    ROUND(MAX(OV.PENALTY_PAID), 2) WS_YQ,
                    MAX(OV.CREATE_DATE) CREATE_DATE,
                    OV.PAY_CODE,
                    OV.PERIOD
               FROM FI_OVERDUE OV
              GROUP BY OV.PERIOD, OV.PAY_CODE
              ORDER BY OV.PAY_CODE DESC, OV.PERIOD DESC) T2 ON T2.PAY_CODE =
                                                               DE.D_PAY_CODE
  LEFT JOIN FI_FUND_HEAD H ON H.ID = A.FA_FUND_ID
  LEFT JOIN FIL_PROJECT_HEAD PH ON PH.ID = P.PROJECT_ID
  LEFT JOIN FIL_CUST_CLIENT CL ON CL.ID = PH.CLIENT_ID
 WHERE P.TYPE = 4
 <if test="SOURCE_ID!=null and SOURCE_ID!=''">AND P.SOURCE_ID =#{SOURCE_ID}</if>
 <if test="SUP_SHORTNAME!=null and SUP_SHORTNAME!=''">and PH.SUP_SHORTNAME = #{SUP_SHORTNAME}</if>
 <if test="CUST_NAME!=null and CUST_NAME!=''">and CL.NAME = #{CUST_NAME}</if>
 <if test="PRO_NAME!=null and PRO_NAME!=''">and PH.PRO_NAME = #{PRO_NAME}</if>
 <if test="PRO_CODE!=null and PRO_CODE!=''">and PH.PRO_CODE = #{PRO_CODE}</if>
</select>

<select id="toMgCDRefund" parameterType="Map" resultType="Map">
SELECT * FROM (
  SELECT T.*,ROWNUM ROWNO FROM (
     SELECT HE.RE_ID,
            HE.RE_CODE,
            TO_CHAR(HE.RE_DATE,'YYYY-MM-DD') RE_DATE,
            HE.RE_MONEY,
            HE.RE_PROJECT_COUNT,
            HE.RE_TYPE,
            HE.RE_APPLY_NAME,
            TO_CHAR(HE.RE_APPLY_TIME,'YYYY-MM-DD') RE_APPLY_TIME,
            HE.RE_CHECKED_NAME,
            TO_CHAR(HE.RE_CHECKED_TIME,'YYYY-MM-DD') RE_CHECKED_TIME,
            HE.RE_PAYEE_TYPE,
            HE.CUST_ID,
            HE.RE_PAYEE_NAME,
            HE.RE_PAYEE_UNIT,
            HE.RE_PAYEE_ADDRESS,
            HE.RE_PAYEE_BANK,
            HE.RE_PAYEE_ACCOUNT,
            HE.RE_PAYEE_BANK_ADDR,
            TO_CHAR(HE.RE_REAL_TIME, 'YYYY-MM-DD') RE_REAL_TIME,
            HE.RE_STATUS,
            (SELECT DIC.FLAG
                FROM T_SYS_DATA_DICTIONARY DIC
                WHERE DIC.CODE = HE.RE_STATUS
                AND DIC.TYPE = #{TK_STATUS}) STATUS,
           TO_CHAR(HE.CREATE_TIME, 'YYYY-MM-DD') CREATE_TIME,
           S.SUP_NAME,
           S.SUP_ID,
            P.POOL_ID
         FROM FI_REFUND_HEAD HE, FI_DEPOSIT_POOL P, FIL_PROJECT_HEAD H, T_SYS_SUPPLIERS S
         WHERE HE.RE_ID = P.RE_ID(+)
           AND P.PROJECT_ID = H.ID(+)
           AND H.SUP_ID = S.SUP_ID(+)
           AND HE.RE_TYPE = 2
         <if test="RE_STATUS!=null and RE_STATUS!=''">and HE.RE_STATUS = #{RE_STATUS}</if>
         <if test="RE_PAYEE_UNIT!=null and RE_PAYEE_UNIT!=''">and HE.RE_PAYEE_UNIT LIKE '%'|| #{RE_PAYEE_UNIT}||'%'</if>
         <if test="RE_DATE!=null and RE_DATE!=''">and TO_DATE(TO_CHAR(HE.RE_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') = TO_DATE(#{RE_DATE},'yyyy-MM-dd')</if>
         <if test="SUP_SHORTNAME!=null and SUP_SHORTNAME!=''">and S.SUP_SHORTNAME LIKE '%'|| #{SUP_SHORTNAME}||'%'</if>       
  )T WHERE ROWNUM &lt;= #{PAGE_END})TT WHERE TT.ROWNO >= #{PAGE_BEGIN} 
</select>

<select id="toMgCDRefundNu" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM(SELECT HE.RE_ID,
            HE.RE_CODE,
            TO_CHAR(HE.RE_DATE,'YYYY-MM-DD') RE_DATE,
            HE.RE_MONEY,
            HE.RE_PROJECT_COUNT,
            HE.RE_TYPE,
            HE.RE_APPLY_NAME,
            TO_CHAR(HE.RE_APPLY_TIME,'YYYY-MM-DD') RE_APPLY_TIME,
            HE.RE_CHECKED_NAME,
            TO_CHAR(HE.RE_CHECKED_TIME,'YYYY-MM-DD') RE_CHECKED_TIME,
            HE.RE_PAYEE_TYPE,
            HE.CUST_ID,
            HE.CUST_ID,
            HE.RE_PAYEE_NAME,
            HE.RE_PAYEE_UNIT,
            HE.RE_PAYEE_ADDRESS,
            HE.RE_PAYEE_BANK,
            HE.RE_PAYEE_ACCOUNT,
            HE.RE_PAYEE_BANK_ADDR,
            TO_CHAR(HE.RE_REAL_TIME, 'YYYY-MM-DD') RE_REAL_TIME,
            HE.RE_STATUS,
            (SELECT DIC.FLAG
                FROM T_SYS_DATA_DICTIONARY DIC
                WHERE DIC.CODE = HE.RE_STATUS
                AND DIC.TYPE = #{TK_STATUS}) STATUS,
           TO_CHAR(HE.CREATE_TIME, 'YYYY-MM-DD') CREATE_TIME,
           S.SUP_NAME,
           S.SUP_ID,
           P.POOL_ID
         FROM FI_REFUND_HEAD HE, FI_DEPOSIT_POOL P, FIL_PROJECT_HEAD H, T_SYS_SUPPLIERS S
         WHERE HE.RE_ID = P.RE_ID(+)
           AND P.PROJECT_ID = H.ID(+)
           AND H.SUP_ID = S.SUP_ID(+)
           AND HE.RE_TYPE = 2
         <if test="RE_STATUS!=null and RE_STATUS!=''">and HE.RE_STATUS = #{RE_STATUS}</if>
         <if test="RE_PAYEE_UNIT!=null and RE_PAYEE_UNIT!=''">and HE.RE_PAYEE_UNIT LIKE '%'|| #{RE_PAYEE_UNIT}||'%'</if>
         <if test="RE_DATE!=null and RE_DATE!=''">and TO_DATE(TO_CHAR(HE.RE_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') = TO_DATE(#{RE_DATE},'yyyy-MM-dd')</if>
         <if test="SUP_SHORTNAME!=null and SUP_SHORTNAME!=''">and S.SUP_SHORTNAME LIKE '%'|| #{SUP_SHORTNAME}||'%'</if>)T
</select>

<select id="getRefundDetailData" parameterType="Map" resultType="Map">
SELECT H.ID PRO_ID,
       H.PRO_CODE,
       CL.ID CUST_ID,
       CL.NAME CUST_NAME,
       H.PRODUCT_NAME,
       H.LEASE_TOPRIC,
       H.FINANCE_TOPRIC,
       H.TYPE_NAME,
       H.WHOLE_ENGINE_CODE,
       H.COMPANY_NAME,
       H.SUP_SHORTNAME,
       H.AMOUNT,
       TO_CHAR(H.START_CONFIRM_DATE, 'YYYY-MM-DD') START_CONFIRM_DATE,
       TO_CHAR(RE.RE_DATE, 'YYYY-MM-DD') RE_DATE,
       NVL(ROUND(RE.RE_MONEY, 2), 0) RE_MONEY,
       RP.STATUS,
       (SELECT MAX(TO_CHAR(DE.PAY_DATE, 'YYYY-MM-DD')) FROM FIL_RENT_PLAN_DETAIL DE
         WHERE DE.PAY_ID = RP.ID)  PAY_DATE,
          #{BZJ} BZJ
  FROM FI_REFUND_HEAD RE
  LEFT JOIN FI_DEPOSIT_POOL P ON RE.RE_ID = P.RE_ID
  LEFT JOIN FIL_PROJECT_HEAD H ON P.PROJECT_ID = H.ID
  LEFT JOIN FIL_RENT_PLAN_HEAD RP ON RP.PROJECT_ID = H.ID
  LEFT JOIN FIL_CUST_CLIENT CL ON CL.ID = H.CLIENT_ID
 WHERE RE.RE_TYPE = 2
 <if test="RE_ID !=null and RE_ID != ''">AND RE.RE_ID=#{RE_ID}</if>
 <if test="SUP_SHORTNAME !=null and SUP_SHORTNAME != ''">AND H.SUP_SHORTNAME LIKE '%'||#{SUP_SHORTNAME}||'%'</if>
 <if test="RE_PAYEE_UNIT !=null and RE_PAYEE_UNIT != ''">AND RE.RE_PAYEE_UNIT LIKE '%'||#{RE_PAYEE_UNIT}||'%'</if>
 <if test="RE_DATE != null and RE_DATE != ''">AND TO_DATE(TO_CHAR(RE.RE_DATE,'yyyy-MM-DD'),'yyyy-MM-dd') = TO_DATE(#{RE_DATE},'yyyy-MM-dd')</if>
</select>

<select id="toMgJQDKData" parameterType="Map" resultType="Map">
SELECT T1.*
  FROM (SELECT T.*, ROWNUM ROWNU
          FROM (SELECT FH.ID FH_ID,
                       FH.FI_PAY_MONEY,
                        NVL(((SELECT SUM(DE.D_PAY_MONEY) FROM FI_FUND_DETAIL DE WHERE DE.D_FUND_ID=FH.ID)-FH.FI_PAY_MONEY),0) D_PAY_MONEY,
                       TO_CHAR(FH.FI_PAY_DATE, 'YYYY-MM-DD') FI_PAY_DATE,
                       TO_CHAR(FH.FI_ACCOUNT_DATE, 'YYYY-MM-DD') FI_ACCOUNT_DATE,
                       FH.FI_PROJECT_NUM,
                       NVL(ROUND(FH.FI_REALITY_MONEY,2),0) FI_REALITY_MONEY,
                       FH.FI_REALITY_BANK,
                       (SELECT D.FLAG
                          FROM T_SYS_DATA_DICTIONARY D
                         WHERE D.CODE = FH.FI_STATUS
                           AND D.TYPE = #{hx_status}) FI_STATUS,
                       FH.FI_REMARK
                  FROM FI_FUND_HEAD FH
                 WHERE FH.FI_FLAG in (7,8)
                 AND FH.FI_SUPERCLASS_ID IS NULL
                 <if test="FH_ID != null and FH_ID != ''">AND FH.ID LIKE '%'||#{FH_ID}||'%'</if>
                 <if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">AND FH.FI_PAY_MONEY LIKE '%'||#{FI_PAY_MONEY}||'%'</if>
                 <if test="FI_PAY_DATE != null and FI_PAY_DATE != ''">AND TO_DATE(TO_CHAR(FH.FI_PAY_DATE,'yyyy-MM-dd'),'yyyy-MM-dd') >= TO_DATE(#{FI_PAY_DATE},'yyyy-MM-dd')</if>
                 <if test="FI_PAY_DATE1 != null and FI_PAY_DATE1 != ''"><![CDATA[AND TO_DATE(TO_CHAR(FH.FI_PAY_DATE,'yyyy-MM-dd'),'yyyy-MM-dd') <= TO_DATE(#{FI_PAY_DATE1},'yyyy-MM-dd')]]> </if>
                 <if test="FI_STATUS != null and FI_STATUS != ''">AND FH.FI_STATUS=#{FI_STATUS}</if>
                  ORDER BY FH.ID DESC,FH.FI_STATUS DESC) T WHERE ROWNUM &lt;= #{PAGE_END}
                ) T1
 WHERE T1.ROWNU >= #{PAGE_BEGIN}
</select>

<select id="getPoolData" parameterType="Map" resultType="Map">
SELECT * FROM FI_DEPOSIT_POOL D WHERE D.RE_ID=#{RE_ID}
</select>

<select id="toMgJQDKDataNu" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM(SELECT FH.ID FH_ID,
                       FH.FI_PAY_MONEY,
                        NVL(((SELECT SUM(DE.D_PAY_MONEY) FROM FI_FUND_DETAIL DE WHERE DE.D_FUND_ID=FH.ID)-FH.FI_PAY_MONEY),0) D_PAY_MONEY,
                       TO_CHAR(FH.FI_PAY_DATE, 'YYYY-MM-DD') FI_PAY_DATE,
                       TO_CHAR(FH.FI_ACCOUNT_DATE, 'YYYY-MM-DD') FI_ACCOUNT_DATE,
                       FH.FI_PROJECT_NUM,
                       NVL(ROUND(FH.FI_REALITY_MONEY,2),0) FI_REALITY_MONEY,
                       FH.FI_REALITY_BANK,
                       (SELECT D.FLAG
                          FROM T_SYS_DATA_DICTIONARY D
                         WHERE D.CODE = FH.FI_STATUS
                           AND D.TYPE = #{hx_status}) FI_STATUS,
                       FH.FI_REMARK
                  FROM FI_FUND_HEAD FH
                 WHERE FH.FI_FLAG in (7,8)
                 AND FH.FI_SUPERCLASS_ID IS NULL
                 <if test="FH_ID != null and FH_ID != ''">AND FH.ID LIKE '%'||#{FH_ID}||'%'</if>
                 <if test="FI_PAY_MONEY != null and FI_PAY_MONEY != ''">AND FH.FI_PAY_MONEY LIKE '%'||#{FI_PAY_MONEY}||'%'</if>
                 <if test="FI_PAY_DATE != null and FI_PAY_DATE != ''">AND TO_DATE(TO_CHAR(FH.FI_PAY_DATE,'yyyy-MM-dd'),'yyyy-MM-dd') >= TO_DATE(#{FI_PAY_DATE},'yyyy-MM-dd')</if>
                 <if test="FI_PAY_DATE1 != null and FI_PAY_DATE1 != ''"><![CDATA[AND TO_DATE(TO_CHAR(FH.FI_PAY_DATE,'yyyy-MM-dd'),'yyyy-MM-dd') <= TO_DATE(#{FI_PAY_DATE1},'yyyy-MM-dd')]]> </if>
                 <if test="FI_STATUS != null and FI_STATUS != ''">AND FH.FI_STATUS=#{FI_STATUS}</if>
                  ORDER BY FH.ID DESC,FH.FI_STATUS DESC)T
</select>

<select id="toRefundData" parameterType="Map" resultType="Map">
	SELECT TO_CHAR(RE_DATE,'YYYY-MM-DD') RE_DATE,
       RE_MONEY,
       RE_PROJECT_COUNT,
       RE_PAYEE_UNIT,
       RE_PAYEE_ADDRESS,
       RE_PAYEE_ACCOUNT,
       RE_PAYEE_BANK,
       RE_PAYEE_BANK_ADDR,
       TO_CHAR(RE_REAL_TIME,'yyyy-MM-dd') RE_REAL_TIME,
       RE_PAY_BANK
  FROM FI_REFUND_HEAD H
 WHERE H.RE_ID = #{RE_ID}
</select>

<select id="getRefundData" parameterType="Map" resultType="Map">
	SELECT RH.RE_PAYEE_UNIT,
       RH.RE_PAYEE_ADDRESS,
       RH.RE_PAYEE_BANK,
       RH.RE_PAYEE_ACCOUNT,
       RH.RE_PAYEE_BANK_ADDR,
       TO_CHAR(RH.RE_REAL_TIME,'yyyy-MM-dd') RE_REAL_TIME,
       RH.RE_ID
    FROM FI_REFUND_HEAD RH WHERE RH.RE_ID=#{RE_ID}
</select>

<select id="getReDetailSum" parameterType="Map" resultType="int">
	SELECT COUNT(1) FROM FI_REFUND_ACCOUNT WHERE RE_ID=#{RE_ID}
</select>

<select id="getFundDetailByFundId" parameterType="Map" resultType="Map">
	SELECT DISTINCT FPH.ID PROJECT_ID
	  FROM FI_FUND_DETAIL DE, FIL_PROJECT_HEAD FPH
	 WHERE DE.D_PROJECT_CODE = FPH.PRO_CODE(+)
	   AND DE.D_FUND_ID = #{HEAD_ID}
</select>

<select id="findPoolDataL" parameterType="Map" resultType="Map">
	SELECT DISTINCT P.SOURCE_ID SOURCE_ID
	  FROM FI_DEPOSIT_POOL P
	LEFT JOIN FIL_PROJECT_HEAD H ON P.PROJECT_ID = H.ID
	LEFT JOIN FI_FUND_DETAIL DE ON DE.D_PROJECT_CODE = H.PRO_CODE
	WHERE DE.D_FUND_ID = #{FUND_ID}
	AND TYPE = 4
</select>	

<select id="getSuppliers" parameterType="Map" resultType="Map">
	SELECT S.LOANS_OWN_UNIT,S.LOANS_OWN_ADDR, S.LOANS_OWN_BANK,S.LOANS_OWN_ACCOUNT
	  FROM T_SYS_SUPPLIERS S
	 WHERE S.SUP_SHORTNAME = #{SUP_SHORTNAME}
</select>


<insert id="doInsertAccountRe" parameterType="Map">
INSERT INTO FI_REFUND_ACCOUNT(
     ID, RE_ID, PRO_ID, REFUND_REALITY_MONEY <if test="REMARK!=null">, REMARK</if>
)VALUES(SEQ_REFUND_ACCOUNT.NEXTVAL,#{RE_ID},#{PRO_ID},#{REFUND_REALITY_MONEY}<if test="REMARK!=null">,#{REMARK}</if>)
</insert>

<insert id="addRefundCUST" parameterType="Map">
INSERT INTO FI_REFUND_HEAD
  (
    RE_ID,
    RE_CODE,
    RE_DATE,
    RE_MONEY,
    RE_PROJECT_COUNT,
    RE_TYPE,
    RE_APPLY_NAME,
    RE_APPLY_TIME,
    RE_PAYEE_TYPE,
     <if test="CUST_ID!=null and CUST_ID!=''">CUST_ID,</if>
    <if test="RE_PAYEE_NAME !=null and RE_PAYEE_NAME !=''">RE_PAYEE_NAME,</if>
    <if test="RE_PAYEE_UNIT !=null and RE_PAYEE_UNIT !=''">RE_PAYEE_UNIT,</if>
    <if test="RE_PAYEE_BANK !=null and RE_PAYEE_BANK !=''">RE_PAYEE_BANK,</if>
    <if test="RE_PAYEE_ACCOUNT !=null and RE_PAYEE_ACCOUNT !=''">RE_PAYEE_ACCOUNT,</if>
    <if test="RE_PAYEE_BANK_ADDR !=null and RE_PAYEE_BANK_ADDR !=''">RE_PAYEE_BANK_ADDR,</if>
    RE_STATUS,
    CREATE_TIME 
  )
  VALUES
  (
    #{RE_ID},
    #{RE_CODE},
    TO_DATE(#{RE_DATE},'YYYY-MM-DD'),
    #{RE_MONEY},
    #{RE_PROJECT_COUNT},
    #{RE_TYPE},
    #{RE_APPLY_NAME},
    TO_DATE(#{RE_APPLY_TIME},'YYYY-MM-DD'),
    #{RE_PAYEE_TYPE},
    <if test="CUST_ID!=null and CUST_ID!=''">#{CUST_ID},</if>
    <if test="RE_PAYEE_NAME !=null and RE_PAYEE_NAME !=''">#{RE_PAYEE_NAME},</if>
    <if test="RE_PAYEE_UNIT !=null and RE_PAYEE_UNIT !=''">#{RE_PAYEE_UNIT},</if>
    <if test="RE_PAYEE_BANK !=null and RE_PAYEE_BANK !=''">#{RE_PAYEE_BANK},</if>
    <if test="RE_PAYEE_ACCOUNT !=null and RE_PAYEE_ACCOUNT !=''">#{RE_PAYEE_ACCOUNT},</if>
    <if test="RE_PAYEE_BANK_ADDR !=null and RE_PAYEE_BANK_ADDR !=''">#{RE_PAYEE_BANK_ADDR},</if>
    #{RE_STATUS},
    SYSDATE
  ) 
</insert>

<update id="updateCUSTRefundId" parameterType="Map">
UPDATE FI_DEPOSIT_POOL P
   SET P.STATUS = #{STATUS},
       P.RE_ID = #{RE_ID}
WHERE  P.POOL_ID IN (${POOL_ID})      
</update>

<update id="doUpdateRefund" parameterType="Map">
UPDATE FI_REFUND_HEAD 
SET RE_ID=#{RE_ID}
<if test="RE_REAL_TIME != null">,RE_REAL_TIME=TO_DATE(#{RE_REAL_TIME},'yyyy-MM-dd')</if>
<if test="RE_PAYEE_ADDRESS != null">,RE_PAYEE_ADDRESS=#{RE_PAYEE_ADDRESS}</if>
<if test="RE_PAYEE_BANK != null">,RE_PAYEE_BANK=#{RE_PAYEE_BANK}</if>
<if test="RE_PAYEE_ACCOUNT != null">,RE_PAYEE_ACCOUNT=#{RE_PAYEE_ACCOUNT}</if>
<if test="RE_PAYEE_BANK_ADDR != null">,RE_PAYEE_BANK_ADDR=#{RE_PAYEE_BANK_ADDR}</if>
<if test="RE_STATUS != null">,RE_STATUS=#{RE_STATUS}</if>
<if test="RE_PAY_BANK != null">,RE_PAY_BANK=#{RE_PAY_BANK}</if>
,RE_CHECKED_CODE=#{USERCOE}
,RE_CHECKED_NAME=#{USERNAME}
,RE_CHECKED_TIME=SYSDATE
WHERE RE_ID=#{RE_ID}
</update>

<update id="doUpdatebeginingStatus" parameterType="String">
UPDATE FI_R_BEGINNING B
   SET B.BEGINNING_STATUS = 0,
       B.BEGINNING_FLAG   = 0,
       B.BEGINNING_PAID   = (CASE WHEN B.BEGINNING_PAID = B.BEGINNING_MONEY THEN 0 
                                  ELSE (B.BEGINNING_MONEY - (SELECT SUM(D.D_PAY_MONEY) FROM FI_FUND_DETAIL D WHERE D.D_BEGING_ID = #{beginning})) END)
 WHERE B.BEGINNING_ID IN (SELECT D.D_BEGING_ID FROM FI_FUND_DETAIL D WHERE D.D_BEGING_ID = #{beginning})
</update>

<update id="doUpdatebeginingJoinStatus" parameterType="String">
UPDATE FI_R_BEGINNING_JOIN FRBJ
   SET FRBJ.LOCKTYPE = 1
 WHERE FRBJ.PRO_CODE IN (SELECT DISTINCT D.D_PAY_CODE
                           FROM FI_FUND_DETAIL D
                          WHERE D.D_FUND_ID = #{HEAD_ID})
   AND FRBJ.BEGINNING_NUM IN
       (SELECT FRB.BEGINNING_NUM
          FROM FI_FUND_DETAIL D, FI_R_BEGINNING FRB
         WHERE D.D_BEGING_ID = FRB.BEGINNING_ID(+) AND D.D_FUND_ID = #{HEAD_ID})
</update>

<update id="doUpdateOVERDUEstatus" parameterType="Map">
UPDATE FI_OVERDUE OV
   SET OV.PENALTY_PAID =(CASE WHEN OV.PENALTY_RECE = OV.PENALTY_PAID THEN 0 ELSE (OV.PENALTY_RECE - (SELECT SUM(DD.D_PAY_MONEY) FROM FI_FUND_DETAIL DD WHERE DD.D_PAY_CODE = #{PAY_CODE} AND DD.PERIOD = #{PERIOD} AND DD.D_FUND_ID = #{HEAD_ID}))END) ,
       OV.DUE_STATUS = 0, 
       OV.OVERDUE_STATUS=0
 WHERE OV.PAY_CODE IN (#{PAY_CODE})
   AND  OV.PERIOD IN(#{PERIOD})
</update>

<update id="doUpdatePOOLmoney" parameterType="String">
UPDATE FI_DEPOSIT_POOL P 
SET P.CANUSE_MONEY = nvl((select max(a.FA_CAN_USE_MONEY)
                              from fi_fund_account a
                             where a.fa_fund_id = #{HEAD_ID}),
                            P.BASE_MONEY)
 WHERE P.PROJECT_ID IN
       (SELECT FPH.ID
          FROM FI_FUND_DETAIL DE
          LEFT JOIN FIL_PROJECT_HEAD FPH ON DE.D_PROJECT_CODE = FPH.PRO_CODE
         WHERE DE.D_FUND_ID = #{HEAD_ID})
</update>


<select id="getBeginningList1" parameterType="String" resultType="Map">	
	SELECT D.D_BEGING_ID,D.D_PAY_CODE, D.PERIOD, D.D_STATUS FROM FI_FUND_DETAIL D WHERE D.D_FUND_ID = #{HEAD_ID}
</select>

<select id="getZfch" parameterType="String" resultType="String">
	SELECT MAX(ID) FUND_ID FROM FI_FUND_HEAD WHERE FI_SUPERCLASS_ID=#{SOURCE_ID}
</select>

<delete id="doZfch" parameterType="Map">
	DELETE FROM FI_FUND_HEAD WHERE FI_SUPERCLASS_ID=#{SOURCE_ID}
</delete>

<delete id="delReDetTail" parameterType="Map">
	DELETE FROM FI_REFUND_ACCOUNT WHERE RE_ID=#{RE_ID}
</delete>


<delete id="deleteFundHeadByIds"  parameterType="String">
	DELETE FROM FI_FUND_HEAD T WHERE T.ID = #{HEAD_ID}
</delete>


<delete id="deleteFundDetailByIds"  parameterType="String">
	DELETE FROM FI_FUND_DETAIL T WHERE  T.D_FUND_ID= #{HEAD_ID}
</delete>

<delete id="deleteFundAccountByIds"  parameterType="String">
	DELETE FROM FI_FUND_ACCOUNT WHERE FA_FUND_ID=#{HEAD_ID}
</delete>

<select id="IsDunByPayListCOde" parameterType="Map" resultType="int">
	select count(ID) from fi_overdue fo where trunc(fo.create_date)=trunc(sysdate) and pay_code=#{PAYLIST_CODE} and NVL(PENALTY_RECE,0)-NVL(PENALTY_PAID,0)>0.0005
</select>

<update id="updatePayInfoByPaylistCode" parameterType="Map">
	update FIL_RENT_PLAN_HEAD set STATUS=31 where ID in (select ID from fil_rent_plan_head_max_v where PAYLIST_CODE=#{PAYLIST_CODE})
</update>

<update id="updateStatusByPaylistCode" parameterType="Map">
	update FIL_RENT_PLAN_HEAD set STATUS=0 where ID in (select ID from fil_rent_plan_head_max_v where PAYLIST_CODE=#{PAYLIST_CODE})
</update>

<select id="upMoneyToJoin" statementType="CALLABLE" parameterType="map">
	{call PRC_BE_QJL_PAY_CODE(#{PAYLIST_CODE})}
</select>

<select id="queryBaseInfoByPayListCode" parameterType="Map" resultType="Map">
	select * from FI_DEPOSIT_POOL FDP where FDP.PAYLIST_CODE=#{PAYLIST_CODE} AND FDP.TYPE=4
</select>

<select id="queryBaseInfoByPayListCodeDB" parameterType="Map" resultType="Map">
	select * from FI_DEPOSIT_POOL FDP where FDP.PAYLIST_CODE=#{PAYLIST_CODE} AND FDP.TYPE=1
</select>

<update id="updatePoolMoneyInfoByPoolId" parameterType="Map">
	update FI_DEPOSIT_POOL set CANUSE_MONEY=round(CANUSE_MONEY-NVL(#{USERMONEY},0),2) where POOL_ID=#{POOL_ID}
</update>

<select id="queryBaseInfoByPoolID" parameterType="Map" resultType="Map">
	select ROUND(NVL(FDP.BASE_MONEY,0),2) BASE_MONEY,
	ROUND(NVL(FDP.CANUSE_MONEY,0),2) CANUSE_MONEY,
	FDP.PAYLIST_CODE,FDP.POUNDAGE_WAY,FPH.PRO_CODE,
	FPH.LEASE_CODE,FPH.ID PROJECT_ID,FCC.ID CUST_ID,
	FCC.NAME CUST_NAME,fcc.type CUST_TYPE,fr.ID PAY_ID,
	to_char(FDP.PAY_TIME,'yyyy-MM-dd') PAY_DATE,VPS.SUP_NAME,VPS.SUP_ID
	from FI_DEPOSIT_POOL FDP
	left join fil_rent_plan_head_max_v fr on FDP.Paylist_Code=fr.PAYLIST_CODE
	left join v_plan_scheme VPS on fr.PAYLIST_CODE=VPS.PAYLIST_CODE
	left join fil_project_head fph on fr.PROJECT_ID=fph.id
	left join fil_cust_client fcc on fph.client_id=fcc.id
	where FDP.POOL_ID=#{POOL_ID}
</select>

<select id="queryBaseInfoByPoolIDBackMoney" parameterType="Map" resultType="Map">
	select FDP.PAYLIST_CODE,FDP.POUNDAGE_WAY,FPH.PRO_CODE,
	FPH.LEASE_CODE,FPH.ID PROJECT_ID,FCC.ID CUST_ID,
	FCC.NAME CUST_NAME,fcc.type CUST_TYPE,fr.ID PAY_ID,
	to_char(FDP.PAY_TIME,'yyyy-MM-dd') PAY_DATE,
	ROUND(NVL(FRH.RE_MONEY,0),2) RE_MONEY,
	FRH.RE_CODE,to_char(FRH.RE_DATE,'yyyy-MM-dd') RE_DATE,
	FRH.RE_PAYEE_TYPE,FRH.RE_PAYEE_UNIT,
	FRH.RE_PAYEE_ADDRESS,FRH.RE_PAYEE_BANK,FRH.RE_PAYEE_ACCOUNT,VPS.SUP_NAME,FRH.RE_PAYEE_BANK_ADDR
	from FI_DEPOSIT_POOL FDP
	left join FI_REFUND_HEAD FRH on FDP.RE_ID=FRH.RE_ID
	left join fil_rent_plan_head_max_v fr on FDP.Paylist_Code=fr.PAYLIST_CODE
	left join v_plan_scheme VPS on fr.PAYLIST_CODE=VPS.PAYLIST_CODE
	left join fil_project_head fph on fr.PROJECT_ID=fph.id
	left join fil_cust_client fcc on fph.client_id=fcc.id
	where FDP.POOL_ID=#{POOL_ID} and FRH.RE_TYPE=2
</select>


<select id="queryPayListByPaylistCode" parameterType="Map" resultType="Map">
	select frb.paylist_code,to_char(frb.beginning_receive_data,'yyyy-MM-dd') PAY_DATA,frb.beginning_num,frb.ITEM_FLAG,ROUND(sum(NVL(frb.beginning_money,0)),2) beginning_money
	,ROUND(sum(NVL(frb.beginning_paid,0)),2) beginning_paid,ROUND(sum(NVL(frb.beginning_money,0)-NVL(frb.beginning_paid,0)),2) beginning_sheng,0 DKMONEY
	from fi_r_beginning frb 
	where frb.beginning_num is not null and frb.paylist_code=#{PAYLIST_CODE}
	group by frb.paylist_code,frb.beginning_num,frb.beginning_receive_data,frb.ITEM_FLAG
	order by frb.beginning_num
</select>


<select id="queryPeriodByPaylistCode"  parameterType="Map" resultType="Map">
	select frb.paylist_code,min(frb.beginning_num) PEROID from fi_r_beginning frb
	where frb.beginning_num is not null and frb.paylist_code=#{PAYLIST_CODE} and trunc(frb.beginning_receive_data)>=trunc(sysdate)
	group by frb.paylist_code
</select>

<select id="dkPeriodByPaylistCode"  parameterType="Map" resultType="int">
	select count(f.peroid) NUM from (
		select frb.paylist_code,frb.beginning_num PEROID,ROUND(sum(NVL(frb.beginning_money,0)-NVL(frb.beginning_paid,0)),2) beginning_sheng 
		from fi_r_beginning frb
		where frb.beginning_num is not null and frb.paylist_code=#{PAYLIST_CODE} and trunc(frb.beginning_receive_data)>=trunc(sysdate)
		group by frb.paylist_code,frb.beginning_num
		) f where f.beginning_sheng>0
</select>

<update id="updatePoolInfoStatus" parameterType="Map">
	update FI_DEPOSIT_POOL set STATUS=6 where POOL_ID =#{POOL_ID}
</update>

<update id="updatePoolInfoStatusBACK" parameterType="Map">
	update FI_DEPOSIT_POOL set STATUS=0 where POOL_ID =#{POOL_ID}
</update>

<update id="updatePoolInfoByPoolId" parameterType="Map">
	update FI_DEPOSIT_POOL set CANUSE_MONEY=round(CANUSE_MONEY-NVL(#{SHIYONGMONEY},0),2),STATUS=0 where POOL_ID=#{POOL_ID}
</update>

<update id="updatePoolInfoByPoolId1" parameterType="Map">
	update FI_DEPOSIT_POOL set CANUSE_MONEY=round(CANUSE_MONEY-NVL(#{SHIYONGMONEY},0),2),STATUS=1 where POOL_ID=#{POOL_ID}
</update>

<insert id="insertPoolDetail" parameterType="Map">
	insert into FI_DEPOSIT_POOL_DETAIL 
	(
		ID
		<if test="POOL_ID !=null and POOL_ID !=''">,POOL_ID</if>
		<if test="FUND_ID !=null and FUND_ID !=''">,FUND_ID</if>
		<if test="FUND_CODE !=null and FUND_CODE !=''">,FUND_CODE</if>
		<if test="TYPE !=null and TYPE !=''">,TYPE</if>
		<if test="USERMONEY !=null and USERMONEY !=''">,USERMONEY</if>
	)values(
		SEQ_FI_DEPOSIT_POOL_DETAIL.nextval
		<if test="POOL_ID !=null and POOL_ID !=''">,#{POOL_ID}</if>
		<if test="FUND_ID !=null and FUND_ID !=''">,#{FUND_ID}</if>
		<if test="FUND_CODE !=null and FUND_CODE !=''">,#{FUND_CODE}</if>
		<if test="TYPE !=null and TYPE !=''">,#{TYPE}</if>
		<if test="USERMONEY !=null and USERMONEY !=''">,#{USERMONEY}</if>
	)
</insert>

<select id="queryDetailByPoolId" parameterType="Map" resultType="map">
	select P.ID,P.POOL_ID,P.FUND_ID,P.FUND_CODE,to_char(P.CREDIT_TIME,'yyyy-MM-dd') CREDIT_TIME,P.TYPE,round(NVL(P.USERMONEY,0),2) USERMONEY,P.REMARK from FI_DEPOSIT_POOL_DETAIL P where P.POOL_ID=#{POOL_ID} order by P.ID desc
</select>

<select id="baseCustBank" parameterType="Map" resultType="map">
	select * from T_BASE_CUST_BANK where CUST_ID=#{CUST_ID} 
	<if test="CUST_NAME !=null and CUST_NAME !=''"> and CUST_NAME=#{CUST_NAME}</if>
</select>

<select id="baseSuppBank" parameterType="Map" resultType="map">
	select * from T_BASE_SUPP_BANK where SUPP_NAME=#{SUP_NAME} 
	<if test="SUP_ID !=null and SUP_ID !=''"> and SUPP_ID=#{SUP_ID}</if>
</select>

<select id="getSuppBankInfo" parameterType="Map" resultType="Map">
	SELECT S.LOANS_OWN_UNIT PAYEE_NAME,S.LOANS_OWN_ADDR PAY_BANK_ADDRESS, S.LOANS_OWN_BANK PAY_BANK_NAME,S.LOANS_OWN_ACCOUNT PAY_BANK_ACCOUNT
	  FROM T_SYS_SUPPLIERS S
	 WHERE S.SUP_SHORTNAME = #{SUP_NAME}
	 <if test="SUP_ID !=null and SUP_ID !=''"> and SUP_ID=#{SUP_ID}</if>
</select>

<select id="getCustBankInfo"  parameterType="Map" resultType="Map">
	SELECT CO.BANK_NAME PAY_BANK_NAME, CO.BANK_ACCOUNT PAY_BANK_ACCOUNT, CO.BANK_ADDRESS PAY_BANK_ADDRESS,CO.BANK_CUSTNAME PAYEE_NAME
	 FROM FIL_CUST_OPENINGBANK CO WHERE CO.CLIENT_ID =#{CUST_ID}  and FLAG=1 and rownum=1
</select>

<update id="updateCUSTRefundIdNew" parameterType="Map">
UPDATE FI_DEPOSIT_POOL P
   SET P.STATUS = #{STATUS},
       P.RE_ID = #{RE_ID}
WHERE  P.POOL_ID =#{POOL_ID}  
</update>

<select id="queryDetailInfoByPoolId" parameterType="String" resultType="Map">
	select * from FI_REFUND_HEAD FRH where FRH.RE_ID in (select FDP.RE_ID from FI_DEPOSIT_POOL FDP where FDP.POOL_ID=#{POOL_ID})
</select>

<update id="updatePoolStatus" parameterType="String">
	MERGE INTO FI_DEPOSIT_POOL t 
					USING (
						select round(NVL(FRH.RE_MONEY,0),2) RE_MONEY,FRH.RE_ID from FI_REFUND_HEAD FRH where FRH.RE_ID in (select FDP.RE_ID from FI_DEPOSIT_POOL FDP where FDP.POOL_ID=#{POOL_ID})
					) tt
					ON (t.RE_ID=tt.RE_ID and t.POOL_ID=#{POOL_ID} )
					WHEN MATCHED THEN UPDATE set t.CANUSE_MONEY=CANUSE_MONEY-tt.RE_MONEY,t.STATUS=3
</update>

<update id="updatePoolHeadStatus3" parameterType="map">
	update FI_REFUND_HEAD set RE_STATUS=3 where RE_ID=#{RE_ID}
</update>

<update id="updatePoolHeadStatus2" parameterType="map">
	update FI_REFUND_HEAD set RE_STATUS=2 where RE_ID=#{RE_ID}
</update>

<update id="updatePoolStatus0" parameterType="String">
	update FI_DEPOSIT_POOL set STATUS=0 where POOL_ID =#{POOL_ID}
</update>

<update id="updatePoolStatus1" parameterType="String">
	update FI_DEPOSIT_POOL set STATUS=1 where POOL_ID =#{POOL_ID}
</update>

<select id="queryPayHeadStatusInfo" parameterType="String" resultType="int">
	select count(1) COUNTNUM from fil_rent_plan_head_max_v where PAYLIST_CODE=#{PAYLIST_CODE} and STATUS in (3,6)
</select>


<select id="toMgCashDeposit_DB" parameterType="Map" resultType="Map">
SELECT T1.*
  FROM (SELECT T.*, ROWNUM ROWNU
          FROM (
          	select F.* from (
          			SELECT P.PROJECT_ID,
                       CU.NAME CUST_NAME,
                       CU.CUST_ID,
                       CU.ID CLIENT_ID,
                       CU.ID CL_ID,
                       CU.TYPE CUST_TYP,
                       H.CLERK_NAME,
                       H.PRO_NAME,
                       H.PRO_CODE,
                       H.LEASE_CODE,
                       H.STATUS PROJECT_STATUS,
                       H.DELIVER_DATE,
                       ROUND(NVL(P.BASE_MONEY,0),2) BASE_MONEY,
                       ROUND(NVL(P.CANUSE_MONEY,0),2) CANUSE_MONEY,
                       P.STATUS,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                         AND SD.TYPE = #{ZJC_STATUS}) STATUSFLAG,
                       TO_CHAR(P.THAW_TIME, 'YYYY-MM-DD') THAW_TIME,
                       TO_CHAR(P.PAY_TIME, 'YYYY-MM-DD') PAY_TIME,
                       P.TYPE,
                       P.POOL_ID,
                       P.PAYLIST_CODE,
                       P.POUNDAGE_WAY,
                       P.REMIND_FLAG,
                       FRP.ID PAY_ID,
                       FRP.STATUS PAY_STATUS,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = FRP.STATUS
                         AND SD.TYPE = #{PAY_STATUS}) PAY_STATUSFLAG,
                         VPS.SUP_ID,VPS.SUP_NAME,
                        CASE WHEN P.CANUSE_MONEY>0 then 1 ELSE 0 END PAGETYPE 
                  FROM FI_DEPOSIT_POOL  P,
                       fil_rent_plan_head_max_v FRP,
                       v_plan_scheme VPS,
                       FIL_PROJECT_HEAD H,
                       FIL_CUST_CLIENT  CU
                 WHERE P.PROJECT_ID = H.ID
                   AND P.PAYLIST_CODE = FRP.PAYLIST_CODE
                   AND P.PROJECT_ID=FRP.PROJECT_ID
                   AND H.CLIENT_ID = CU.ID
                   AND FRP.PAYLIST_CODE=VPS.PAYLIST_CODE
                   AND P.TYPE = 1
                   <if test="CUST_NAME!=null and CUST_NAME!=''">AND CU.NAME LIKE '%'||#{CUST_NAME}||'%'</if>
                   <if test="STATUS!=null and STATUS!=''">AND P.STATUS LIKE '%'||#{STATUS}||'%'</if>
                   <if test="PRO_CODE!=null and PRO_CODE!=''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="CANUSE_MONEY!=null and CANUSE_MONEY!=''">AND P.CANUSE_MONEY LIKE '%'||#{CANUSE_MONEY}||'%'</if>
                   <if test="LEASE_CODE!=null and LEASE_CODE!=''">AND H.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
                   <if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND P.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
                   <if test="POUNDAGE_WAY !=null and POUNDAGE_WAY !=''">AND P.POUNDAGE_WAY =#{POUNDAGE_WAY}</if>
                   <if test="BASE_MONEY!=null and BASE_MONEY!=''">AND P.BASE_MONEY LIKE '%'||#{BASE_MONEY}||'%'</if>
                 ) F
                 ORDER BY F.PAGETYPE desc,F.REMIND_FLAG desc,F.PAYLIST_CODE,F.THAW_TIME) T WHERE ROWNUM &lt;= #{PAGE_END}) T1
 WHERE T1.ROWNU >= #{PAGE_BEGIN}
</select>

<select id="toMgCashDepositNu_DB" parameterType="Map" resultType="int">
SELECT COUNT(1) FROM(SELECT P.PROJECT_ID,
                       CU.NAME CUST_NAME,
                       CU.CUST_ID,
                       CU.ID CLIENT_ID,
                       CU.ID CL_ID,
                       CU.TYPE CUST_TYP,
                       H.CLERK_NAME,
                       H.PRO_NAME,
                       H.PRO_CODE,
                       H.STATUS PROJECT_STATUS,
                       H.DELIVER_DATE,
                       ROUND(NVL(P.BASE_MONEY,0),2) BASE_MONEY,
                       ROUND(NVL(P.CANUSE_MONEY,0),2) CANUSE_MONEY,
                       P.STATUS,
                       (SELECT SD.FLAG
                          FROM T_SYS_DATA_DICTIONARY SD
                         WHERE SD.CODE = P.STATUS
                         AND SD.TYPE = #{ZJC_STATUS}) STATUSFLAG,
                       TO_CHAR(P.THAW_TIME, 'YYYY-MM-DD') THAW_TIME,
                       TO_CHAR(P.PAY_TIME, 'YYYY-MM-DD') PAY_TIME,
                       P.TYPE,
                       P.POOL_ID,
                       P.PAYLIST_CODE,
                       P.POUNDAGE_WAY,
                       P.REMIND_FLAG,
                       FRP.ID PAY_ID
                  FROM FI_DEPOSIT_POOL  P,
                       fil_rent_plan_head_max_v FRP,
                       FIL_PROJECT_HEAD H,
                       FIL_CUST_CLIENT  CU
                 WHERE P.PROJECT_ID = H.ID
                   AND P.PAYLIST_CODE = FRP.PAYLIST_CODE
                   AND P.PROJECT_ID=FRP.PROJECT_ID
                   AND H.CLIENT_ID = CU.ID
                   AND P.TYPE = 1
                   <if test="CUST_NAME!=null and CUST_NAME!=''">AND CU.NAME LIKE '%'||#{CUST_NAME}||'%'</if>
                   <if test="STATUS!=null and STATUS!=''">AND P.STATUS LIKE '%'||#{STATUS}||'%'</if>
                   <if test="PRO_CODE!=null and PRO_CODE!=''">AND H.PRO_CODE LIKE '%'||#{PRO_CODE}||'%'</if>
                   <if test="CANUSE_MONEY!=null and CANUSE_MONEY!=''">AND P.CANUSE_MONEY LIKE '%'||#{CANUSE_MONEY}||'%'</if>
                   <if test="LEASE_CODE!=null and LEASE_CODE!=''">AND H.LEASE_CODE LIKE '%'||#{LEASE_CODE}||'%'</if>
                   <if test="PAYLIST_CODE !=null and PAYLIST_CODE !=''">AND P.PAYLIST_CODE LIKE '%'||#{PAYLIST_CODE}||'%'</if>
                   <if test="POUNDAGE_WAY !=null and POUNDAGE_WAY !=''">AND P.POUNDAGE_WAY =#{POUNDAGE_WAY}</if>
                   <if test="BASE_MONEY!=null and BASE_MONEY!=''">AND P.BASE_MONEY LIKE '%'||#{BASE_MONEY}||'%'</if>
                 ORDER BY P.REMIND_FLAG,P.PAYLIST_CODE,P.THAW_TIME)T
</select>


<select id="queryDBByPoolIDBackMoney" parameterType="Map" resultType="Map">
	select FDP.PAYLIST_CODE,FPH.PRO_CODE,
	FPH.LEASE_CODE,FPH.ID PROJECT_ID,FCC.ID CUST_ID,
	FCC.NAME CUST_NAME,fcc.type CUST_TYPE,fr.ID PAY_ID,
	to_char(FDP.PAY_TIME,'yyyy-MM-dd') PAY_DATE,
	ROUND(NVL(FRH.RE_MONEY,0),2) RE_MONEY,
	FRH.RE_CODE,to_char(FRH.RE_DATE,'yyyy-MM-dd') RE_DATE,
	FRH.RE_PAYEE_TYPE,FRH.RE_PAYEE_UNIT,
	FRH.RE_PAYEE_ADDRESS,FRH.RE_PAYEE_BANK,FRH.RE_PAYEE_ACCOUNT,VPS.SUP_NAME
	from FI_DEPOSIT_POOL FDP
	left join FI_REFUND_HEAD FRH on FDP.RE_ID=FRH.RE_ID
	left join fil_rent_plan_head_max_v fr on FDP.Paylist_Code=fr.PAYLIST_CODE
	left join v_plan_scheme VPS on fr.PAYLIST_CODE=VPS.PAYLIST_CODE
	left join fil_project_head fph on fr.PROJECT_ID=fph.id
	left join fil_cust_client fcc on fph.client_id=fcc.id
	where FDP.POOL_ID=#{POOL_ID} and FRH.RE_TYPE=1
</select>

<insert id="callPool" statementType="CALLABLE" >
		 <![CDATA[  
			{call INSERT_DEPOSIT_POOL()}
		 ]]>  
</insert>

<insert id="callDBPool" statementType="CALLABLE" >
		 <![CDATA[  
			{call INSERT_DEPOSIT_POOL_DB()}
		 ]]>  
</insert>
</mapper>
